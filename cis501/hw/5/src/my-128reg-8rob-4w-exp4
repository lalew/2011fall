g++ -Wall -Wextra -Wno-long-long -O2 -lm -D DEBUG -o simulator_d simulator.c
simulator.c:112: warning: unused parameter 'instrAddr'
simulator.c:112: warning: unused parameter 'TNnotBranch'
gzcat sjeng-1K.trace.gz | ./simulator_d
Processing trace...
1: 0 1 2 2, r49 -> p49 | J JMP_IMM
2: 7 8 12 12, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD
3: 7 12 13 13, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD
4: 7 13 14 14, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA
5: 7 14 15 15, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD
6: 8 15 19 19, r6 -> p53, r6 -> p54 [p53] | MOV LOAD
7: 8 19 20 20, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM
8: 8 20 21 21, r49 -> p56 | J JMP_IMM
9: 8 19 20 21, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM
10: 12 20 21 21, r49 -> p58 | J JMP_IMM
11: 26 27 28 28, r2 -> p51, r8 -> p59 [p8] | MOV ADD
12: 26 28 29 29, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA
13: 26 29 30 30, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD
14: 26 30 31 31, r8 -> p61, r8 -> p62 [p61] | LEA LEA
15: 27 28 29 31, r2 -> p51, r2 -> p63 [p51], r49 -> p64 [p58] | SHL SHL_IMM
16: 27 28 29 31 | JMP JMP_IMM
17: 27 28 29 31, r6 -> p54, r44 -> p65 [p57], r49 -> p66 [p64] | CMP SUB_IMM
18: 27 29 30 32, r49 -> p66 | J JMP_IMM
19: 28 29 30 32, r6 -> p54, r44 -> p67 [p65], r49 -> p68 [p66] | CMP SUB_IMM
20: 29 30 31 32, r49 -> p68 | J JMP_IMM
21: 30 31 32 32, r6 -> p54, r44 -> p69 [p67], r49 -> p70 [p68] | CMP SUB_IMM
22: 31 32 33 33, r49 -> p70 | J JMP_IMM
23: 31 32 33 33, r1 -> p1, r1 -> p71 [p1], r49 -> p72 [p70] | ADD ADD_IMM
24: 31 32 33 33, r0 -> p0, r0 -> p73 [p0] | INC ADD_IMM
25: 31 33 34 34, r0 -> p73, r44 -> p74 [p69], r49 -> p75 [p72] | CMP SUB_IMM
26: 32 34 35 35, r49 -> p75 | J JMP_IMM
27: 40 41 45 45, r1 -> p71, r44 -> p76 [p74] | MOVSX LOAD
28: 40 45 46 46, r44 -> p76, r2 -> p77 [p63] | MOVSX SEXT_DWORD_TO_QWORD
29: 40 46 47 47, r7 -> p7, r2 -> p77, r6 -> p78 [p54] | LEA LEA
30: 40 47 48 48, r6 -> p78, r6 -> p79 [p78] | MOVSX SEXT_DWORD_TO_QWORD
31: 41 48 52 52, r6 -> p79, r6 -> p80 [p79] | MOV LOAD
32: 41 52 53 53, r6 -> p80, r44 -> p81 [p76], r49 -> p82 [p75] | CMP SUB_IMM
33: 41 53 54 54, r49 -> p82 | J JMP_IMM
34: 41 52 53 54, r6 -> p80, r44 -> p83 [p81], r49 -> p84 [p82] | CMP SUB_IMM
35: 45 53 54 54, r49 -> p84 | J JMP_IMM
36: 59 60 61 61, r2 -> p77, r8 -> p85 [p62] | MOV ADD
37: 59 61 62 62, r8 -> p85, r7 -> p7, r8 -> p86 [p85] | LEA LEA
38: 59 62 63 63, r8 -> p86, r8 -> p87 [p86] | MOVSX SEXT_DWORD_TO_QWORD
39: 59 63 64 64, r8 -> p87, r8 -> p88 [p87] | LEA LEA
40: 60 61 62 64, r2 -> p77, r2 -> p89 [p77], r49 -> p90 [p84] | SHL SHL_IMM
41: 60 61 62 64 | JMP JMP_IMM
42: 60 61 62 64, r6 -> p80, r44 -> p91 [p83], r49 -> p92 [p90] | CMP SUB_IMM
43: 60 62 63 65, r49 -> p92 | J JMP_IMM
44: 61 62 63 65, r6 -> p80, r44 -> p93 [p91], r49 -> p94 [p92] | CMP SUB_IMM
45: 62 63 64 65, r49 -> p94 | J JMP_IMM
46: 63 64 65 65, r6 -> p80, r44 -> p95 [p93], r49 -> p96 [p94] | CMP SUB_IMM
47: 64 65 66 66, r49 -> p96 | J JMP_IMM
48: 64 65 66 66, r1 -> p71, r1 -> p97 [p71], r49 -> p98 [p96] | ADD ADD_IMM
49: 64 65 66 66, r0 -> p73, r0 -> p99 [p73] | INC ADD_IMM
50: 64 66 67 67, r0 -> p99, r44 -> p100 [p95], r49 -> p101 [p98] | CMP SUB_IMM
51: 65 67 68 68, r49 -> p101 | J JMP_IMM
52: 65 66 70 70, r1 -> p97, r44 -> p102 [p100] | MOVSX LOAD
53: 65 70 71 71, r44 -> p102, r2 -> p103 [p89] | MOVSX SEXT_DWORD_TO_QWORD
54: 65 71 72 72, r7 -> p7, r2 -> p103, r6 -> p104 [p80] | LEA LEA
55: 66 72 73 73, r6 -> p104, r6 -> p105 [p104] | MOVSX SEXT_DWORD_TO_QWORD
56: 66 73 77 77, r6 -> p105, r6 -> p106 [p105] | MOV LOAD
57: 66 77 78 78, r6 -> p106, r44 -> p107 [p102], r49 -> p108 [p101] | CMP SUB_IMM
58: 67 78 79 79, r49 -> p108 | J JMP_IMM
59: 68 77 78 79, r6 -> p106, r44 -> p109 [p107], r49 -> p110 [p108] | CMP SUB_IMM
60: 70 78 79 79, r49 -> p110 | J JMP_IMM
61: 71 72 73 79, r2 -> p103, r8 -> p111 [p88] | MOV ADD
62: 72 73 74 80, r8 -> p111, r7 -> p7, r8 -> p112 [p111] | LEA LEA
63: 73 74 75 80, r8 -> p112, r8 -> p113 [p112] | MOVSX SEXT_DWORD_TO_QWORD
64: 77 78 79 80, r8 -> p113, r8 -> p114 [p113] | LEA LEA
65: 78 79 80 80, r2 -> p103, r2 -> p115 [p103], r49 -> p116 [p110] | SHL SHL_IMM
66: 79 80 81 81 | JMP JMP_IMM
67: 79 80 81 81, r6 -> p106, r44 -> p117 [p109], r49 -> p118 [p116] | CMP SUB_IMM
68: 79 81 82 82, r49 -> p118 | J JMP_IMM
69: 79 80 81 82, r6 -> p106, r44 -> p119 [p117], r49 -> p120 [p118] | CMP SUB_IMM
70: 80 81 82 82, r49 -> p120 | J JMP_IMM
71: 80 81 82 82, r6 -> p106, r44 -> p121 [p119], r49 -> p122 [p120] | CMP SUB_IMM
72: 80 82 83 83, r49 -> p122 | J JMP_IMM
73: 80 81 82 83, r1 -> p97, r1 -> p123 [p97], r49 -> p124 [p122] | ADD ADD_IMM
74: 81 82 83 83, r0 -> p99, r0 -> p125 [p99] | INC ADD_IMM
75: 81 83 84 84, r0 -> p125, r44 -> p126 [p121], r49 -> p127 [p124] | CMP SUB_IMM
76: 82 84 85 85, r49 -> p127 | J JMP_IMM
77: 90 91 92 92, r0 -> p44 [p125] | XOR ADD
78: 90 91 92 92, r1 -> p2 [p123] | MOV ADD_IMM
79: 90 91 92 92 | JMP JMP_IMM
80: 90 92 93 93, r0 -> p44, r44 -> p6 [p126], r49 -> p52 [p127] | CMP SUB_IMM
81: 91 93 94 94, r49 -> p52 | J JMP_IMM
82: 99 100 101 101, r7 -> p7, r2 -> p53 [p115] | MOV ADD
83: 99 100 104 104, r1 -> p2, r44 -> p50 [p6] | ADD LOAD
84: 99 104 105 105, r2 -> p53, r44 -> p50, r2 -> p49 [p53], r49 -> p55 [p52] | ADD ADD
85: 99 105 106 106, r2 -> p49, r2 -> p56 [p49] | MOVSX SEXT_DWORD_TO_QWORD
86: 100 106 110 110, r2 -> p56, r45 -> p8 [p45] | CMP LOAD
87: 100 110 111 111, r45 -> p8, r44 -> p59 [p50], r49 -> p60 [p55] | CMP SUB_IMM
88: 100 111 112 112, r49 -> p60 | J JMP_IMM
89: 100 101 102 112, r1 -> p2, r1 -> p61 [p2], r49 -> p51 [p60] | ADD ADD_IMM
90: 101 102 103 112, r0 -> p44, r0 -> p58 [p44] | INC ADD_IMM
91: 104 105 106 112, r0 -> p58, r44 -> p57 [p59], r49 -> p64 [p51] | CMP SUB_IMM
92: 105 106 107 113, r49 -> p64 | J JMP_IMM
93: 112 113 114 114, r7 -> p7, r2 -> p65 [p56] | MOV ADD
94: 112 113 117 117, r1 -> p61, r44 -> p66 [p57] | ADD LOAD
95: 112 117 118 118, r2 -> p65, r44 -> p66, r2 -> p67 [p65], r49 -> p68 [p64] | ADD ADD
96: 112 118 119 119, r2 -> p67, r2 -> p1 [p67] | MOVSX SEXT_DWORD_TO_QWORD
97: 113 119 123 123, r2 -> p1, r45 -> p70 [p8] | CMP LOAD
98: 113 123 124 124, r45 -> p70, r44 -> p0 [p66], r49 -> p69 [p68] | CMP SUB_IMM
99: 113 124 125 125, r49 -> p69 | J JMP_IMM
100: 113 114 115 125, r1 -> p61, r1 -> p72 [p61], r49 -> p74 [p69] | ADD ADD_IMM
101: 114 115 116 125, r0 -> p58, r0 -> p63 [p58] | INC ADD_IMM
102: 117 118 119 125, r0 -> p63, r44 -> p54 [p0], r49 -> p78 [p74] | CMP SUB_IMM
103: 118 119 120 126, r49 -> p78 | J JMP_IMM
104: 119 120 121 126, r7 -> p7, r2 -> p79 [p1] | MOV ADD
105: 123 124 128 128, r1 -> p72, r44 -> p76 [p54] | ADD LOAD
106: 124 128 129 129, r2 -> p79, r44 -> p76, r2 -> p75 [p79], r49 -> p81 [p78] | ADD ADD
107: 125 129 130 130, r2 -> p75, r2 -> p82 [p75] | MOVSX SEXT_DWORD_TO_QWORD
108: 125 130 134 134, r2 -> p82, r45 -> p62 [p70] | CMP LOAD
109: 125 134 135 135, r45 -> p62, r44 -> p85 [p76], r49 -> p86 [p81] | CMP SUB_IMM
110: 125 135 136 136, r49 -> p86 | J JMP_IMM
111: 126 127 128 136, r1 -> p72, r1 -> p87 [p72], r49 -> p77 [p86] | ADD ADD_IMM
112: 126 127 128 136, r0 -> p63, r0 -> p84 [p63] | INC ADD_IMM
113: 128 129 130 136, r0 -> p84, r44 -> p83 [p85], r49 -> p90 [p77] | CMP SUB_IMM
114: 129 130 131 137, r49 -> p90 | J JMP_IMM
115: 130 131 132 137, r7 -> p7, r2 -> p91 [p82] | MOV ADD
116: 134 135 139 139, r1 -> p87, r44 -> p92 [p83] | ADD LOAD
117: 135 139 140 140, r2 -> p91, r44 -> p92, r2 -> p93 [p91], r49 -> p94 [p90] | ADD ADD
118: 136 140 141 141, r2 -> p93, r2 -> p71 [p93] | MOVSX SEXT_DWORD_TO_QWORD
119: 136 141 145 145, r2 -> p71, r45 -> p96 [p62] | CMP LOAD
120: 136 145 146 146, r45 -> p96, r44 -> p73 [p92], r49 -> p95 [p94] | CMP SUB_IMM
121: 136 146 147 147, r49 -> p95 | J JMP_IMM
122: 137 138 139 147, r1 -> p87, r1 -> p98 [p87], r49 -> p100 [p95] | ADD ADD_IMM
123: 137 138 139 147, r0 -> p84, r0 -> p89 [p84] | INC ADD_IMM
124: 139 140 141 147, r0 -> p89, r44 -> p80 [p73], r49 -> p104 [p100] | CMP SUB_IMM
125: 140 141 142 148, r49 -> p104 | J JMP_IMM
126: 141 142 143 148, r7 -> p7, r2 -> p105 [p71] | MOV ADD
127: 145 146 150 150, r1 -> p98, r44 -> p102 [p80] | ADD LOAD
128: 146 150 151 151, r2 -> p105, r44 -> p102, r2 -> p101 [p105], r49 -> p107 [p104] | ADD ADD
129: 147 151 152 152, r2 -> p101, r2 -> p108 [p101] | MOVSX SEXT_DWORD_TO_QWORD
130: 147 152 156 156, r2 -> p108, r45 -> p88 [p96] | CMP LOAD
131: 147 156 157 157, r45 -> p88, r44 -> p111 [p102], r49 -> p112 [p107] | CMP SUB_IMM
132: 147 157 158 158, r49 -> p112 | J JMP_IMM
133: 148 149 150 158, r1 -> p98, r1 -> p113 [p98], r49 -> p103 [p112] | ADD ADD_IMM
134: 148 149 150 158, r0 -> p89, r0 -> p110 [p89] | INC ADD_IMM
135: 150 151 152 158, r0 -> p110, r44 -> p109 [p111], r49 -> p116 [p103] | CMP SUB_IMM
136: 151 152 153 159, r49 -> p116 | J JMP_IMM
137: 152 153 154 159, r7 -> p7, r2 -> p117 [p108] | MOV ADD
138: 156 157 161 161, r1 -> p113, r44 -> p118 [p109] | ADD LOAD
139: 157 161 162 162, r2 -> p117, r44 -> p118, r2 -> p119 [p117], r49 -> p120 [p116] | ADD ADD
140: 158 162 163 163, r2 -> p119, r2 -> p97 [p119] | MOVSX SEXT_DWORD_TO_QWORD
141: 158 163 167 167, r2 -> p97, r45 -> p122 [p88] | CMP LOAD
142: 158 167 168 168, r45 -> p122, r44 -> p99 [p118], r49 -> p121 [p120] | CMP SUB_IMM
143: 158 168 169 169, r49 -> p121 | J JMP_IMM
144: 159 160 161 169, r1 -> p113, r1 -> p124 [p113], r49 -> p125 [p121] | ADD ADD_IMM
145: 159 160 161 169, r0 -> p110, r0 -> p123 [p110] | INC ADD_IMM
146: 161 162 163 169, r0 -> p123, r44 -> p126 [p99], r49 -> p127 [p125] | CMP SUB_IMM
147: 162 163 164 170, r49 -> p127 | J JMP_IMM
148: 163 164 165 170, r7 -> p7, r2 -> p115 [p97] | MOV ADD
149: 167 168 172 172, r1 -> p124, r44 -> p6 [p126] | ADD LOAD
150: 168 172 173 173, r2 -> p115, r44 -> p6, r2 -> p53 [p115], r49 -> p52 [p127] | ADD ADD
151: 169 173 174 174, r2 -> p53, r2 -> p49 [p53] | MOVSX SEXT_DWORD_TO_QWORD
152: 169 174 178 178, r2 -> p49, r45 -> p45 [p122] | CMP LOAD
153: 169 178 179 179, r45 -> p45, r44 -> p50 [p6], r49 -> p55 [p52] | CMP SUB_IMM
154: 169 179 180 180, r49 -> p55 | J JMP_IMM
155: 170 171 172 180, r1 -> p124, r1 -> p2 [p124], r49 -> p60 [p55] | ADD ADD_IMM
156: 170 171 172 180, r0 -> p123, r0 -> p44 [p123] | INC ADD_IMM
157: 172 173 174 180, r0 -> p44, r44 -> p59 [p50], r49 -> p51 [p60] | CMP SUB_IMM
158: 173 174 175 181, r49 -> p51 | J JMP_IMM
159: 174 175 176 181, r7 -> p7, r2 -> p56 [p49] | MOV ADD
160: 178 179 183 183, r1 -> p2, r44 -> p57 [p59] | ADD LOAD
161: 179 183 184 184, r2 -> p56, r44 -> p57, r2 -> p65 [p56], r49 -> p64 [p51] | ADD ADD
162: 180 184 185 185, r2 -> p65, r2 -> p67 [p65] | MOVSX SEXT_DWORD_TO_QWORD
163: 180 185 189 189, r2 -> p67, r45 -> p8 [p45] | CMP LOAD
164: 180 189 190 190, r45 -> p8, r44 -> p66 [p57], r49 -> p68 [p64] | CMP SUB_IMM
165: 180 190 191 191, r49 -> p68 | J JMP_IMM
166: 181 182 183 191, r1 -> p2, r1 -> p61 [p2], r49 -> p69 [p68] | ADD ADD_IMM
167: 181 182 183 191, r0 -> p44, r0 -> p58 [p44] | INC ADD_IMM
168: 183 184 185 191, r0 -> p58, r44 -> p0 [p66], r49 -> p74 [p69] | CMP SUB_IMM
169: 184 185 186 192, r49 -> p74 | J JMP_IMM
170: 191 192 193 193, r0 -> p1 [p58] | XOR ADD
171: 191 192 193 193, r1 -> p54 [p61] | MOV ADD_IMM
172: 191 192 193 193 | JMP JMP_IMM
173: 191 193 194 194, r0 -> p1, r44 -> p79 [p0], r49 -> p78 [p74] | CMP SUB_IMM
174: 192 194 195 195, r49 -> p78 | J JMP_IMM
175: 200 201 205 205, r1 -> p54, r44 -> p75 [p79] | MOVSX LOAD
176: 200 205 206 206, r44 -> p75, r2 -> p70 [p67] | MOVSX SEXT_DWORD_TO_QWORD
177: 200 206 207 207, r7 -> p7, r2 -> p70, r6 -> p76 [p106] | LEA LEA
178: 200 207 208 208, r6 -> p76, r6 -> p81 [p76] | MOVSX SEXT_DWORD_TO_QWORD
179: 201 208 212 212, r6 -> p81, r6 -> p72 [p81] | MOV LOAD
180: 201 212 213 213, r6 -> p72, r44 -> p86 [p75], r49 -> p63 [p78] | CMP SUB_IMM
181: 201 213 214 214, r49 -> p63 | J JMP_IMM
182: 201 206 207 214, r2 -> p70, r8 -> p85 [p114] | MOV ADD
183: 205 207 208 214, r8 -> p85, r7 -> p7, r8 -> p77 [p85] | LEA LEA
184: 206 208 209 214, r8 -> p77, r8 -> p82 [p77] | MOVSX SEXT_DWORD_TO_QWORD
185: 207 209 210 215, r8 -> p82, r8 -> p83 [p82] | LEA LEA
186: 208 209 210 215, r2 -> p70, r2 -> p91 [p70], r49 -> p90 [p63] | SHL SHL_IMM
187: 212 213 214 215 | JMP JMP_IMM
188: 213 214 215 215, r6 -> p72, r44 -> p93 [p86], r49 -> p62 [p90] | CMP SUB_IMM
189: 214 215 216 216, r49 -> p62 | J JMP_IMM
190: 214 215 216 216, r6 -> p72, r44 -> p92 [p93], r49 -> p94 [p62] | CMP SUB_IMM
191: 214 216 217 217, r49 -> p94 | J JMP_IMM
192: 214 215 216 217, r6 -> p72, r44 -> p87 [p92], r49 -> p95 [p94] | CMP SUB_IMM
193: 215 216 217 217, r49 -> p95 | J JMP_IMM
194: 215 216 217 217, r1 -> p54, r1 -> p84 [p54], r49 -> p73 [p95] | ADD ADD_IMM
195: 215 216 217 218, r0 -> p1, r0 -> p100 [p1] | INC ADD_IMM
196: 215 217 218 218, r0 -> p100, r44 -> p71 [p87], r49 -> p80 [p73] | CMP SUB_IMM
197: 216 218 219 219, r49 -> p80 | J JMP_IMM
198: 224 225 229 229, r1 -> p84, r44 -> p105 [p71] | MOVSX LOAD
199: 224 229 230 230, r44 -> p105, r2 -> p104 [p91] | MOVSX SEXT_DWORD_TO_QWORD
200: 224 230 231 231, r7 -> p7, r2 -> p104, r6 -> p101 [p72] | LEA LEA
201: 224 231 232 232, r6 -> p101, r6 -> p96 [p101] | MOVSX SEXT_DWORD_TO_QWORD
202: 225 232 236 236, r6 -> p96, r6 -> p102 [p96] | MOV LOAD
203: 225 236 237 237, r6 -> p102, r44 -> p107 [p105], r49 -> p98 [p80] | CMP SUB_IMM
204: 225 237 238 238, r49 -> p98 | J JMP_IMM
205: 225 230 231 238, r2 -> p104, r8 -> p112 [p83] | MOV ADD
206: 229 231 232 238, r8 -> p112, r7 -> p7, r8 -> p89 [p112] | LEA LEA
207: 230 232 233 238, r8 -> p89, r8 -> p111 [p89] | MOVSX SEXT_DWORD_TO_QWORD
208: 231 233 234 239, r8 -> p111, r8 -> p103 [p111] | LEA LEA
209: 232 233 234 239, r2 -> p104, r2 -> p108 [p104], r49 -> p109 [p98] | SHL SHL_IMM
210: 236 237 238 239 | JMP JMP_IMM
211: 237 238 239 239, r6 -> p102, r44 -> p117 [p107], r49 -> p116 [p109] | CMP SUB_IMM
212: 238 239 240 240, r49 -> p116 | J JMP_IMM
213: 238 239 240 240, r6 -> p102, r44 -> p119 [p117], r49 -> p88 [p116] | CMP SUB_IMM
214: 238 240 241 241, r49 -> p88 | J JMP_IMM
215: 238 239 240 241, r6 -> p102, r44 -> p118 [p119], r49 -> p120 [p88] | CMP SUB_IMM
216: 239 240 241 241, r49 -> p120 | J JMP_IMM
217: 246 247 251 251, r8 -> p103, r6 -> p113 [p102] | MOV LOAD
218: 246 247 248 251, r8 -> p103, r2 -> p108, r8 -> p121 [p103], r49 -> p110 [p120] | ADD ADD
219: 246 251 252 252, r6 -> p113, r44 -> p99 [p118], r49 -> p125 [p110] | CMP SUB_IMM
220: 246 252 253 253, r49 -> p125 | J JMP_IMM
221: 247 251 252 253, r6 -> p113, r44 -> p97 [p99], r49 -> p126 [p125] | CMP SUB_IMM
222: 247 252 253 253, r49 -> p126 | J JMP_IMM
223: 247 251 252 253, r6 -> p113, r44 -> p115 [p97], r49 -> p127 [p126] | CMP SUB_IMM
224: 247 252 253 254, r49 -> p127 | J JMP_IMM
225: 258 259 263 263, r8 -> p121, r6 -> p53 [p113] | MOV LOAD
226: 258 259 260 263, r8 -> p121, r2 -> p108, r8 -> p122 [p121], r49 -> p6 [p127] | ADD ADD
227: 258 263 264 264, r6 -> p53, r44 -> p52 [p115], r49 -> p124 [p6] | CMP SUB_IMM
228: 258 264 265 265, r49 -> p124 | J JMP_IMM
229: 259 263 264 265, r6 -> p53, r44 -> p55 [p52], r49 -> p123 [p124] | CMP SUB_IMM
230: 259 264 265 265, r49 -> p123 | J JMP_IMM
231: 259 263 264 265, r6 -> p53, r44 -> p50 [p55], r49 -> p60 [p123] | CMP SUB_IMM
232: 259 264 265 266, r49 -> p60 | J JMP_IMM
233: 270 271 272 272, r1 -> p84, r1 -> p49 [p84], r49 -> p59 [p60] | ADD ADD_IMM
234: 270 271 272 272, r0 -> p100, r0 -> p56 [p100] | INC ADD_IMM
235: 270 272 273 273, r0 -> p56, r44 -> p51 [p50], r49 -> p65 [p59] | CMP SUB_IMM
236: 270 273 274 274, r49 -> p65 | J JMP_IMM
237: 271 272 276 276, r1 -> p49, r44 -> p45 [p51] | MOVSX LOAD
238: 271 276 277 277, r44 -> p45, r2 -> p57 [p108] | MOVSX SEXT_DWORD_TO_QWORD
239: 271 277 278 278, r7 -> p7, r2 -> p57, r6 -> p64 [p53] | LEA LEA
240: 271 278 279 279, r6 -> p64, r6 -> p2 [p64] | MOVSX SEXT_DWORD_TO_QWORD
241: 272 279 283 283, r6 -> p2, r6 -> p68 [p2] | MOV LOAD
242: 272 283 284 284, r6 -> p68, r44 -> p44 [p45], r49 -> p66 [p65] | CMP SUB_IMM
243: 273 284 285 285, r49 -> p66 | J JMP_IMM
244: 274 277 278 285, r2 -> p57, r8 -> p69 [p122] | MOV ADD
245: 276 278 279 285, r8 -> p69, r7 -> p7, r8 -> p58 [p69] | LEA LEA
246: 277 279 280 285, r8 -> p58, r8 -> p61 [p58] | MOVSX SEXT_DWORD_TO_QWORD
247: 278 280 281 286, r8 -> p61, r8 -> p0 [p61] | LEA LEA
248: 279 280 281 286, r2 -> p57, r2 -> p74 [p57], r49 -> p79 [p66] | SHL SHL_IMM
249: 283 284 285 286 | JMP JMP_IMM
250: 284 285 286 286, r6 -> p68, r44 -> p67 [p44], r49 -> p106 [p79] | CMP SUB_IMM
251: 285 286 287 287, r49 -> p106 | J JMP_IMM
252: 285 286 287 287, r6 -> p68, r44 -> p76 [p67], r49 -> p81 [p106] | CMP SUB_IMM
253: 285 287 288 288, r49 -> p81 | J JMP_IMM
254: 285 286 287 288, r6 -> p68, r44 -> p75 [p76], r49 -> p78 [p81] | CMP SUB_IMM
255: 286 287 288 288, r49 -> p78 | J JMP_IMM
256: 293 294 298 298, r8 -> p0, r6 -> p114 [p68] | MOV LOAD
257: 293 294 295 298, r8 -> p0, r2 -> p74, r8 -> p85 [p0], r49 -> p77 [p78] | ADD ADD
258: 293 298 299 299, r6 -> p114, r44 -> p82 [p75], r49 -> p70 [p77] | CMP SUB_IMM
259: 293 299 300 300, r49 -> p70 | J JMP_IMM
260: 294 298 299 300, r6 -> p114, r44 -> p63 [p82], r49 -> p86 [p70] | CMP SUB_IMM
261: 294 299 300 300, r49 -> p86 | J JMP_IMM
262: 294 298 299 300, r6 -> p114, r44 -> p90 [p63], r49 -> p93 [p86] | CMP SUB_IMM
263: 294 299 300 301, r49 -> p93 | J JMP_IMM
264: 298 299 303 303, r8 -> p85, r6 -> p62 [p114] | MOV LOAD
265: 298 300 301 303, r8 -> p85, r2 -> p74, r8 -> p92 [p85], r49 -> p94 [p93] | ADD ADD
266: 299 303 304 304, r6 -> p62, r44 -> p54 [p90], r49 -> p95 [p94] | CMP SUB_IMM
267: 300 304 305 305, r49 -> p95 | J JMP_IMM
268: 300 303 304 305, r6 -> p62, r44 -> p1 [p54], r49 -> p87 [p95] | CMP SUB_IMM
269: 300 304 305 305, r49 -> p87 | J JMP_IMM
270: 300 303 304 305, r6 -> p62, r44 -> p73 [p1], r49 -> p71 [p87] | CMP SUB_IMM
271: 301 304 305 306, r49 -> p71 | J JMP_IMM
272: 310 311 312 312, r1 -> p49, r1 -> p91 [p49], r49 -> p72 [p71] | ADD ADD_IMM
273: 310 311 312 312, r0 -> p56, r0 -> p101 [p56] | INC ADD_IMM
274: 310 312 313 313, r0 -> p101, r44 -> p96 [p73], r49 -> p105 [p72] | CMP SUB_IMM
275: 310 313 314 314, r49 -> p105 | J JMP_IMM
276: 311 312 316 316, r1 -> p91, r44 -> p80 [p96] | MOVSX LOAD
277: 311 316 317 317, r44 -> p80, r2 -> p83 [p74] | MOVSX SEXT_DWORD_TO_QWORD
278: 311 317 318 318, r7 -> p7, r2 -> p83, r6 -> p112 [p62] | LEA LEA
279: 311 318 319 319, r6 -> p112, r6 -> p89 [p112] | MOVSX SEXT_DWORD_TO_QWORD
280: 312 319 323 323, r6 -> p89, r6 -> p111 [p89] | MOV LOAD
281: 312 323 324 324, r6 -> p111, r44 -> p104 [p80], r49 -> p98 [p105] | CMP SUB_IMM
282: 313 324 325 325, r49 -> p98 | J JMP_IMM
283: 314 317 318 325, r2 -> p83, r8 -> p107 [p92] | MOV ADD
284: 316 318 319 325, r8 -> p107, r7 -> p7, r8 -> p109 [p107] | LEA LEA
285: 317 319 320 325, r8 -> p109, r8 -> p117 [p109] | MOVSX SEXT_DWORD_TO_QWORD
286: 318 320 321 326, r8 -> p117, r8 -> p116 [p117] | LEA LEA
287: 319 320 321 326, r2 -> p83, r2 -> p119 [p83], r49 -> p88 [p98] | SHL SHL_IMM
288: 323 324 325 326 | JMP JMP_IMM
289: 324 325 326 326, r6 -> p111, r44 -> p102 [p104], r49 -> p103 [p88] | CMP SUB_IMM
290: 325 326 327 327, r49 -> p103 | J JMP_IMM
291: 325 326 327 327, r6 -> p111, r44 -> p120 [p102], r49 -> p118 [p103] | CMP SUB_IMM
292: 325 327 328 328, r49 -> p118 | J JMP_IMM
293: 325 326 327 328, r6 -> p111, r44 -> p110 [p120], r49 -> p99 [p118] | CMP SUB_IMM
294: 326 327 328 328, r49 -> p99 | J JMP_IMM
295: 326 327 331 331, r8 -> p116, r6 -> p125 [p111] | MOV LOAD
296: 326 327 328 331, r8 -> p116, r2 -> p119, r8 -> p97 [p116], r49 -> p126 [p99] | ADD ADD
297: 326 331 332 332, r6 -> p125, r44 -> p113 [p110], r49 -> p121 [p126] | CMP SUB_IMM
298: 327 332 333 333, r49 -> p121 | J JMP_IMM
299: 327 331 332 333, r6 -> p125, r44 -> p127 [p113], r49 -> p115 [p121] | CMP SUB_IMM
300: 328 332 333 333, r49 -> p115 | J JMP_IMM
301: 328 331 332 333, r6 -> p125, r44 -> p6 [p127], r49 -> p52 [p115] | CMP SUB_IMM
302: 328 332 333 334, r49 -> p52 | J JMP_IMM
303: 331 332 336 336, r8 -> p97, r6 -> p124 [p125] | MOV LOAD
304: 331 333 334 336, r8 -> p97, r2 -> p119, r8 -> p55 [p97], r49 -> p123 [p52] | ADD ADD
305: 332 336 337 337, r6 -> p124, r44 -> p84 [p6], r49 -> p60 [p123] | CMP SUB_IMM
306: 333 337 338 338, r49 -> p60 | J JMP_IMM
307: 333 336 337 338, r6 -> p124, r44 -> p100 [p84], r49 -> p50 [p60] | CMP SUB_IMM
308: 333 337 338 338, r49 -> p50 | J JMP_IMM
309: 333 336 337 338, r6 -> p124, r44 -> p59 [p100], r49 -> p51 [p50] | CMP SUB_IMM
310: 334 337 338 339, r49 -> p51 | J JMP_IMM
311: 336 337 341 341, r8 -> p55, r6 -> p108 [p124] | MOV LOAD
312: 336 338 339 341, r8 -> p55, r2 -> p119, r8 -> p53 [p55], r49 -> p64 [p51] | ADD ADD
313: 337 341 342 342, r6 -> p108, r44 -> p2 [p59], r49 -> p45 [p64] | CMP SUB_IMM
314: 338 342 343 343, r49 -> p45 | J JMP_IMM
315: 338 341 342 343, r6 -> p108, r44 -> p65 [p2], r49 -> p122 [p45] | CMP SUB_IMM
316: 338 342 343 343, r49 -> p122 | J JMP_IMM
317: 338 341 342 343, r6 -> p108, r44 -> p69 [p65], r49 -> p58 [p122] | CMP SUB_IMM
318: 339 342 343 344, r49 -> p58 | J JMP_IMM
319: 348 349 350 350, r1 -> p91, r1 -> p61 [p91], r49 -> p57 [p58] | ADD ADD_IMM
320: 348 349 350 350, r0 -> p101, r0 -> p66 [p101] | INC ADD_IMM
321: 348 350 351 351, r0 -> p66, r44 -> p44 [p69], r49 -> p79 [p57] | CMP SUB_IMM
322: 348 351 352 352, r49 -> p79 | J JMP_IMM
323: 357 358 359 359, r0 -> p67 [p66] | XOR ADD
324: 357 358 362 362, r4 -> p4, r44 -> p106 [p44] | RET LOAD
325: 357 358 359 362, r4 -> p4, r4 -> p76 [p4] | RET ADD_IMM
326: 357 362 363 363, r44 -> p106 | RET JMP_REG
327: 358 359 360 363, r0 -> p67, r0 -> p67, r44 -> p81 [p106], r49 -> p68 [p79] | TEST AND
328: 358 359 360 363, r0 -> p0 [p67] | SET ADD
329: 358 360 361 363, r49 -> p68, r0 -> p78 [p0] | SET ADD_IMM
330: 358 361 362 364, r0 -> p78, r0 -> p75 [p78] | MOVZX ZEXT_BYTE_TO_DWORD
331: 359 360 361 364, r4 -> p76, r4 -> p77 [p76], r49 -> p82 [p68] | ADD ADD_IMM
332: 362 363 367 367, r4 -> p77, r44 -> p70 [p81] | RET LOAD
333: 362 363 364 367, r4 -> p77, r4 -> p63 [p77] | RET ADD_IMM
334: 363 367 368 368, r44 -> p70 | RET JMP_REG
335: 363 364 365 368, r0 -> p75, r0 -> p75, r44 -> p86 [p70], r49 -> p114 [p82] | TEST AND
336: 363 365 366 368, r49 -> p114 | J JMP_IMM
337: 363 364 365 368, r4 -> p63, r0 -> p85 [p75] | LEA LEA
338: 364 365 366 369, r0 -> p85, r7 -> p93 [p7] | MOV ADD
339: 364 365 366 369, r13 -> p13, r6 -> p90 [p108] | MOV ADD
340: 367 368 369 369, r44 -> p94 [p86] | CALL SAVE_PC
341: 367 368 369 369, r4 -> p63, r4 -> p54 [p63] | CALL SUB_IMM
342: 368 369 370 370, r44 -> p94, r4 -> p54 | CALL STORE
343: 368 369 370 370 | CALL JMP_IMM
344: 368 369 370 370, r4 -> p54, r4 -> p95 [p54], r49 -> p1 [p114] | SUB SUB_IMM
345: 368 369 370 370, r45 -> p87 [p8] | CMP SAVE_PC
346: 369 370 374 374, r45 -> p87, r45 -> p49 [p87] | CMP LOAD
347: 369 374 375 375, r45 -> p49, r44 -> p71 [p94], r49 -> p56 [p1] | CMP SUB_IMM
348: 369 375 376 376, r49 -> p56 | J JMP_IMM
349: 381 382 383 383, r6 -> p90, r0 -> p73 [p85] | MOVSX SEXT_DWORD_TO_QWORD
350: 381 383 384 384, r0 -> p73, r0 -> p73, r1 -> p72 [p61] | LEA LEA
351: 381 384 388 388, r1 -> p72, r7 -> p93, r44 -> p96 [p71] | MOVSX LOAD
352: 381 388 389 389, r44 -> p96, r2 -> p74 [p119] | MOVSX SEXT_DWORD_TO_QWORD
353: 382 384 388 389, r1 -> p72, r7 -> p93, r44 -> p62 [p96] | MOVSX LOAD
354: 382 388 389 389, r44 -> p62, r1 -> p112 [p72] | MOVSX SEXT_DWORD_TO_QWORD
355: 382 389 393 393, r1 -> p112, r6 -> p89 [p90] | MOV LOAD
356: 382 383 384 393, r45 -> p80 [p49] | CMP SAVE_PC
357: 383 384 388 393, r45 -> p80, r45 -> p105 [p80] | CMP LOAD
358: 384 388 389 393, r45 -> p105, r44 -> p92 [p62], r49 -> p107 [p56] | CMP SUB_IMM
359: 388 389 390 394, r49 -> p107 | J JMP_IMM
360: 389 393 394 394, r6 -> p89, r6 -> p109 [p89], r49 -> p117 [p107] | ADD ADD_IMM
361: 389 394 395 395, r6 -> p109, r44 -> p83 [p92], r49 -> p98 [p117] | CMP SUB_IMM
362: 389 395 396 396, r49 -> p98 | J JMP_IMM
363: 393 394 398 398, r6 -> p109, r44 -> p104 [p83] | JMP LOAD
364: 393 398 399 399, r44 -> p104 | JMP JMP_REG
365: 393 394 395 399, r1 -> p112, r6 -> p88 [p109] | LEA LEA
366: 393 395 396 399, r6 -> p88, r0 -> p102 [p73] | MOVSX SEXT_DWORD_TO_QWORD
367: 394 396 400 400, r0 -> p102, r45 -> p103 [p105] | CMP LOAD
368: 394 400 401 401, r45 -> p103, r44 -> p120 [p104], r49 -> p118 [p98] | CMP SUB_IMM
369: 395 401 402 402, r49 -> p118 | J JMP_IMM
370: 407 408 409 409, r1 -> p112, r1 -> p111 [p112], r49 -> p116 [p118] | ADD ADD_IMM
371: 407 409 410 410, r1 -> p111, r0 -> p99 [p102] | MOVSX SEXT_DWORD_TO_QWORD
372: 407 410 414 414, r0 -> p99, r45 -> p110 [p103] | CMP LOAD
373: 407 414 415 415, r45 -> p110, r44 -> p126 [p120], r49 -> p113 [p116] | CMP SUB_IMM
374: 408 415 416 416, r49 -> p113 | J JMP_IMM
375: 408 409 410 416, r2 -> p74, r2 -> p74, r44 -> p121 [p126], r49 -> p127 [p113] | TEST AND
376: 408 410 411 416, r49 -> p127 | J JMP_IMM
377: 408 409 410 416, r44 -> p115 [p121] | MOVSX SAVE_PC
378: 409 410 414 417, r44 -> p115, r44 -> p125 [p115] | MOVSX LOAD
379: 410 414 415 417, r44 -> p125, r0 -> p97 [p99] | MOVSX SEXT_DWORD_TO_QWORD
380: 414 415 419 419, r0 -> p97, r6 -> p52 [p88] | MOV LOAD
381: 415 416 420 420, r2 -> p74, r45 -> p6 [p110] | CMP LOAD
382: 416 420 421 421, r45 -> p6, r6 -> p52, r44 -> p123 [p125], r49 -> p84 [p127] | CMP SUB
383: 416 421 422 422, r49 -> p84 | J JMP_IMM
384: 427 428 432 432, r0 -> p97, r6 -> p60 [p52] | MOV LOAD
385: 427 428 432 432, r2 -> p74, r45 -> p100 [p6] | CMP LOAD
386: 427 432 433 433, r45 -> p100, r6 -> p60, r44 -> p50 [p123], r49 -> p124 [p84] | CMP SUB
387: 427 433 434 434, r49 -> p124 | J JMP_IMM
388: 439 440 444 444, r0 -> p97, r6 -> p55 [p60] | MOV LOAD
389: 439 440 444 444, r2 -> p74, r45 -> p51 [p100] | CMP LOAD
390: 439 444 445 445, r45 -> p51, r6 -> p55, r44 -> p59 [p50], r49 -> p64 [p124] | CMP SUB
391: 439 445 446 446, r49 -> p64 | J JMP_IMM
392: 451 452 456 456, r0 -> p97, r6 -> p2 [p55] | MOV LOAD
393: 451 452 456 456, r2 -> p74, r45 -> p45 [p51] | CMP LOAD
394: 451 456 457 457, r45 -> p45, r6 -> p2, r44 -> p65 [p59], r49 -> p122 [p64] | CMP SUB
395: 451 457 458 458, r49 -> p122 | J JMP_IMM
396: 463 464 465 465, r0 -> p91 [p97] | XOR ADD
397: 463 464 465 465, r4 -> p95, r4 -> p58 [p95], r49 -> p101 [p122] | ADD ADD_IMM
398: 463 465 469 469, r4 -> p58, r44 -> p69 [p65] | RET LOAD
399: 463 465 466 469, r4 -> p58, r4 -> p57 [p58] | RET ADD_IMM
400: 464 469 470 470, r44 -> p69 | RET JMP_REG
401: 464 465 466 470, r5 -> p5, r44 -> p66 [p69] | MOV LEA
402: 464 466 467 470, r0 -> p91, r44 -> p66 | MOV STORE
403: 464 465 466 470, r0 -> p91, r0 -> p91, r44 -> p44 [p66], r49 -> p4 [p101] | TEST AND
404: 465 466 467 471, r49 -> p4 | J JMP_IMM
405: 472 473 474 474, r44 -> p106 [p44] | MOV SAVE_PC
406: 472 474 478 478, r44 -> p106, r14 -> p79 [p14] | MOV LOAD
407: 472 478 479 479, r14 -> p79, r14 -> p67 [p79], r49 -> p0 [p4] | ADD ADD_IMM
408: 472 479 480 480, r14 -> p67, r44 -> p78 [p106], r49 -> p76 [p0] | CMP SUB_IMM
409: 473 480 481 481, r49 -> p76 | J JMP_IMM
410: 473 474 478 481, r4 -> p57, r45 -> p68 [p45] | CMP LOAD
411: 473 478 479 481, r45 -> p68, r44 -> p81 [p78], r49 -> p77 [p76] | CMP SUB_IMM
412: 473 479 480 481, r49 -> p77 | J JMP_IMM
413: 474 475 476 482, r13 -> p13, r1 -> p70 [p111] | MOVSX SEXT_DWORD_TO_QWORD
414: 478 479 480 482, r1 -> p70, r1 -> p70, r1 -> p82 [p70] | LEA LEA
415: 479 480 484 484, r1 -> p82, r4 -> p57, r44 -> p75 [p81] | MOVSX LOAD
416: 480 484 485 485, r44 -> p75, r1 -> p7 [p82] | MOVSX SEXT_DWORD_TO_QWORD
417: 481 485 489 489, r1 -> p7, r14 -> p108 [p67] | MOV LOAD
418: 481 489 490 490, r14 -> p108, r44 -> p86 [p75], r49 -> p63 [p77] | CMP SUB_IMM
419: 481 490 491 491, r49 -> p63 | J JMP_IMM
420: 481 489 490 491, r14 -> p108, r44 -> p54 [p86], r49 -> p114 [p63] | CMP SUB_IMM
421: 482 490 491 491, r49 -> p114 | J JMP_IMM
422: 482 485 489 491, r1 -> p7, r1 -> p8 [p7] | MOV LOAD
423: 484 485 486 492 | JMP JMP_IMM
424: 485 489 490 492, r1 -> p8, r44 -> p87 [p54], r49 -> p94 [p114] | CMP SUB_IMM
425: 489 490 491 492, r49 -> p94 | J JMP_IMM
426: 496 497 498 498, r14 -> p1 [p108] | XOR ADD
427: 496 497 498 498 | JMP JMP_IMM
428: 496 497 498 498, r13 -> p13, r1 -> p85 [p8] | MOVSX SEXT_DWORD_TO_QWORD
429: 496 498 499 499, r1 -> p85, r1 -> p85, r2 -> p61 [p74] | LEA LEA
430: 497 499 503 503, r2 -> p61, r4 -> p57, r45 -> p71 [p68] | CMP LOAD
431: 497 503 504 504, r45 -> p71, r44 -> p119 [p87], r49 -> p96 [p94] | CMP SUB
432: 497 504 505 505, r49 -> p96 | J JMP_IMM
433: 510 511 512 512, r0 -> p91, r0 -> p91, r44 -> p72 [p119], r49 -> p90 [p96] | TEST AND
434: 510 511 512 512, r0 -> p49 [p91] | SET ADD
435: 510 512 513 513, r49 -> p90, r0 -> p80 [p49] | SET ADD_IMM
436: 510 511 515 515, r4 -> p57, r45 -> p62 [p71] | CMP LOAD
437: 511 515 516 516, r45 -> p62, r44 -> p56 [p72], r49 -> p89 [p90] | CMP SUB
438: 511 516 517 517, r49 -> p89 | J JMP_IMM
439: 522 523 527 527, r4 -> p57, r2 -> p107 [p61] | MOV LOAD
440: 522 527 528 528, r14 -> p1, r2 -> p107, r5 -> p92 [p5] | LEA LEA
441: 522 523 527 528, r4 -> p57, r45 -> p117 [p62] | TEST LOAD
442: 522 527 528 528, r45 -> p117, r44 -> p83 [p56], r49 -> p109 [p89] | TEST AND_IMM
443: 523 528 529 529, r49 -> p109 | J JMP_IMM
444: 523 524 525 529, r14 -> p73 [p1] | XOR ADD
445: 523 524 528 529, r4 -> p57, r7 -> p105 [p93] | MOV LOAD
446: 523 524 525 529, r12 -> p12, r6 -> p104 [p2] | MOV ADD
447: 527 528 529 530, r5 -> p92, r2 -> p98 [p107] | MOV ADD
448: 528 529 530 530, r1 -> p112 [p85] | XOR ADD
449: 528 529 530 530, r44 -> p118 [p83] | CALL SAVE_PC
450: 528 529 530 530, r4 -> p57, r4 -> p102 [p57] | CALL SUB_IMM
451: 529 530 531 531, r44 -> p118, r4 -> p102 | CALL STORE
452: 529 530 531 531 | CALL JMP_IMM
453: 529 530 531 531, r5 -> p92, r4 -> p102 | PUSH STORE
454: 529 530 531 531, r4 -> p102, r4 -> p103 [p102] | PUSH SUB_IMM
455: 530 531 532 532, r15 -> p15, r4 -> p103 | PUSH STORE
456: 530 531 532 532, r4 -> p103, r4 -> p120 [p103] | PUSH SUB_IMM
457: 530 532 533 533, r14 -> p73, r4 -> p120 | PUSH STORE
458: 530 532 533 533, r4 -> p120, r4 -> p116 [p120] | PUSH SUB_IMM
459: 531 533 534 534, r13 -> p13, r4 -> p116 | PUSH STORE
460: 531 533 534 534, r4 -> p116, r4 -> p126 [p116] | PUSH SUB_IMM
461: 531 534 535 535, r12 -> p12, r4 -> p126 | PUSH STORE
462: 531 534 535 535, r4 -> p126, r4 -> p113 [p126] | PUSH SUB_IMM
463: 532 535 536 536, r3 -> p3, r4 -> p113 | PUSH STORE
464: 532 535 536 536, r4 -> p113, r4 -> p121 [p113] | PUSH SUB_IMM
465: 533 536 537 537, r4 -> p121, r4 -> p115 [p121], r49 -> p99 [p109] | SUB SUB_IMM
466: 533 534 535 537, r44 -> p88 [p118] | MOV SAVE_PC
467: 534 535 539 539, r44 -> p88, r0 -> p110 [p80] | MOV LOAD
468: 534 539 540 540, r0 -> p110, r0 -> p125 [p110] | INC ADD_IMM
469: 535 536 537 540, r44 -> p127 [p88] | MOV SAVE_PC
470: 535 540 541 541, r0 -> p125, r44 -> p127 | MOV STORE
471: 536 540 541 541, r0 -> p125, r44 -> p52 [p127], r49 -> p6 [p99] | TEST AND_IMM
472: 536 537 538 541, r1 -> p112, r4 -> p115 | MOV STORE
473: 537 538 539 541, r2 -> p98, r4 -> p115 | MOV STORE
474: 537 538 539 542, r6 -> p104, r4 -> p115 | MOV STORE
475: 539 540 541 542, r7 -> p105, r4 -> p115 | MOV STORE
476: 540 541 542 542, r49 -> p6 | J JMP_IMM
477: 547 548 549 549, r4 -> p115 | MOV STORE
478: 547 548 549 549, r44 -> p123 [p52] | MOVSX SAVE_PC
479: 547 549 553 553, r44 -> p123, r44 -> p84 [p123] | MOVSX LOAD
480: 547 553 554 554, r44 -> p84, r3 -> p60 [p3] | MOVSX SEXT_DWORD_TO_QWORD
481: 548 554 555 555, r3 -> p60, r44 -> p100 [p84] | MOV LEA
482: 548 555 556 556, r3 -> p60, r44 -> p100 | MOV STORE
483: 548 549 550 556, r44 -> p50 [p100] | CALL SAVE_PC
484: 548 549 550 556, r4 -> p115, r4 -> p124 [p115] | CALL SUB_IMM
485: 549 550 551 556, r44 -> p50, r4 -> p124 | CALL STORE
486: 549 550 551 557 | CALL JMP_IMM
487: 553 554 555 557, r44 -> p55 [p50] | MOV SAVE_PC
488: 554 555 559 559, r44 -> p55, r0 -> p51 [p125] | MOV LOAD
489: 555 559 560 560, r0 -> p51, r44 -> p59 [p55], r49 -> p64 [p6] | CMP SUB_IMM
490: 556 560 561 561, r49 -> p64 | J JMP_IMM
491: 566 567 568 568, r0 -> p51, r44 -> p97 [p59], r49 -> p95 [p64] | CMP SUB_IMM
492: 566 568 569 569, r49 -> p95 | J JMP_IMM
493: 566 567 568 569, r0 -> p122 [p51] | XOR ADD
494: 566 567 571 571, r4 -> p124, r44 -> p65 [p97] | RET LOAD
495: 567 568 569 571, r4 -> p124, r4 -> p58 [p124] | RET ADD_IMM
496: 567 571 572 572, r44 -> p65 | RET JMP_REG
497: 567 568 569 572, r0 -> p122, r0 -> p122, r44 -> p69 [p65], r49 -> p66 [p95] | TEST AND
498: 567 569 570 572, r49 -> p66 | J JMP_IMM
499: 575 576 580 580, r3 -> p60, r0 -> p101 [p122] | MOV LOAD
500: 575 580 581 581, r0 -> p101, r4 -> p58 | MOV STORE
501: 575 576 577 581, r3 -> p60, r44 -> p44 [p69] | MOV LEA
502: 575 577 578 581, r44 -> p44 | MOV STORE
503: 576 577 578 581, r3 -> p60, r44 -> p14 [p44], r49 -> p79 [p66] | CMP SUB_IMM
504: 576 578 579 582, r49 -> p79 | J JMP_IMM
505: 576 580 581 582, r0 -> p101, r0 -> p101, r44 -> p4 [p14], r49 -> p106 [p79] | TEST AND
506: 576 581 582 582, r49 -> p106 | J JMP_IMM
507: 580 581 582 582, r4 -> p58 | MOV STORE
508: 581 582 583 583 | JMP JMP_IMM
509: 581 582 586 586, r4 -> p58, r45 -> p0 [p117] | CMP LOAD
510: 581 586 587 587, r45 -> p0, r44 -> p45 [p4], r49 -> p78 [p106] | CMP SUB
511: 581 587 588 588, r49 -> p78 | J JMP_IMM
512: 593 594 595 595, r44 -> p76 [p45] | MOV SAVE_PC
513: 593 595 599 599, r44 -> p76, r0 -> p111 [p101] | MOV LOAD
514: 593 599 600 600, r0 -> p111, r44 -> p70 [p76], r49 -> p81 [p78] | CMP SUB_IMM
515: 593 600 601 601, r49 -> p81 | J JMP_IMM
516: 594 599 600 601, r0 -> p111, r44 -> p82 [p70], r49 -> p67 [p81] | CMP SUB_IMM
517: 594 600 601 601, r49 -> p67 | J JMP_IMM
518: 594 595 596 601, r2 -> p75 [p98] | MOV ADD_IMM
519: 594 596 597 602, r2 -> p75, r3 -> p60, r2 -> p77 [p75], r49 -> p86 [p67] | SUB SUB
520: 595 596 597 602, r44 -> p63 [p82] | MOV ADD_IMM
521: 599 600 601 602, r45 -> p7 [p0] | MOV SAVE_PC
522: 600 601 602 602, r44 -> p63, r45 -> p7 | MOV STORE
523: 601 602 606 606, r4 -> p58, r7 -> p54 [p105] | MOV LOAD
524: 601 602 606 606, r4 -> p58, r6 -> p114 [p104] | MOV LOAD
525: 601 602 603 606, r44 -> p108 [p63] | CALL SAVE_PC
526: 601 602 603 606, r4 -> p58, r4 -> p8 [p58] | CALL SUB_IMM
527: 602 603 604 607, r44 -> p108, r4 -> p8 | CALL STORE
528: 602 603 604 607 | CALL JMP_IMM
529: 602 603 604 607, r5 -> p92, r4 -> p8 | PUSH STORE
530: 602 603 604 607, r4 -> p8, r4 -> p74 [p8] | PUSH SUB_IMM
531: 606 607 608 608, r15 -> p15, r4 -> p74 | PUSH STORE
532: 606 607 608 608, r4 -> p74, r4 -> p68 [p74] | PUSH SUB_IMM
533: 606 608 609 609, r14 -> p73, r4 -> p68 | PUSH STORE
534: 606 608 609 609, r4 -> p68, r4 -> p87 [p68] | PUSH SUB_IMM
535: 607 609 610 610, r13 -> p13, r4 -> p87 | PUSH STORE
536: 607 609 610 610, r4 -> p87, r4 -> p94 [p87] | PUSH SUB_IMM
537: 607 610 611 611, r12 -> p12, r4 -> p94 | PUSH STORE
538: 607 610 611 611, r4 -> p94, r4 -> p119 [p94] | PUSH SUB_IMM
539: 608 611 612 612, r3 -> p60, r4 -> p119 | PUSH STORE
540: 608 611 612 612, r4 -> p119, r4 -> p96 [p119] | PUSH SUB_IMM
541: 609 612 613 613, r4 -> p96, r4 -> p91 [p96], r49 -> p49 [p86] | SUB SUB_IMM
542: 609 610 611 613, r44 -> p71 [p108] | MOVSX SAVE_PC
543: 610 611 615 615, r44 -> p71, r44 -> p72 [p71] | MOVSX LOAD
544: 610 615 616 616, r44 -> p72, r0 -> p90 [p111] | MOVSX SEXT_DWORD_TO_QWORD
545: 611 616 617 617, r0 -> p90, r44 -> p61 [p72] | MOV LEA
546: 611 617 618 618, r0 -> p90, r44 -> p61 | MOV STORE
547: 612 613 614 618, r44 -> p5 [p61] | MOVZX SAVE_PC
548: 612 614 618 618, r44 -> p5, r44 -> p62 [p5] | MOVZX LOAD
549: 613 618 619 619, r44 -> p62, r0 -> p56 [p90] | MOVZX ZEXT_WORD_TO_DWORD
550: 613 619 620 620, r0 -> p56, r0 -> p56, r44 -> p89 [p62], r49 -> p1 [p49] | TEST AND
551: 615 616 617 620, r2 -> p77, r4 -> p91 | MOV STORE
552: 616 617 618 620, r6 -> p114, r4 -> p91 | MOV STORE
553: 617 618 619 620, r7 -> p54, r4 -> p91 | MOV STORE
554: 618 620 621 621, r49 -> p1 | J JMP_IMM
555: 626 627 631 631, r4 -> p91, r45 -> p93 [p7] | CMP LOAD
556: 626 631 632 632, r45 -> p93, r44 -> p2 [p89], r49 -> p107 [p1] | CMP SUB
557: 626 632 633 633, r49 -> p107 | J JMP_IMM
558: 626 627 628 633, r45 -> p85 [p93] | CMP SAVE_PC
559: 627 628 632 633, r45 -> p85, r45 -> p83 [p85] | CMP LOAD
560: 627 632 633 633, r45 -> p83, r44 -> p57 [p2], r49 -> p102 [p107] | CMP SUB_IMM
561: 627 633 634 634, r49 -> p102 | J JMP_IMM
562: 639 640 641 641, r44 -> p103 [p57] | INC SAVE_PC
563: 639 641 645 645, r44 -> p103, r44 -> p120 [p103] | INC LOAD
564: 639 645 646 646, r44 -> p120, r44 -> p116 [p120] | INC ADD_IMM
565: 639 640 641 646, r45 -> p126 [p83] | INC SAVE_PC
566: 640 646 647 647, r44 -> p116, r45 -> p126 | INC STORE
567: 640 641 642 647, r44 -> p113 [p116] | INC SAVE_PC
568: 640 642 646 647, r44 -> p113, r44 -> p121 [p113] | INC LOAD
569: 640 646 647 647, r44 -> p121, r44 -> p109 [p121] | INC ADD_IMM
570: 641 642 643 648, r45 -> p118 [p126] | INC SAVE_PC
571: 645 647 648 648, r44 -> p109, r45 -> p118 | INC STORE
572: 646 647 648 648, r44 -> p80 [p109] | INC SAVE_PC
573: 646 648 652 652, r44 -> p80, r44 -> p110 [p80] | INC LOAD
574: 647 652 653 653, r44 -> p110, r44 -> p88 [p110] | INC ADD_IMM
575: 647 648 649 653, r45 -> p127 [p118] | INC SAVE_PC
576: 647 653 654 654, r44 -> p88, r45 -> p127 | INC STORE
577: 647 648 649 654, r1 -> p99 [p112] | MOV ADD_IMM
578: 648 649 650 654, r44 -> p52 [p88] | MOV SAVE_PC
579: 648 650 654 654, r44 -> p52, r6 -> p123 [p114] | MOV LOAD
580: 648 654 655 655, r6 -> p123, r0 -> p3 [p56] | MOV ADD
581: 652 655 656 656, r0 -> p3, r1 -> p99, r44 -> p84 [p52], r49 -> p100 [p102] | MUL MUL
582: 653 656 657 657, r44 -> p84, r0 -> p115 [p3] | MUL ADD
583: 653 656 657 657, r44 -> p84, r2 -> p50 [p77] | MUL UPPER_HALF
584: 654 657 658 658, r2 -> p50, r2 -> p125 [p50], r49 -> p55 [p100] | SHR SHR_IMM
585: 654 658 659 659, r2 -> p125, r0 -> p6 [p115], r49 -> p59 [p55] | IMUL IMUL_T_IMM
586: 654 655 656 659, r6 -> p123, r1 -> p64 [p99] | MOV ADD
587: 654 659 660 660, r1 -> p64, r0 -> p6, r1 -> p51 [p64], r49 -> p97 [p59] | SUB SUB
588: 655 660 661 661, r1 -> p51, r0 -> p124 [p6] | MOV ADD
589: 656 661 662 662, r0 -> p124, r0 -> p65 [p124], r49 -> p95 [p97] | SHL SHL_IMM
590: 657 658 659 662, r44 -> p122 [p84] | MOV SAVE_PC
591: 657 659 663 663, r44 -> p122, r2 -> p69 [p125] | MOV LOAD
592: 658 663 667 667, r0 -> p65, r2 -> p69, r45 -> p44 [p127] | CMP LOAD
593: 659 667 668 668, r45 -> p44, r6 -> p123, r44 -> p66 [p122], r49 -> p14 [p95] | CMP SUB
594: 659 668 669 669, r49 -> p14 | J JMP_IMM
595: 674 675 676 676, r44 -> p79 [p66] | MOV ADD_IMM
596: 674 676 677 677, r44 -> p79, r4 -> p91 | MOV STORE
597: 674 675 679 679, r4 -> p91, r7 -> p117 [p54] | MOV LOAD
598: 674 675 679 679, r4 -> p91, r3 -> p4 [p60] | MOV LOAD
599: 675 679 680 680, r3 -> p4, r6 -> p106 [p123] | MOV ADD
600: 675 676 677 680, r44 -> p45 [p79] | CALL SAVE_PC
601: 675 676 677 680, r4 -> p91, r4 -> p101 [p91] | CALL SUB_IMM
602: 675 677 678 680, r44 -> p45, r4 -> p101 | CALL STORE
603: 676 677 678 681 | CALL JMP_IMM
604: 677 678 679 681, r5 -> p92, r4 -> p101 | PUSH STORE
605: 679 680 681 681, r4 -> p101, r4 -> p76 [p101] | PUSH SUB_IMM
606: 679 681 682 682, r15 -> p15, r4 -> p76 | PUSH STORE
607: 680 681 682 682, r4 -> p76, r4 -> p78 [p76] | PUSH SUB_IMM
608: 680 682 683 683, r14 -> p73, r4 -> p78 | PUSH STORE
609: 680 682 683 683, r4 -> p78, r4 -> p70 [p78] | PUSH SUB_IMM
610: 680 683 684 684, r13 -> p13, r4 -> p70 | PUSH STORE
611: 681 683 684 684, r4 -> p70, r4 -> p81 [p70] | PUSH SUB_IMM
612: 681 684 685 685, r12 -> p12, r4 -> p81 | PUSH STORE
613: 681 684 685 685, r4 -> p81, r4 -> p98 [p81] | PUSH SUB_IMM
614: 682 685 686 686, r3 -> p4, r4 -> p98 | PUSH STORE
615: 682 685 686 686, r4 -> p98, r4 -> p75 [p98] | PUSH SUB_IMM
616: 683 686 687 687, r4 -> p75, r4 -> p67 [p75], r49 -> p82 [p14] | SUB SUB_IMM
617: 683 684 685 687, r44 -> p0 [p45] | MOV SAVE_PC
618: 684 685 689 689, r44 -> p0, r1 -> p105 [p51] | MOV LOAD
619: 684 689 690 690, r1 -> p105, r44 -> p104 [p0], r49 -> p63 [p82] | CMP SUB_IMM
620: 685 690 691 691, r49 -> p63 | J JMP_IMM
621: 685 689 690 691, r1 -> p105, r44 -> p58 [p104], r49 -> p8 [p63] | CMP SUB_IMM
622: 686 690 691 691, r49 -> p8 | J JMP_IMM
623: 686 689 690 691, r1 -> p105, r44 -> p74 [p58], r49 -> p68 [p8] | CMP SUB_IMM
624: 687 690 691 692, r49 -> p68 | J JMP_IMM
625: 687 688 689 692, r44 -> p87 [p74] | MOV SAVE_PC
626: 689 690 694 694, r44 -> p87, r1 -> p94 [p105] | MOV LOAD
627: 690 694 695 695, r1 -> p94, r2 -> p119 [p69] | MOV ADD
628: 691 695 696 696, r2 -> p119, r2 -> p96 [p119], r49 -> p86 [p68] | NEG SUB
629: 691 692 693 696, r44 -> p108 [p87] | MOV SAVE_PC
630: 691 693 697 697, r44 -> p108, r8 -> p71 [p53] | MOV LOAD
631: 691 697 698 698, r8 -> p71, r8 -> p71, r44 -> p111 [p108], r49 -> p72 [p86] | TEST AND
632: 692 698 699 699, r1 -> p94, r49 -> p72, r2 -> p61 [p96] | CMOV ADD
633: 692 693 694 699, r44 -> p5 [p111] | MOV SAVE_PC
634: 694 695 699 699, r44 -> p5, r1 -> p90 [p94] | MOV LOAD
635: 695 699 700 700, r2 -> p61, r0 -> p62 [p65] | MOV ADD
636: 696 700 701 701, r0 -> p62, r1 -> p90, r0 -> p49 [p62], r49 -> p7 [p72] | SUB SUB
637: 696 701 702 702, r0 -> p49, r6 -> p106, r44 -> p89 [p5], r49 -> p1 [p7] | CMP SUB
638: 697 702 703 703, r49 -> p1 | J JMP_IMM
639: 698 699 700 703, r2 -> p61, r1 -> p90, r2 -> p93 [p61], r49 -> p85 [p1] | ADD ADD
640: 699 700 701 703, r2 -> p93, r7 -> p117, r44 -> p2 [p89], r49 -> p107 [p85] | CMP SUB
641: 699 701 702 703, r49 -> p107 | J JMP_IMM
642: 699 700 701 704, r2 -> p93, r0 -> p57 [p49] | MOV ADD
643: 700 701 702 704 | JMP JMP_IMM
644: 701 702 703 704, r4 -> p67, r4 -> p103 [p67], r49 -> p120 [p107] | ADD ADD_IMM
645: 702 703 707 707, r4 -> p103, r3 -> p83 [p4] | POP LOAD
646: 703 704 705 707, r4 -> p103, r4 -> p116 [p103] | POP ADD_IMM
647: 703 705 709 709, r4 -> p116, r12 -> p113 [p12] | POP LOAD
648: 703 705 706 709, r4 -> p116, r4 -> p121 [p116] | POP ADD_IMM
649: 703 706 710 710, r4 -> p121, r13 -> p126 [p13] | POP LOAD
650: 704 706 707 710, r4 -> p121, r4 -> p109 [p121] | POP ADD_IMM
651: 704 707 711 711, r4 -> p109, r14 -> p80 [p73] | POP LOAD
652: 704 707 708 711, r4 -> p109, r4 -> p110 [p109] | POP ADD_IMM
653: 707 708 712 712, r4 -> p110, r15 -> p118 [p15] | POP LOAD
654: 707 708 709 712, r4 -> p110, r4 -> p112 [p110] | POP ADD_IMM
655: 709 710 714 714, r4 -> p112, r5 -> p88 [p92] | POP LOAD
656: 709 710 711 714, r4 -> p112, r4 -> p114 [p112] | POP ADD_IMM
657: 710 711 715 715, r4 -> p114, r44 -> p56 [p2] | RET LOAD
658: 710 711 712 715, r4 -> p114, r4 -> p52 [p114] | RET ADD_IMM
659: 711 715 716 716, r44 -> p56 | RET JMP_REG
660: 711 712 713 716, r0 -> p57, r3 -> p83, r44 -> p102 [p56], r49 -> p3 [p120] | CMP SUB
661: 712 713 714 716, r0 -> p57, r3 -> p77 [p83] | MOV ADD
662: 712 713 714 716, r49 -> p3 | J JMP_IMM
663: 719 720 721 721, r4 -> p52, r7 -> p50 [p117] | LEA LEA
664: 719 720 721 721, r44 -> p100 [p102] | CALL SAVE_PC
665: 719 720 721 721, r4 -> p52, r4 -> p115 [p52] | CALL SUB_IMM
666: 719 721 722 722, r44 -> p100, r4 -> p115 | CALL STORE
667: 720 721 722 722 | CALL JMP_IMM
668: 720 721 722 722, r5 -> p88, r4 -> p115 | PUSH STORE
669: 720 721 722 722, r4 -> p115, r4 -> p55 [p115] | PUSH SUB_IMM
670: 720 722 723 723, r15 -> p118, r4 -> p55 | PUSH STORE
671: 721 722 723 723, r4 -> p55, r4 -> p99 [p55] | PUSH SUB_IMM
672: 721 723 724 724, r14 -> p80, r4 -> p99 | PUSH STORE
673: 721 723 724 724, r4 -> p99, r4 -> p64 [p99] | PUSH SUB_IMM
674: 722 724 725 725, r13 -> p126, r4 -> p64 | PUSH STORE
675: 722 724 725 725, r4 -> p64, r4 -> p59 [p64] | PUSH SUB_IMM
676: 722 725 726 726, r12 -> p113, r4 -> p59 | PUSH STORE
677: 722 725 726 726, r4 -> p59, r4 -> p6 [p59] | PUSH SUB_IMM
678: 723 726 727 727, r3 -> p77, r4 -> p6 | PUSH STORE
679: 723 726 727 727, r4 -> p6, r4 -> p124 [p6] | PUSH SUB_IMM
680: 724 727 728 728, r4 -> p124, r4 -> p97 [p124], r49 -> p84 [p3] | SUB SUB_IMM
681: 724 725 726 728, r44 -> p125 [p100] | MOV SAVE_PC
682: 725 726 727 728, r44 -> p125 | MOV STORE
683: 725 726 727 728, r44 -> p127 [p125] | MOV SAVE_PC
684: 726 727 728 729, r44 -> p127 | MOV STORE
685: 726 727 728 729, r44 -> p122 [p127] | MOV SAVE_PC
686: 727 728 729 729, r7 -> p50, r44 -> p122 | MOV STORE
687: 727 728 729 729, r45 -> p95 [p44] | CMP SAVE_PC
688: 728 729 733 733, r45 -> p95, r45 -> p66 [p95] | CMP LOAD
689: 728 733 734 734, r45 -> p66, r44 -> p54 [p122], r49 -> p60 [p84] | CMP SUB_IMM
690: 728 734 735 735, r49 -> p60 | J JMP_IMM
691: 740 741 742 742, r44 -> p123 [p54] | MOV SAVE_PC
692: 740 742 746 746, r44 -> p123, r0 -> p79 [p57] | MOV LOAD
693: 740 746 747 747, r0 -> p79, r4 -> p97 | MOV STORE
694: 740 741 742 747, r44 -> p91 [p123] | MOV SAVE_PC
695: 741 742 746 747, r44 -> p91, r3 -> p101 [p77] | MOV LOAD
696: 741 742 743 747, r44 -> p76 [p91] | MOV SAVE_PC
697: 741 743 747 748, r44 -> p76, r0 -> p78 [p79] | MOV LOAD
698: 741 747 748 748, r0 -> p78, r4 -> p97 | MOV STORE
699: 742 743 744 748, r44 -> p70 [p76] | MOV SAVE_PC
700: 746 747 751 751, r44 -> p70, r0 -> p81 [p78] | MOV LOAD
701: 747 751 752 752, r0 -> p81, r4 -> p97 | MOV STORE
702: 747 748 749 752, r14 -> p98 [p80] | MOV ADD_IMM
703: 747 748 749 752 | JMP JMP_IMM
704: 747 752 756 756, r4 -> p97, r45 -> p75 [p66] | CMP LOAD
705: 748 756 757 757, r45 -> p75, r44 -> p14 [p70], r49 -> p45 [p60] | CMP SUB
706: 748 757 758 758, r49 -> p45 | J JMP_IMM
707: 748 749 750 758, r15 -> p51 [p118] | MOV ADD_IMM
708: 751 752 753 758, r12 -> p0 [p113] | MOV ADD_IMM
709: 752 753 754 758 | JMP JMP_IMM
710: 752 753 757 759, r4 -> p97, r45 -> p82 [p75] | CMP LOAD
711: 752 757 758 759, r15 -> p51, r45 -> p82, r44 -> p104 [p14], r49 -> p63 [p45] | CMP SUB
712: 756 758 759 759, r49 -> p63 | J JMP_IMM
713: 757 758 759 759, r44 -> p58 [p104] | MOV SAVE_PC
714: 758 759 763 763, r44 -> p58, r0 -> p8 [p81] | MOV LOAD
715: 758 763 764 764, r0 -> p8, r44 -> p74 [p58], r49 -> p105 [p63] | CMP SUB_IMM
716: 758 764 765 765, r49 -> p105 | J JMP_IMM
717: 758 759 760 765, r44 -> p69 [p74] | MOV SAVE_PC
718: 759 760 764 765, r44 -> p69, r1 -> p119 [p90] | MOV LOAD
719: 759 764 765 765, r1 -> p119, r44 -> p68 [p69], r49 -> p87 [p105] | CMP SUB_IMM
720: 759 765 766 766, r49 -> p87 | J JMP_IMM
721: 771 772 776 776, r12 -> p0, r44 -> p53 [p68] | MOVSX LOAD
722: 771 776 777 777, r44 -> p53, r13 -> p108 [p126] | MOVSX SEXT_DWORD_TO_QWORD
723: 771 777 778 778, r13 -> p108, r13 -> p108, r44 -> p86 [p53], r49 -> p96 [p87] | TEST AND
724: 771 778 779 779, r49 -> p96 | J JMP_IMM
725: 772 777 778 779, r13 -> p108, r5 -> p111 [p88] | MOV ADD
726: 772 773 774 779, r44 -> p94 [p86] | MOV SAVE_PC
727: 772 778 779 779, r5 -> p111, r44 -> p94 | MOV STORE
728: 772 773 774 780, r15 -> p51, r15 -> p65 [p51] | INC ADD_IMM
729: 776 777 781 781, r13 -> p108, r1 -> p62 [p119] | MOV LOAD
730: 777 781 782 782, r1 -> p62, r1 -> p72 [p62] | DEC SUB_IMM
731: 778 782 783 783, r1 -> p72, r44 -> p5 [p94], r49 -> p7 [p96] | CMP SUB_IMM
732: 779 783 784 784, r49 -> p7 | J JMP_IMM
733: 779 782 786 786, r1 -> p72, r44 -> p61 [p5] | JMP LOAD
734: 779 786 787 787, r44 -> p61 | JMP JMP_REG
735: 779 780 781 787, r5 -> p111, r7 -> p1 [p50] | LEA LEA
736: 780 781 782 787, r7 -> p1, r0 -> p89 [p8] | MOVSX SEXT_DWORD_TO_QWORD
737: 781 782 786 787, r0 -> p89, r45 -> p85 [p82] | CMP LOAD
738: 782 786 787 788, r45 -> p85, r44 -> p49 [p61], r49 -> p67 [p7] | CMP SUB
739: 783 787 788 788, r49 -> p67 | J JMP_IMM
740: 793 794 795 795, r5 -> p111, r7 -> p107 [p1] | LEA LEA
741: 793 795 796 796, r7 -> p107, r0 -> p4 [p89] | MOVSX SEXT_DWORD_TO_QWORD
742: 793 796 800 800, r0 -> p4, r45 -> p103 [p85] | CMP LOAD
743: 793 800 801 801, r45 -> p103, r44 -> p12 [p49], r49 -> p116 [p67] | CMP SUB
744: 794 801 802 802, r49 -> p116 | J JMP_IMM
745: 794 795 796 802, r44 -> p13 [p12] | CALL SAVE_PC
746: 794 795 796 802, r4 -> p97, r4 -> p121 [p97] | CALL SUB_IMM
747: 794 796 797 802, r44 -> p13, r4 -> p121 | CALL STORE
748: 795 796 797 803 | CALL JMP_IMM
749: 796 797 798 803, r14 -> p98, r4 -> p121 | PUSH STORE
750: 800 801 802 803, r4 -> p121, r4 -> p73 [p121] | PUSH SUB_IMM
751: 801 802 803 803, r3 -> p101, r4 -> p73 | PUSH STORE
752: 802 803 804 804, r4 -> p73, r4 -> p109 [p73] | PUSH SUB_IMM
753: 802 803 804 804, r7 -> p107, r0 -> p15 [p4] | MOVSX SEXT_DWORD_TO_QWORD
754: 802 804 805 805, r0 -> p15, r0 -> p15, r1 -> p110 [p72] | LEA LEA
755: 802 803 804 805, r44 -> p92 [p13] | MOVSX SAVE_PC
756: 803 804 808 808, r44 -> p92, r44 -> p112 [p92] | MOVSX LOAD
757: 803 808 809 809, r44 -> p112, r2 -> p2 [p93] | MOVSX SEXT_DWORD_TO_QWORD
758: 803 804 805 809, r0 -> p15, r6 -> p114 [p106] | MOV ADD
759: 803 809 810 810, r6 -> p114, r2 -> p2, r6 -> p56 [p114], r49 -> p120 [p116] | SUB SUB
760: 804 810 811 811, r6 -> p56, r6 -> p83 [p56] | MOVSX SEXT_DWORD_TO_QWORD
761: 804 809 810 811, r1 -> p110, r2 -> p2, r1 -> p117 [p110], r49 -> p102 [p120] | SUB SUB
762: 805 810 811 811, r1 -> p117, r1 -> p52 [p117] | MOVSX SEXT_DWORD_TO_QWORD
763: 805 811 812 812, r1 -> p52, r1 -> p115 [p52] | LEA LEA
764: 808 809 813 813, r2 -> p2, r7 -> p55 [p107] | MOV LOAD
765: 809 810 811 813, r0 -> p15, r8 -> p99 [p71] | LEA LEA
766: 809 810 811 813, r9 -> p64 [p9] | XOR ADD
767: 810 811 812 813, r44 -> p59 [p112] | MOV SAVE_PC
768: 811 812 816 816, r44 -> p59, r10 -> p6 [p10] | MOV LOAD
769: 811 812 813 816, r44 -> p124 [p59] | MOV SAVE_PC
770: 811 813 817 817, r44 -> p124, r11 -> p3 [p11] | MOV LOAD
771: 812 813 814 817, r44 -> p100 [p124] | MOV SAVE_PC
772: 813 814 818 818, r44 -> p100, r3 -> p125 [p101] | MOV LOAD
773: 813 814 815 818 | JMP JMP_IMM
774: 813 814 818 818, r9 -> p64, r8 -> p99, r14 -> p127 [p98] | MOV LOAD
775: 813 818 819 819, r14 -> p127, r44 -> p44 [p100], r49 -> p95 [p102] | CMP SUB_IMM
776: 816 819 820 820, r49 -> p95 | J JMP_IMM
777: 825 826 827 827, r3 -> p125, r44 -> p122 [p44], r49 -> p84 [p95] | TEST AND_IMM
778: 825 827 828 828, r49 -> p84 | J JMP_IMM
779: 833 834 835 835, r0 -> p15, r6 -> p83, r0 -> p54 [p15], r49 -> p57 [p84] | ADD ADD
780: 833 834 835 835, r6 -> p83, r9 -> p64, r14 -> p123 [p127] | LEA LEA
781: 833 834 838 838, r9 -> p64, r1 -> p115, r45 -> p77 [p103] | CMP LOAD
782: 833 838 839 839, r45 -> p77, r44 -> p91 [p122], r49 -> p79 [p57] | CMP SUB
783: 834 839 840 840, r49 -> p79 | J JMP_IMM
784: 834 835 836 840, r14 -> p123, r9 -> p76 [p64] | MOV ADD
785: 834 836 840 840, r9 -> p76, r8 -> p99, r14 -> p78 [p123] | MOV LOAD
786: 834 840 841 841, r14 -> p78, r44 -> p80 [p91], r49 -> p66 [p79] | CMP SUB_IMM
787: 835 841 842 842, r49 -> p66 | J JMP_IMM
788: 847 848 849 849, r3 -> p125, r44 -> p70 [p80], r49 -> p60 [p66] | TEST AND_IMM
789: 847 849 850 850, r49 -> p60 | J JMP_IMM
790: 855 856 857 857, r0 -> p54, r6 -> p83, r0 -> p118 [p54], r49 -> p113 [p60] | ADD ADD
791: 855 856 857 857, r6 -> p83, r9 -> p76, r14 -> p75 [p78] | LEA LEA
792: 855 856 860 860, r9 -> p76, r1 -> p115, r45 -> p14 [p77] | CMP LOAD
793: 855 860 861 861, r45 -> p14, r44 -> p45 [p70], r49 -> p104 [p113] | CMP SUB
794: 856 861 862 862, r49 -> p104 | J JMP_IMM
795: 867 868 869 869, r44 -> p81 [p45] | MOV SAVE_PC
796: 867 869 870 870, r10 -> p6, r44 -> p81 | MOV STORE
797: 867 868 869 870 | JMP JMP_IMM
798: 867 868 872 872, r4 -> p109, r3 -> p58 [p125] | POP LOAD
799: 868 869 870 872, r4 -> p109, r4 -> p63 [p109] | POP ADD_IMM
800: 868 870 874 874, r4 -> p63, r14 -> p74 [p75] | POP LOAD
801: 868 870 871 874, r4 -> p63, r4 -> p90 [p63] | POP ADD_IMM
802: 868 871 875 875, r4 -> p90, r44 -> p69 [p81] | RET LOAD
803: 869 871 872 875, r4 -> p90, r4 -> p105 [p90] | RET ADD_IMM
804: 870 875 876 876, r44 -> p69 | RET JMP_REG
805: 870 871 872 876, r5 -> p111, r7 -> p68 [p55] | LEA LEA
806: 872 873 874 876, r7 -> p68, r0 -> p126 [p118] | MOVSX SEXT_DWORD_TO_QWORD
807: 872 874 878 878, r0 -> p126, r45 -> p53 [p14] | CMP LOAD
808: 874 878 879 879, r45 -> p53, r44 -> p87 [p69], r49 -> p88 [p104] | CMP SUB
809: 874 879 880 880, r49 -> p88 | J JMP_IMM
810: 875 876 877 880, r44 -> p86 [p87] | CALL SAVE_PC
811: 875 876 877 880, r4 -> p105, r4 -> p51 [p105] | CALL SUB_IMM
812: 876 877 878 880, r44 -> p86, r4 -> p51 | CALL STORE
813: 876 877 878 881 | CALL JMP_IMM
814: 876 877 878 881, r14 -> p74, r4 -> p51 | PUSH STORE
815: 878 879 880 881, r4 -> p51, r4 -> p119 [p51] | PUSH SUB_IMM
816: 879 880 881 881, r3 -> p58, r4 -> p119 | PUSH STORE
817: 880 881 882 882, r4 -> p119, r4 -> p62 [p119] | PUSH SUB_IMM
818: 880 881 882 882, r7 -> p68, r0 -> p94 [p126] | MOVSX SEXT_DWORD_TO_QWORD
819: 880 882 883 883, r0 -> p94, r0 -> p94, r1 -> p96 [p115] | LEA LEA
820: 880 881 882 883, r44 -> p5 [p86] | MOVSX SAVE_PC
821: 881 882 886 886, r44 -> p5, r44 -> p50 [p5] | MOVSX LOAD
822: 881 886 887 887, r44 -> p50, r2 -> p8 [p2] | MOVSX SEXT_DWORD_TO_QWORD
823: 881 882 883 887, r0 -> p94, r6 -> p82 [p83] | MOV ADD
824: 881 887 888 888, r6 -> p82, r2 -> p8, r6 -> p61 [p82], r49 -> p7 [p88] | SUB SUB
825: 882 888 889 889, r6 -> p61, r6 -> p1 [p61] | MOVSX SEXT_DWORD_TO_QWORD
826: 882 887 888 889, r1 -> p96, r2 -> p8, r1 -> p89 [p96], r49 -> p85 [p7] | SUB SUB
827: 883 888 889 889, r1 -> p89, r1 -> p49 [p89] | MOVSX SEXT_DWORD_TO_QWORD
828: 883 889 890 890, r1 -> p49, r1 -> p67 [p49] | LEA LEA
829: 886 887 891 891, r2 -> p8, r7 -> p12 [p68] | MOV LOAD
830: 887 888 889 891, r0 -> p94, r8 -> p97 [p99] | LEA LEA
831: 887 888 889 891, r9 -> p121 [p76] | XOR ADD
832: 888 889 890 891, r44 -> p73 [p50] | MOV SAVE_PC
833: 889 890 894 894, r44 -> p73, r10 -> p4 [p6] | MOV LOAD
834: 889 890 891 894, r44 -> p72 [p73] | MOV SAVE_PC
835: 889 891 895 895, r44 -> p72, r11 -> p13 [p3] | MOV LOAD
836: 890 891 892 895, r44 -> p92 [p72] | MOV SAVE_PC
837: 891 892 896 896, r44 -> p92, r3 -> p93 [p58] | MOV LOAD
838: 891 892 893 896 | JMP JMP_IMM
839: 891 892 896 896, r9 -> p121, r8 -> p97, r14 -> p106 [p74] | MOV LOAD
840: 891 896 897 897, r14 -> p106, r44 -> p114 [p92], r49 -> p116 [p85] | CMP SUB_IMM
841: 894 897 898 898, r49 -> p116 | J JMP_IMM
842: 894 896 897 898, r3 -> p93, r44 -> p56 [p114], r49 -> p110 [p116] | TEST AND_IMM
843: 895 897 898 898, r49 -> p110 | J JMP_IMM
844: 895 896 897 898, r0 -> p94, r6 -> p1, r0 -> p120 [p94], r49 -> p117 [p110] | ADD ADD
845: 896 897 898 899, r6 -> p1, r9 -> p121, r14 -> p52 [p106] | LEA LEA
846: 896 897 901 901, r9 -> p121, r1 -> p67, r45 -> p107 [p53] | CMP LOAD
847: 896 901 902 902, r45 -> p107, r44 -> p71 [p56], r49 -> p9 [p117] | CMP SUB
848: 897 902 903 903, r49 -> p9 | J JMP_IMM
849: 898 899 900 903, r14 -> p52, r9 -> p112 [p121] | MOV ADD
850: 898 900 904 904, r9 -> p112, r8 -> p97, r14 -> p10 [p52] | MOV LOAD
851: 898 904 905 905, r14 -> p10, r44 -> p59 [p71], r49 -> p11 [p9] | CMP SUB_IMM
852: 898 905 906 906, r49 -> p11 | J JMP_IMM
853: 911 912 913 913, r44 -> p124 [p59] | MOV SAVE_PC
854: 911 913 914 914, r10 -> p4, r44 -> p124 | MOV STORE
855: 911 912 913 914, r7 -> p12, r14 -> p10, r7 -> p101 [p12], r49 -> p98 [p11] | XOR XOR
856: 911 913 914 914, r7 -> p101, r44 -> p100 [p124], r49 -> p102 [p98] | TEST AND_IMM
857: 912 914 915 915, r49 -> p102 | J JMP_IMM
858: 920 921 925 925, r4 -> p62, r3 -> p44 [p93] | POP LOAD
859: 920 921 922 925, r4 -> p62, r4 -> p95 [p62] | POP ADD_IMM
860: 920 922 926 926, r4 -> p95, r14 -> p15 [p10] | POP LOAD
861: 920 922 923 926, r4 -> p95, r4 -> p84 [p95] | POP ADD_IMM
862: 921 923 927 927, r4 -> p84, r44 -> p127 [p100] | RET LOAD
863: 921 923 924 927, r4 -> p84, r4 -> p103 [p84] | RET ADD_IMM
864: 921 927 928 928, r44 -> p127 | RET JMP_REG
865: 921 922 923 928, r5 -> p111, r7 -> p122 [p101] | LEA LEA
866: 925 926 927 928, r7 -> p122, r0 -> p57 [p120] | MOVSX SEXT_DWORD_TO_QWORD
867: 925 927 931 931, r0 -> p57, r45 -> p64 [p107] | CMP LOAD
868: 926 931 932 932, r45 -> p64, r44 -> p123 [p127], r49 -> p91 [p102] | CMP SUB
869: 926 932 933 933, r49 -> p91 | J JMP_IMM
870: 927 928 929 933, r44 -> p79 [p123] | CALL SAVE_PC
871: 927 928 929 933, r4 -> p103, r4 -> p80 [p103] | CALL SUB_IMM
872: 928 929 930 933, r44 -> p79, r4 -> p80 | CALL STORE
873: 928 929 930 934 | CALL JMP_IMM
874: 928 929 930 934, r14 -> p15, r4 -> p80 | PUSH STORE
875: 931 932 933 934, r4 -> p80, r4 -> p66 [p80] | PUSH SUB_IMM
876: 932 933 934 934, r3 -> p44, r4 -> p66 | PUSH STORE
877: 933 934 935 935, r4 -> p66, r4 -> p54 [p66] | PUSH SUB_IMM
878: 933 934 935 935, r7 -> p122, r0 -> p60 [p57] | MOVSX SEXT_DWORD_TO_QWORD
879: 933 935 936 936, r0 -> p60, r0 -> p60, r1 -> p78 [p67] | LEA LEA
880: 933 934 935 936, r44 -> p77 [p79] | MOVSX SAVE_PC
881: 934 935 939 939, r44 -> p77, r44 -> p70 [p77] | MOVSX LOAD
882: 934 939 940 940, r44 -> p70, r2 -> p113 [p8] | MOVSX SEXT_DWORD_TO_QWORD
883: 934 935 936 940, r0 -> p60, r6 -> p45 [p1] | MOV ADD
884: 934 940 941 941, r6 -> p45, r2 -> p113, r6 -> p125 [p45], r49 -> p109 [p91] | SUB SUB
885: 935 941 942 942, r6 -> p125, r6 -> p75 [p125] | MOVSX SEXT_DWORD_TO_QWORD
886: 935 940 941 942, r1 -> p78, r2 -> p113, r1 -> p63 [p78], r49 -> p81 [p109] | SUB SUB
887: 936 941 942 942, r1 -> p63, r1 -> p90 [p63] | MOVSX SEXT_DWORD_TO_QWORD
888: 936 942 943 943, r1 -> p90, r1 -> p55 [p90] | LEA LEA
889: 939 940 944 944, r2 -> p113, r7 -> p118 [p122] | MOV LOAD
890: 940 941 942 944, r0 -> p60, r8 -> p14 [p97] | LEA LEA
891: 940 941 942 944, r9 -> p69 [p112] | XOR ADD
892: 941 942 943 944, r44 -> p104 [p70] | MOV SAVE_PC
893: 942 943 947 947, r44 -> p104, r10 -> p87 [p4] | MOV LOAD
894: 942 943 944 947, r44 -> p105 [p104] | MOV SAVE_PC
895: 942 944 948 948, r44 -> p105, r11 -> p51 [p13] | MOV LOAD
896: 943 944 945 948, r44 -> p119 [p105] | MOV SAVE_PC
897: 944 945 949 949, r44 -> p119, r3 -> p126 [p44] | MOV LOAD
898: 944 945 946 949 | JMP JMP_IMM
899: 944 945 949 949, r9 -> p69, r8 -> p14, r14 -> p115 [p15] | MOV LOAD
900: 944 949 950 950, r14 -> p115, r44 -> p86 [p119], r49 -> p5 [p81] | CMP SUB_IMM
901: 947 950 951 951, r49 -> p5 | J JMP_IMM
902: 956 957 958 958, r44 -> p2 [p86] | MOV SAVE_PC
903: 956 958 959 959, r10 -> p87, r44 -> p2 | MOV STORE
904: 956 957 958 959, r7 -> p118, r14 -> p115, r7 -> p83 [p118], r49 -> p82 [p5] | XOR XOR
905: 956 958 959 959, r7 -> p83, r44 -> p88 [p2], r49 -> p61 [p82] | TEST AND_IMM
906: 957 959 960 960, r49 -> p61 | J JMP_IMM
907: 957 958 959 960, r45 -> p96 [p64] | CMP SAVE_PC
908: 957 959 963 963, r45 -> p96, r45 -> p7 [p96] | CMP LOAD
909: 957 963 964 964, r45 -> p7, r44 -> p89 [p88], r49 -> p49 [p61] | CMP SUB_IMM
910: 958 964 965 965, r49 -> p49 | J JMP_IMM
911: 959 960 961 965, r14 -> p115, r44 -> p68 [p89], r49 -> p99 [p49] | CMP SUB_IMM
912: 959 961 962 965, r49 -> p99 | J JMP_IMM
913: 959 960 961 965, r14 -> p115, r1 -> p76 [p55] | LEA LEA
914: 960 961 962 966, r1 -> p76, r44 -> p50 [p68], r49 -> p6 [p99] | CMP SUB_IMM
915: 960 962 963 966, r49 -> p6 | J JMP_IMM
916: 968 969 970 970, r44 -> p73 [p50] | MOV ADD_IMM
917: 968 969 970 970, r45 -> p3 [p7] | MOV SAVE_PC
918: 968 970 971 971, r44 -> p73, r45 -> p3 | MOV STORE
919: 968 969 970 971, r10 -> p87, r1 -> p72 [p76] | MOVSX SEXT_DWORD_TO_QWORD
920: 969 970 971 971, r1 -> p72, r1 -> p72, r1 -> p58 [p72] | LEA LEA
921: 969 970 971 971, r44 -> p74 [p73] | MOV SAVE_PC
922: 969 971 975 975, r44 -> p74, r10 -> p92 [p87] | MOV LOAD
923: 969 970 971 975, r44 -> p85 [p74] | MOV SAVE_PC
924: 970 971 975 975, r44 -> p85, r2 -> p114 [p113] | MOV LOAD
925: 970 975 976 976, r1 -> p58, r2 -> p114, r44 -> p116 [p85] | MOV LEA
926: 971 976 977 977, r10 -> p92, r44 -> p116 | MOV STORE
927: 971 972 973 977, r44 -> p94 [p116] | MOVSX SAVE_PC
928: 971 973 977 977, r44 -> p94, r44 -> p110 [p94] | MOVSX LOAD
929: 971 977 978 978, r44 -> p110, r1 -> p106 [p58] | MOVSX SEXT_DWORD_TO_QWORD
930: 975 978 979 979, r1 -> p106, r1 -> p106, r1 -> p53 [p106] | LEA LEA
931: 975 976 977 979, r44 -> p56 [p110] | MOV SAVE_PC
932: 975 977 981 981, r44 -> p56, r2 -> p117 [p114] | MOV LOAD
933: 976 981 982 982, r1 -> p53, r2 -> p117, r44 -> p121 [p56] | MOV LEA
934: 977 982 983 983, r0 -> p60, r44 -> p121 | MOV STORE
935: 977 978 979 983, r44 -> p52 [p121] | MOVSX SAVE_PC
936: 977 979 983 983, r44 -> p52, r44 -> p71 [p52] | MOVSX LOAD
937: 978 983 984 984, r44 -> p71, r0 -> p9 [p60] | MOVSX SEXT_DWORD_TO_QWORD
938: 979 984 985 985, r0 -> p9, r0 -> p9, r0 -> p59 [p9] | LEA LEA
939: 979 980 981 985, r44 -> p12 [p71] | MOV SAVE_PC
940: 981 982 986 986, r44 -> p12, r1 -> p11 [p53] | MOV LOAD
941: 982 986 987 987, r0 -> p59, r1 -> p11, r44 -> p124 [p12] | MOV LEA
942: 983 987 988 988, r14 -> p115, r44 -> p124 | MOV STORE
943: 983 984 985 988, r44 -> p98 [p124] | MOVSX SAVE_PC
944: 983 985 989 989, r44 -> p98, r44 -> p93 [p98] | MOVSX LOAD
945: 984 989 990 990, r44 -> p93, r0 -> p62 [p59] | MOVSX SEXT_DWORD_TO_QWORD
946: 985 990 991 991, r0 -> p62, r0 -> p62, r0 -> p10 [p62] | LEA LEA
947: 985 986 987 991, r44 -> p95 [p93] | MOV SAVE_PC
948: 986 987 991 991, r44 -> p95, r1 -> p100 [p11] | MOV LOAD
949: 987 991 992 992, r0 -> p10, r1 -> p100, r44 -> p84 [p95] | MOV LEA
950: 988 992 993 993, r44 -> p84 | MOV STORE
951: 988 989 990 993, r44 -> p101 [p84] | MOVSX SAVE_PC
952: 989 990 994 994, r44 -> p101, r44 -> p120 [p101] | MOVSX LOAD
953: 990 994 995 995, r44 -> p120, r0 -> p107 [p10] | MOVSX SEXT_DWORD_TO_QWORD
954: 991 995 996 996, r0 -> p107, r0 -> p107, r0 -> p127 [p107] | LEA LEA
955: 991 992 993 996, r44 -> p102 [p120] | MOV SAVE_PC
956: 991 993 997 997, r44 -> p102, r1 -> p123 [p100] | MOV LOAD
957: 992 997 998 998, r0 -> p127, r1 -> p123, r44 -> p103 [p102] | MOV LEA
958: 993 998 999 999, r44 -> p103 | MOV STORE
959: 993 994 995 999, r44 -> p80 [p103] | MOVSX SAVE_PC
960: 994 995 999 999, r44 -> p80, r44 -> p66 [p80] | MOVSX LOAD
961: 995 999 1000 1000, r44 -> p66, r0 -> p57 [p127] | MOVSX SEXT_DWORD_TO_QWORD
962: 996 1000 1001 1001, r0 -> p57, r0 -> p57, r0 -> p67 [p57] | LEA LEA
963: 996 997 998 1001, r44 -> p79 [p66] | MOV SAVE_PC
964: 997 998 1002 1002, r44 -> p79, r1 -> p77 [p123] | MOV LOAD
965: 998 1002 1003 1003, r0 -> p67, r1 -> p77, r44 -> p8 [p79] | MOV LEA
966: 999 1003 1004 1004, r44 -> p8 | MOV STORE
967: 999 1000 1001 1004, r44 -> p1 [p8] | INC SAVE_PC
968: 999 1001 1005 1005, r44 -> p1, r44 -> p45 [p1] | INC LOAD
969: 1000 1005 1006 1006, r44 -> p45, r44 -> p91 [p45] | INC ADD_IMM
970: 1001 1002 1003 1006, r45 -> p125 [p3] | INC SAVE_PC
971: 1001 1006 1007 1007, r44 -> p91, r45 -> p125 | INC STORE
972: 1002 1003 1007 1007, r4 -> p54, r3 -> p78 [p126] | POP LOAD
973: 1003 1004 1005 1007, r4 -> p54, r4 -> p109 [p54] | POP ADD_IMM
974: 1004 1005 1009 1009, r4 -> p109, r14 -> p63 [p115] | POP LOAD
975: 1004 1005 1006 1009, r4 -> p109, r4 -> p90 [p109] | POP ADD_IMM
976: 1005 1006 1010 1010, r4 -> p90, r44 -> p122 [p91] | RET LOAD
977: 1006 1007 1008 1010, r4 -> p90, r4 -> p97 [p90] | RET ADD_IMM
978: 1006 1010 1011 1011, r44 -> p122 | RET JMP_REG
979: 1007 1008 1009 1011 | JMP JMP_IMM
980: 1007 1008 1009 1011, r12 -> p0, r12 -> p112 [p0], r49 -> p70 [p6] | ADD ADD_IMM
981: 1007 1008 1012 1012, r4 -> p97, r45 -> p4 [p125] | CMP LOAD
982: 1009 1012 1013 1013, r15 -> p65, r45 -> p4, r44 -> p104 [p122], r49 -> p13 [p70] | CMP SUB
983: 1009 1013 1014 1014, r49 -> p13 | J JMP_IMM
984: 1010 1011 1012 1014, r44 -> p105 [p104] | MOV SAVE_PC
985: 1010 1012 1016 1016, r44 -> p105, r0 -> p44 [p67] | MOV LOAD
986: 1011 1016 1017 1017, r0 -> p44, r44 -> p15 [p105], r49 -> p119 [p13] | CMP SUB_IMM
987: 1011 1017 1018 1018, r49 -> p119 | J JMP_IMM
988: 1011 1012 1013 1018, r44 -> p81 [p15] | MOV SAVE_PC
989: 1012 1013 1017 1018, r44 -> p81, r1 -> p86 [p77] | MOV LOAD
990: 1013 1017 1018 1018, r1 -> p86, r44 -> p118 [p81], r49 -> p5 [p119] | CMP SUB_IMM
991: 1014 1018 1019 1019, r49 -> p5 | J JMP_IMM
992: 1024 1025 1029 1029, r12 -> p112, r44 -> p2 [p118] | MOVSX LOAD
993: 1024 1029 1030 1030, r44 -> p2, r13 -> p82 [p108] | MOVSX SEXT_DWORD_TO_QWORD
994: 1024 1030 1031 1031, r13 -> p82, r13 -> p82, r44 -> p64 [p2], r49 -> p96 [p5] | TEST AND
995: 1024 1031 1032 1032, r49 -> p96 | J JMP_IMM
996: 1025 1030 1031 1032, r13 -> p82, r5 -> p88 [p111] | MOV ADD
997: 1025 1026 1027 1032, r44 -> p61 [p64] | MOV SAVE_PC
998: 1025 1031 1032 1032, r5 -> p88, r44 -> p61 | MOV STORE
999: 1025 1026 1027 1033, r15 -> p65, r15 -> p89 [p65] | INC ADD_IMM
1000: 1029 1030 1034 1034, r13 -> p82, r1 -> p49 [p86] | MOV LOAD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 750
TotalCycles: 1035
uIPC:0.966184
