g++ -Wall -Wextra -Wno-long-long -O2 -lm -D DEBUG -o simulator_d simulator.c
gzcat sjeng-1K.trace.gz | ./simulator_d
Processing trace...
1: 0 1 2 2, r49 -> p49 | J JMP_IMM
2: 7 8 12 12, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD
3: 8 12 13 13, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD
4: 9 13 14 14, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA
5: 10 14 15 15, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD
6: 12 15 19 19, r6 -> p53, r6 -> p54 [p53] | MOV LOAD
7: 13 19 20 20, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM
8: 14 20 21 21, r49 -> p56 | J JMP_IMM
9: 15 21 22 22, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM
10: 19 22 23 23, r49 -> p58 | J JMP_IMM
11: 28 29 30 30, r2 -> p51, r8 -> p59 [p8] | MOV ADD
12: 29 30 31 31, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA
13: 30 31 32 32, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD
14: 31 32 33 33, r8 -> p61, r8 -> p62 [p61] | LEA LEA
15: 32 33 34 34, r2 -> p51, r2 -> p63 [p51], r49 -> p44 [p58] | SHL SHL_IMM
16: 33 34 35 35 | JMP JMP_IMM
17: 34 35 36 36, r6 -> p54, r44 -> p2 [p57], r49 -> p6 [p44] | CMP SUB_IMM
18: 35 36 37 37, r49 -> p6 | J JMP_IMM
19: 36 37 38 38, r6 -> p54, r44 -> p52 [p2], r49 -> p53 [p6] | CMP SUB_IMM
20: 37 38 39 39, r49 -> p53 | J JMP_IMM
21: 38 39 40 40, r6 -> p54, r44 -> p50 [p52], r49 -> p49 [p53] | CMP SUB_IMM
22: 39 40 41 41, r49 -> p49 | J JMP_IMM
23: 40 41 42 42, r1 -> p1, r1 -> p55 [p1], r49 -> p56 [p49] | ADD ADD_IMM
24: 41 42 43 43, r0 -> p0, r0 -> p8 [p0] | INC ADD_IMM
25: 42 43 44 44, r0 -> p8, r44 -> p59 [p50], r49 -> p60 [p56] | CMP SUB_IMM
26: 43 44 45 45, r49 -> p60 | J JMP_IMM
27: 50 51 55 55, r1 -> p55, r44 -> p61 [p59] | MOVSX LOAD
28: 51 55 56 56, r44 -> p61, r2 -> p51 [p63] | MOVSX SEXT_DWORD_TO_QWORD
29: 52 56 57 57, r7 -> p7, r2 -> p51, r6 -> p58 [p54] | LEA LEA
30: 53 57 58 58, r6 -> p58, r6 -> p57 [p58] | MOVSX SEXT_DWORD_TO_QWORD
31: 55 58 62 62, r6 -> p57, r6 -> p44 [p57] | MOV LOAD
32: 56 62 63 63, r6 -> p44, r44 -> p2 [p61], r49 -> p6 [p60] | CMP SUB_IMM
33: 57 63 64 64, r49 -> p6 | J JMP_IMM
34: 58 64 65 65, r6 -> p44, r44 -> p52 [p2], r49 -> p53 [p6] | CMP SUB_IMM
35: 62 65 66 66, r49 -> p53 | J JMP_IMM
36: 71 72 73 73, r2 -> p51, r8 -> p1 [p62] | MOV ADD
37: 72 73 74 74, r8 -> p1, r7 -> p7, r8 -> p49 [p1] | LEA LEA
38: 73 74 75 75, r8 -> p49, r8 -> p0 [p49] | MOVSX SEXT_DWORD_TO_QWORD
39: 74 75 76 76, r8 -> p0, r8 -> p50 [p0] | LEA LEA
40: 75 76 77 77, r2 -> p51, r2 -> p56 [p51], r49 -> p59 [p53] | SHL SHL_IMM
41: 76 77 78 78 | JMP JMP_IMM
42: 77 78 79 79, r6 -> p44, r44 -> p63 [p52], r49 -> p54 [p59] | CMP SUB_IMM
43: 78 79 80 80, r49 -> p54 | J JMP_IMM
44: 79 80 81 81, r6 -> p44, r44 -> p58 [p63], r49 -> p57 [p54] | CMP SUB_IMM
45: 80 81 82 82, r49 -> p57 | J JMP_IMM
46: 81 82 83 83, r6 -> p44, r44 -> p61 [p58], r49 -> p60 [p57] | CMP SUB_IMM
47: 82 83 84 84, r49 -> p60 | J JMP_IMM
48: 83 84 85 85, r1 -> p55, r1 -> p2 [p55], r49 -> p6 [p60] | ADD ADD_IMM
49: 84 85 86 86, r0 -> p8, r0 -> p62 [p8] | INC ADD_IMM
50: 85 86 87 87, r0 -> p62, r44 -> p1 [p61], r49 -> p49 [p6] | CMP SUB_IMM
51: 86 87 88 88, r49 -> p49 | J JMP_IMM
52: 93 94 98 98, r1 -> p2, r44 -> p0 [p1] | MOVSX LOAD
53: 94 98 99 99, r44 -> p0, r2 -> p51 [p56] | MOVSX SEXT_DWORD_TO_QWORD
54: 95 99 100 100, r7 -> p7, r2 -> p51, r6 -> p53 [p44] | LEA LEA
55: 96 100 101 101, r6 -> p53, r6 -> p52 [p53] | MOVSX SEXT_DWORD_TO_QWORD
56: 98 101 105 105, r6 -> p52, r6 -> p59 [p52] | MOV LOAD
57: 99 105 106 106, r6 -> p59, r44 -> p63 [p0], r49 -> p54 [p49] | CMP SUB_IMM
58: 100 106 107 107, r49 -> p54 | J JMP_IMM
59: 101 107 108 108, r6 -> p59, r44 -> p58 [p63], r49 -> p57 [p54] | CMP SUB_IMM
60: 105 108 109 109, r49 -> p57 | J JMP_IMM
61: 114 115 116 116, r2 -> p51, r8 -> p55 [p50] | MOV ADD
62: 115 116 117 117, r8 -> p55, r7 -> p7, r8 -> p60 [p55] | LEA LEA
63: 116 117 118 118, r8 -> p60, r8 -> p8 [p60] | MOVSX SEXT_DWORD_TO_QWORD
64: 117 118 119 119, r8 -> p8, r8 -> p61 [p8] | LEA LEA
65: 118 119 120 120, r2 -> p51, r2 -> p6 [p51], r49 -> p1 [p57] | SHL SHL_IMM
66: 119 120 121 121 | JMP JMP_IMM
67: 120 121 122 122, r6 -> p59, r44 -> p56 [p58], r49 -> p44 [p1] | CMP SUB_IMM
68: 121 122 123 123, r49 -> p44 | J JMP_IMM
69: 122 123 124 124, r6 -> p59, r44 -> p53 [p56], r49 -> p52 [p44] | CMP SUB_IMM
70: 123 124 125 125, r49 -> p52 | J JMP_IMM
71: 124 125 126 126, r6 -> p59, r44 -> p0 [p53], r49 -> p49 [p52] | CMP SUB_IMM
72: 125 126 127 127, r49 -> p49 | J JMP_IMM
73: 126 127 128 128, r1 -> p2, r1 -> p63 [p2], r49 -> p54 [p49] | ADD ADD_IMM
74: 127 128 129 129, r0 -> p62, r0 -> p50 [p62] | INC ADD_IMM
75: 128 129 130 130, r0 -> p50, r44 -> p55 [p0], r49 -> p60 [p54] | CMP SUB_IMM
76: 129 130 131 131, r49 -> p60 | J JMP_IMM
77: 130 131 132 132, r0 -> p8 [p50] | XOR ADD
78: 131 132 133 133, r1 -> p51 [p63] | MOV ADD_IMM
79: 132 133 134 134 | JMP JMP_IMM
80: 133 134 135 135, r0 -> p8, r44 -> p57 [p55], r49 -> p58 [p60] | CMP SUB_IMM
81: 134 135 136 136, r49 -> p58 | J JMP_IMM
82: 141 142 143 143, r7 -> p7, r2 -> p1 [p6] | MOV ADD
83: 142 143 147 147, r1 -> p51, r44 -> p56 [p57] | ADD LOAD
84: 143 147 148 148, r2 -> p1, r44 -> p56, r2 -> p44 [p1], r49 -> p53 [p58] | ADD ADD
85: 144 148 149 149, r2 -> p44, r2 -> p52 [p44] | MOVSX SEXT_DWORD_TO_QWORD
86: 145 149 153 153, r2 -> p52, r45 -> p2 [p45] | CMP LOAD
87: 147 153 154 154, r45 -> p2, r44 -> p49 [p56], r49 -> p62 [p53] | CMP SUB_IMM
88: 148 154 155 155, r49 -> p62 | J JMP_IMM
89: 149 150 151 156, r1 -> p51, r1 -> p0 [p51], r49 -> p54 [p62] | ADD ADD_IMM
90: 153 155 156 157, r0 -> p8, r0 -> p50 [p8] | INC ADD_IMM
91: 154 156 157 158, r0 -> p50, r44 -> p63 [p49], r49 -> p55 [p54] | CMP SUB_IMM
92: 155 157 158 159, r49 -> p55 | J JMP_IMM
93: 163 164 165 165, r7 -> p7, r2 -> p60 [p52] | MOV ADD
94: 164 165 169 169, r1 -> p0, r44 -> p6 [p63] | ADD LOAD
95: 165 169 170 170, r2 -> p60, r44 -> p6, r2 -> p57 [p60], r49 -> p1 [p55] | ADD ADD
96: 166 170 171 171, r2 -> p57, r2 -> p58 [p57] | MOVSX SEXT_DWORD_TO_QWORD
97: 167 171 175 175, r2 -> p58, r45 -> p44 [p2] | CMP LOAD
98: 169 175 176 176, r45 -> p44, r44 -> p45 [p6], r49 -> p56 [p1] | CMP SUB_IMM
99: 170 176 177 177, r49 -> p56 | J JMP_IMM
100: 171 172 173 178, r1 -> p0, r1 -> p53 [p0], r49 -> p51 [p56] | ADD ADD_IMM
101: 175 177 178 179, r0 -> p50, r0 -> p62 [p50] | INC ADD_IMM
102: 176 178 179 180, r0 -> p62, r44 -> p8 [p45], r49 -> p49 [p51] | CMP SUB_IMM
103: 177 179 180 181, r49 -> p49 | J JMP_IMM
104: 185 186 187 187, r7 -> p7, r2 -> p54 [p58] | MOV ADD
105: 186 187 191 191, r1 -> p53, r44 -> p52 [p8] | ADD LOAD
106: 187 191 192 192, r2 -> p54, r44 -> p52, r2 -> p63 [p54], r49 -> p60 [p49] | ADD ADD
107: 188 192 193 193, r2 -> p63, r2 -> p55 [p63] | MOVSX SEXT_DWORD_TO_QWORD
108: 189 193 197 197, r2 -> p55, r45 -> p57 [p44] | CMP LOAD
109: 191 197 198 198, r45 -> p57, r44 -> p2 [p52], r49 -> p6 [p60] | CMP SUB_IMM
110: 192 198 199 199, r49 -> p6 | J JMP_IMM
111: 193 194 195 200, r1 -> p53, r1 -> p1 [p53], r49 -> p0 [p6] | ADD ADD_IMM
112: 197 199 200 201, r0 -> p62, r0 -> p56 [p62] | INC ADD_IMM
113: 198 200 201 202, r0 -> p56, r44 -> p50 [p2], r49 -> p45 [p0] | CMP SUB_IMM
114: 199 201 202 203, r49 -> p45 | J JMP_IMM
115: 207 208 209 209, r7 -> p7, r2 -> p51 [p55] | MOV ADD
116: 208 209 213 213, r1 -> p1, r44 -> p58 [p50] | ADD LOAD
117: 209 213 214 214, r2 -> p51, r44 -> p58, r2 -> p8 [p51], r49 -> p54 [p45] | ADD ADD
118: 210 214 215 215, r2 -> p8, r2 -> p49 [p8] | MOVSX SEXT_DWORD_TO_QWORD
119: 211 215 219 219, r2 -> p49, r45 -> p63 [p57] | CMP LOAD
120: 213 219 220 220, r45 -> p63, r44 -> p44 [p58], r49 -> p52 [p54] | CMP SUB_IMM
121: 214 220 221 221, r49 -> p52 | J JMP_IMM
122: 215 216 217 222, r1 -> p1, r1 -> p60 [p1], r49 -> p53 [p52] | ADD ADD_IMM
123: 219 221 222 223, r0 -> p56, r0 -> p6 [p56] | INC ADD_IMM
124: 220 222 223 224, r0 -> p6, r44 -> p62 [p44], r49 -> p2 [p53] | CMP SUB_IMM
125: 221 223 224 225, r49 -> p2 | J JMP_IMM
126: 229 230 231 231, r7 -> p7, r2 -> p0 [p49] | MOV ADD
127: 230 231 235 235, r1 -> p60, r44 -> p55 [p62] | ADD LOAD
128: 231 235 236 236, r2 -> p0, r44 -> p55, r2 -> p50 [p0], r49 -> p51 [p2] | ADD ADD
129: 232 236 237 237, r2 -> p50, r2 -> p45 [p50] | MOVSX SEXT_DWORD_TO_QWORD
130: 233 237 241 241, r2 -> p45, r45 -> p8 [p63] | CMP LOAD
131: 235 241 242 242, r45 -> p8, r44 -> p57 [p55], r49 -> p58 [p51] | CMP SUB_IMM
132: 236 242 243 243, r49 -> p58 | J JMP_IMM
133: 237 238 239 244, r1 -> p60, r1 -> p54 [p60], r49 -> p1 [p58] | ADD ADD_IMM
134: 241 243 244 245, r0 -> p6, r0 -> p52 [p6] | INC ADD_IMM
135: 242 244 245 246, r0 -> p52, r44 -> p56 [p57], r49 -> p44 [p1] | CMP SUB_IMM
136: 243 245 246 247, r49 -> p44 | J JMP_IMM
137: 251 252 253 253, r7 -> p7, r2 -> p53 [p45] | MOV ADD
138: 252 253 257 257, r1 -> p54, r44 -> p49 [p56] | ADD LOAD
139: 253 257 258 258, r2 -> p53, r44 -> p49, r2 -> p62 [p53], r49 -> p0 [p44] | ADD ADD
140: 254 258 259 259, r2 -> p62, r2 -> p2 [p62] | MOVSX SEXT_DWORD_TO_QWORD
141: 255 259 263 263, r2 -> p2, r45 -> p50 [p8] | CMP LOAD
142: 257 263 264 264, r45 -> p50, r44 -> p63 [p49], r49 -> p55 [p0] | CMP SUB_IMM
143: 258 264 265 265, r49 -> p55 | J JMP_IMM
144: 259 260 261 266, r1 -> p54, r1 -> p51 [p54], r49 -> p60 [p55] | ADD ADD_IMM
145: 263 265 266 267, r0 -> p52, r0 -> p58 [p52] | INC ADD_IMM
146: 264 266 267 268, r0 -> p58, r44 -> p6 [p63], r49 -> p57 [p60] | CMP SUB_IMM
147: 265 267 268 269, r49 -> p57 | J JMP_IMM
148: 273 274 275 275, r7 -> p7, r2 -> p1 [p2] | MOV ADD
149: 274 275 279 279, r1 -> p51, r44 -> p45 [p6] | ADD LOAD
150: 275 279 280 280, r2 -> p1, r44 -> p45, r2 -> p56 [p1], r49 -> p53 [p57] | ADD ADD
151: 276 280 281 281, r2 -> p56, r2 -> p44 [p56] | MOVSX SEXT_DWORD_TO_QWORD
152: 277 281 285 285, r2 -> p44, r45 -> p62 [p50] | CMP LOAD
153: 279 285 286 286, r45 -> p62, r44 -> p8 [p45], r49 -> p49 [p53] | CMP SUB_IMM
154: 280 286 287 287, r49 -> p49 | J JMP_IMM
155: 281 282 283 288, r1 -> p51, r1 -> p0 [p51], r49 -> p54 [p49] | ADD ADD_IMM
156: 285 287 288 289, r0 -> p58, r0 -> p55 [p58] | INC ADD_IMM
157: 286 288 289 290, r0 -> p55, r44 -> p52 [p8], r49 -> p63 [p54] | CMP SUB_IMM
158: 287 289 290 291, r49 -> p63 | J JMP_IMM
159: 295 296 297 297, r7 -> p7, r2 -> p60 [p44] | MOV ADD
160: 296 297 301 301, r1 -> p0, r44 -> p2 [p52] | ADD LOAD
161: 297 301 302 302, r2 -> p60, r44 -> p2, r2 -> p6 [p60], r49 -> p1 [p63] | ADD ADD
162: 298 302 303 303, r2 -> p6, r2 -> p57 [p6] | MOVSX SEXT_DWORD_TO_QWORD
163: 299 303 307 307, r2 -> p57, r45 -> p56 [p62] | CMP LOAD
164: 301 307 308 308, r45 -> p56, r44 -> p50 [p2], r49 -> p45 [p1] | CMP SUB_IMM
165: 302 308 309 309, r49 -> p45 | J JMP_IMM
166: 303 304 305 310, r1 -> p0, r1 -> p53 [p0], r49 -> p51 [p45] | ADD ADD_IMM
167: 307 309 310 311, r0 -> p55, r0 -> p49 [p55] | INC ADD_IMM
168: 308 310 311 312, r0 -> p49, r44 -> p58 [p50], r49 -> p8 [p51] | CMP SUB_IMM
169: 309 311 312 313, r49 -> p8 | J JMP_IMM
170: 310 312 313 314, r0 -> p54 [p49] | XOR ADD
171: 311 313 314 315, r1 -> p44 [p53] | MOV ADD_IMM
172: 312 314 315 316 | JMP JMP_IMM
173: 313 315 316 317, r0 -> p54, r44 -> p52 [p58], r49 -> p60 [p8] | CMP SUB_IMM
174: 314 316 317 318, r49 -> p60 | J JMP_IMM
175: 322 323 327 327, r1 -> p44, r44 -> p63 [p52] | MOVSX LOAD
176: 323 327 328 328, r44 -> p63, r2 -> p6 [p57] | MOVSX SEXT_DWORD_TO_QWORD
177: 324 328 329 329, r7 -> p7, r2 -> p6, r6 -> p62 [p59] | LEA LEA
178: 325 329 330 330, r6 -> p62, r6 -> p2 [p62] | MOVSX SEXT_DWORD_TO_QWORD
179: 327 330 334 334, r6 -> p2, r6 -> p1 [p2] | MOV LOAD
180: 328 334 335 335, r6 -> p1, r44 -> p0 [p63], r49 -> p45 [p60] | CMP SUB_IMM
181: 329 335 336 336, r49 -> p45 | J JMP_IMM
182: 330 331 332 337, r2 -> p6, r8 -> p55 [p61] | MOV ADD
183: 334 336 337 338, r8 -> p55, r7 -> p7, r8 -> p50 [p55] | LEA LEA
184: 335 337 338 339, r8 -> p50, r8 -> p51 [p50] | MOVSX SEXT_DWORD_TO_QWORD
185: 336 338 339 340, r8 -> p51, r8 -> p49 [p51] | LEA LEA
186: 337 339 340 341, r2 -> p6, r2 -> p53 [p6], r49 -> p58 [p45] | SHL SHL_IMM
187: 338 340 341 342 | JMP JMP_IMM
188: 339 341 342 343, r6 -> p1, r44 -> p8 [p0], r49 -> p52 [p58] | CMP SUB_IMM
189: 340 342 343 344, r49 -> p52 | J JMP_IMM
190: 341 343 344 345, r6 -> p1, r44 -> p57 [p8], r49 -> p59 [p52] | CMP SUB_IMM
191: 342 344 345 346, r49 -> p59 | J JMP_IMM
192: 343 345 346 347, r6 -> p1, r44 -> p62 [p57], r49 -> p2 [p59] | CMP SUB_IMM
193: 344 346 347 348, r49 -> p2 | J JMP_IMM
194: 345 347 348 349, r1 -> p44, r1 -> p63 [p44], r49 -> p60 [p2] | ADD ADD_IMM
195: 346 348 349 350, r0 -> p54, r0 -> p61 [p54] | INC ADD_IMM
196: 347 349 350 351, r0 -> p61, r44 -> p55 [p62], r49 -> p50 [p60] | CMP SUB_IMM
197: 348 350 351 352, r49 -> p50 | J JMP_IMM
198: 356 357 361 361, r1 -> p63, r44 -> p51 [p55] | MOVSX LOAD
199: 357 361 362 362, r44 -> p51, r2 -> p6 [p53] | MOVSX SEXT_DWORD_TO_QWORD
200: 358 362 363 363, r7 -> p7, r2 -> p6, r6 -> p45 [p1] | LEA LEA
201: 359 363 364 364, r6 -> p45, r6 -> p0 [p45] | MOVSX SEXT_DWORD_TO_QWORD
202: 361 364 368 368, r6 -> p0, r6 -> p58 [p0] | MOV LOAD
203: 362 368 369 369, r6 -> p58, r44 -> p8 [p51], r49 -> p52 [p50] | CMP SUB_IMM
204: 363 369 370 370, r49 -> p52 | J JMP_IMM
205: 364 365 366 371, r2 -> p6, r8 -> p57 [p49] | MOV ADD
206: 368 370 371 372, r8 -> p57, r7 -> p7, r8 -> p59 [p57] | LEA LEA
207: 369 371 372 373, r8 -> p59, r8 -> p44 [p59] | MOVSX SEXT_DWORD_TO_QWORD
208: 370 372 373 374, r8 -> p44, r8 -> p2 [p44] | LEA LEA
209: 371 373 374 375, r2 -> p6, r2 -> p54 [p6], r49 -> p62 [p52] | SHL SHL_IMM
210: 372 374 375 376 | JMP JMP_IMM
211: 373 375 376 377, r6 -> p58, r44 -> p60 [p8], r49 -> p55 [p62] | CMP SUB_IMM
212: 374 376 377 378, r49 -> p55 | J JMP_IMM
213: 375 377 378 379, r6 -> p58, r44 -> p53 [p60], r49 -> p1 [p55] | CMP SUB_IMM
214: 376 378 379 380, r49 -> p1 | J JMP_IMM
215: 377 379 380 381, r6 -> p58, r44 -> p45 [p53], r49 -> p0 [p1] | CMP SUB_IMM
216: 378 380 381 382, r49 -> p0 | J JMP_IMM
217: 386 387 391 391, r8 -> p2, r6 -> p51 [p58] | MOV LOAD
218: 387 388 389 392, r8 -> p2, r2 -> p54, r8 -> p50 [p2], r49 -> p49 [p0] | ADD ADD
219: 388 391 392 393, r6 -> p51, r44 -> p57 [p45], r49 -> p59 [p49] | CMP SUB_IMM
220: 389 392 393 394, r49 -> p59 | J JMP_IMM
221: 391 393 394 395, r6 -> p51, r44 -> p44 [p57], r49 -> p6 [p59] | CMP SUB_IMM
222: 392 394 395 396, r49 -> p6 | J JMP_IMM
223: 393 395 396 397, r6 -> p51, r44 -> p52 [p44], r49 -> p8 [p6] | CMP SUB_IMM
224: 394 396 397 398, r49 -> p8 | J JMP_IMM
225: 402 403 407 407, r8 -> p50, r6 -> p62 [p51] | MOV LOAD
226: 403 404 405 408, r8 -> p50, r2 -> p54, r8 -> p60 [p50], r49 -> p55 [p8] | ADD ADD
227: 404 407 408 409, r6 -> p62, r44 -> p53 [p52], r49 -> p1 [p55] | CMP SUB_IMM
228: 405 408 409 410, r49 -> p1 | J JMP_IMM
229: 407 409 410 411, r6 -> p62, r44 -> p58 [p53], r49 -> p2 [p1] | CMP SUB_IMM
230: 408 410 411 412, r49 -> p2 | J JMP_IMM
231: 409 411 412 413, r6 -> p62, r44 -> p0 [p58], r49 -> p45 [p2] | CMP SUB_IMM
232: 410 412 413 414, r49 -> p45 | J JMP_IMM
233: 411 413 414 415, r1 -> p63, r1 -> p49 [p63], r49 -> p57 [p45] | ADD ADD_IMM
234: 412 414 415 416, r0 -> p61, r0 -> p59 [p61] | INC ADD_IMM
235: 413 415 416 417, r0 -> p59, r44 -> p44 [p0], r49 -> p6 [p57] | CMP SUB_IMM
236: 414 416 417 418, r49 -> p6 | J JMP_IMM
237: 422 423 427 427, r1 -> p49, r44 -> p51 [p44] | MOVSX LOAD
238: 423 427 428 428, r44 -> p51, r2 -> p50 [p54] | MOVSX SEXT_DWORD_TO_QWORD
239: 424 428 429 429, r7 -> p7, r2 -> p50, r6 -> p8 [p62] | LEA LEA
240: 425 429 430 430, r6 -> p8, r6 -> p52 [p8] | MOVSX SEXT_DWORD_TO_QWORD
241: 427 430 434 434, r6 -> p52, r6 -> p55 [p52] | MOV LOAD
242: 428 434 435 435, r6 -> p55, r44 -> p53 [p51], r49 -> p1 [p6] | CMP SUB_IMM
243: 429 435 436 436, r49 -> p1 | J JMP_IMM
244: 430 431 432 437, r2 -> p50, r8 -> p58 [p60] | MOV ADD
245: 434 436 437 438, r8 -> p58, r7 -> p7, r8 -> p2 [p58] | LEA LEA
246: 435 437 438 439, r8 -> p2, r8 -> p63 [p2] | MOVSX SEXT_DWORD_TO_QWORD
247: 436 438 439 440, r8 -> p63, r8 -> p45 [p63] | LEA LEA
248: 437 439 440 441, r2 -> p50, r2 -> p61 [p50], r49 -> p0 [p1] | SHL SHL_IMM
249: 438 440 441 442 | JMP JMP_IMM
250: 439 441 442 443, r6 -> p55, r44 -> p57 [p53], r49 -> p44 [p0] | CMP SUB_IMM
251: 440 442 443 444, r49 -> p44 | J JMP_IMM
252: 441 443 444 445, r6 -> p55, r44 -> p54 [p57], r49 -> p62 [p44] | CMP SUB_IMM
253: 442 444 445 446, r49 -> p62 | J JMP_IMM
254: 443 445 446 447, r6 -> p55, r44 -> p8 [p54], r49 -> p52 [p62] | CMP SUB_IMM
255: 444 446 447 448, r49 -> p52 | J JMP_IMM
256: 452 453 457 457, r8 -> p45, r6 -> p51 [p55] | MOV LOAD
257: 453 454 455 458, r8 -> p45, r2 -> p61, r8 -> p6 [p45], r49 -> p60 [p52] | ADD ADD
258: 454 457 458 459, r6 -> p51, r44 -> p58 [p8], r49 -> p2 [p60] | CMP SUB_IMM
259: 455 458 459 460, r49 -> p2 | J JMP_IMM
260: 457 459 460 461, r6 -> p51, r44 -> p63 [p58], r49 -> p50 [p2] | CMP SUB_IMM
261: 458 460 461 462, r49 -> p50 | J JMP_IMM
262: 459 461 462 463, r6 -> p51, r44 -> p1 [p63], r49 -> p53 [p50] | CMP SUB_IMM
263: 460 462 463 464, r49 -> p53 | J JMP_IMM
264: 468 469 473 473, r8 -> p6, r6 -> p0 [p51] | MOV LOAD
265: 469 470 471 474, r8 -> p6, r2 -> p61, r8 -> p57 [p6], r49 -> p44 [p53] | ADD ADD
266: 470 473 474 475, r6 -> p0, r44 -> p54 [p1], r49 -> p62 [p44] | CMP SUB_IMM
267: 471 474 475 476, r49 -> p62 | J JMP_IMM
268: 473 475 476 477, r6 -> p0, r44 -> p55 [p54], r49 -> p45 [p62] | CMP SUB_IMM
269: 474 476 477 478, r49 -> p45 | J JMP_IMM
270: 475 477 478 479, r6 -> p0, r44 -> p52 [p55], r49 -> p8 [p45] | CMP SUB_IMM
271: 476 478 479 480, r49 -> p8 | J JMP_IMM
272: 477 479 480 481, r1 -> p49, r1 -> p60 [p49], r49 -> p58 [p8] | ADD ADD_IMM
273: 478 480 481 482, r0 -> p59, r0 -> p2 [p59] | INC ADD_IMM
274: 479 481 482 483, r0 -> p2, r44 -> p63 [p52], r49 -> p50 [p58] | CMP SUB_IMM
275: 480 482 483 484, r49 -> p50 | J JMP_IMM
276: 488 489 493 493, r1 -> p60, r44 -> p51 [p63] | MOVSX LOAD
277: 489 493 494 494, r44 -> p51, r2 -> p6 [p61] | MOVSX SEXT_DWORD_TO_QWORD
278: 490 494 495 495, r7 -> p7, r2 -> p6, r6 -> p53 [p0] | LEA LEA
279: 491 495 496 496, r6 -> p53, r6 -> p1 [p53] | MOVSX SEXT_DWORD_TO_QWORD
280: 493 496 500 500, r6 -> p1, r6 -> p44 [p1] | MOV LOAD
281: 494 500 501 501, r6 -> p44, r44 -> p54 [p51], r49 -> p62 [p50] | CMP SUB_IMM
282: 495 501 502 502, r49 -> p62 | J JMP_IMM
283: 496 497 498 503, r2 -> p6, r8 -> p55 [p57] | MOV ADD
284: 500 502 503 504, r8 -> p55, r7 -> p7, r8 -> p45 [p55] | LEA LEA
285: 501 503 504 505, r8 -> p45, r8 -> p49 [p45] | MOVSX SEXT_DWORD_TO_QWORD
286: 502 504 505 506, r8 -> p49, r8 -> p8 [p49] | LEA LEA
287: 503 505 506 507, r2 -> p6, r2 -> p59 [p6], r49 -> p52 [p62] | SHL SHL_IMM
288: 504 506 507 508 | JMP JMP_IMM
289: 505 507 508 509, r6 -> p44, r44 -> p58 [p54], r49 -> p63 [p52] | CMP SUB_IMM
290: 506 508 509 510, r49 -> p63 | J JMP_IMM
291: 507 509 510 511, r6 -> p44, r44 -> p61 [p58], r49 -> p0 [p63] | CMP SUB_IMM
292: 508 510 511 512, r49 -> p0 | J JMP_IMM
293: 509 511 512 513, r6 -> p44, r44 -> p53 [p61], r49 -> p1 [p0] | CMP SUB_IMM
294: 510 512 513 514, r49 -> p1 | J JMP_IMM
295: 518 519 523 523, r8 -> p8, r6 -> p51 [p44] | MOV LOAD
296: 519 520 521 524, r8 -> p8, r2 -> p59, r8 -> p50 [p8], r49 -> p57 [p1] | ADD ADD
297: 520 523 524 525, r6 -> p51, r44 -> p55 [p53], r49 -> p45 [p57] | CMP SUB_IMM
298: 521 524 525 526, r49 -> p45 | J JMP_IMM
299: 523 525 526 527, r6 -> p51, r44 -> p49 [p55], r49 -> p6 [p45] | CMP SUB_IMM
300: 524 526 527 528, r49 -> p6 | J JMP_IMM
301: 525 527 528 529, r6 -> p51, r44 -> p62 [p49], r49 -> p54 [p6] | CMP SUB_IMM
302: 526 528 529 530, r49 -> p54 | J JMP_IMM
303: 534 535 539 539, r8 -> p50, r6 -> p52 [p51] | MOV LOAD
304: 535 536 537 540, r8 -> p50, r2 -> p59, r8 -> p58 [p50], r49 -> p63 [p54] | ADD ADD
305: 536 539 540 541, r6 -> p52, r44 -> p61 [p62], r49 -> p0 [p63] | CMP SUB_IMM
306: 537 540 541 542, r49 -> p0 | J JMP_IMM
307: 539 541 542 543, r6 -> p52, r44 -> p44 [p61], r49 -> p8 [p0] | CMP SUB_IMM
308: 540 542 543 544, r49 -> p8 | J JMP_IMM
309: 541 543 544 545, r6 -> p52, r44 -> p1 [p44], r49 -> p53 [p8] | CMP SUB_IMM
310: 542 544 545 546, r49 -> p53 | J JMP_IMM
311: 550 551 555 555, r8 -> p58, r6 -> p57 [p52] | MOV LOAD
312: 551 552 553 556, r8 -> p58, r2 -> p59, r8 -> p55 [p58], r49 -> p45 [p53] | ADD ADD
313: 552 555 556 557, r6 -> p57, r44 -> p49 [p1], r49 -> p6 [p45] | CMP SUB_IMM
314: 553 556 557 558, r49 -> p6 | J JMP_IMM
315: 555 557 558 559, r6 -> p57, r44 -> p51 [p49], r49 -> p50 [p6] | CMP SUB_IMM
316: 556 558 559 560, r49 -> p50 | J JMP_IMM
317: 557 559 560 561, r6 -> p57, r44 -> p54 [p51], r49 -> p62 [p50] | CMP SUB_IMM
318: 558 560 561 562, r49 -> p62 | J JMP_IMM
319: 559 561 562 563, r1 -> p60, r1 -> p63 [p60], r49 -> p61 [p62] | ADD ADD_IMM
320: 560 562 563 564, r0 -> p2, r0 -> p0 [p2] | INC ADD_IMM
321: 561 563 564 565, r0 -> p0, r44 -> p44 [p54], r49 -> p8 [p61] | CMP SUB_IMM
322: 562 564 565 566, r49 -> p8 | J JMP_IMM
323: 563 565 566 567, r0 -> p52 [p0] | XOR ADD
324: 564 566 570 570, r4 -> p4, r44 -> p58 [p44] | RET LOAD
325: 565 567 568 571, r4 -> p4, r4 -> p53 [p4] | RET ADD_IMM
326: 566 570 571 572, r44 -> p58 | RET JMP_REG
327: 567 568 569 573, r0 -> p52, r0 -> p52, r44 -> p1 [p58], r49 -> p45 [p8] | TEST AND
328: 570 571 572 574, r0 -> p49 [p52] | SET ADD
329: 571 572 573 575, r49 -> p45, r0 -> p6 [p49] | SET ADD_IMM
330: 572 573 574 576, r0 -> p6, r0 -> p51 [p6] | MOVZX ZEXT_BYTE_TO_DWORD
331: 573 574 575 577, r4 -> p53, r4 -> p50 [p53], r49 -> p60 [p45] | ADD ADD_IMM
332: 574 575 579 579, r4 -> p50, r44 -> p62 [p1] | RET LOAD
333: 575 576 577 580, r4 -> p50, r4 -> p2 [p50] | RET ADD_IMM
334: 576 579 580 581, r44 -> p62 | RET JMP_REG
335: 577 578 579 582, r0 -> p51, r0 -> p51, r44 -> p54 [p62], r49 -> p61 [p60] | TEST AND
336: 579 580 581 583, r49 -> p61 | J JMP_IMM
337: 580 581 582 584, r4 -> p2, r0 -> p0 [p51] | LEA LEA
338: 581 582 583 585, r0 -> p0, r7 -> p44 [p7] | MOV ADD
339: 582 583 584 586, r13 -> p13, r6 -> p4 [p57] | MOV ADD
340: 583 584 585 587, r44 -> p58 [p54] | CALL SAVE_PC
341: 584 585 586 588, r4 -> p2, r4 -> p8 [p2] | CALL SUB_IMM
342: 585 586 587 589, r44 -> p58, r4 -> p8 | CALL STORE
343: 586 587 588 590 | CALL JMP_IMM
344: 587 588 589 591, r4 -> p8, r4 -> p52 [p8], r49 -> p49 [p61] | SUB SUB_IMM
345: 588 589 590 592, r45 -> p6 [p56] | CMP SAVE_PC
346: 589 590 594 594, r45 -> p6, r45 -> p53 [p6] | CMP LOAD
347: 590 594 595 595, r45 -> p53, r44 -> p45 [p58], r49 -> p1 [p49] | CMP SUB_IMM
348: 591 595 596 596, r49 -> p1 | J JMP_IMM
349: 601 602 603 603, r6 -> p4, r0 -> p50 [p0] | MOVSX SEXT_DWORD_TO_QWORD
350: 602 603 604 604, r0 -> p50, r0 -> p50, r1 -> p62 [p63] | LEA LEA
351: 603 604 608 608, r1 -> p62, r7 -> p44, r44 -> p60 [p45] | MOVSX LOAD
352: 604 608 609 609, r44 -> p60, r2 -> p51 [p59] | MOVSX SEXT_DWORD_TO_QWORD
353: 605 606 610 610, r1 -> p62, r7 -> p44, r44 -> p7 [p60] | MOVSX LOAD
354: 606 610 611 611, r44 -> p7, r1 -> p57 [p62] | MOVSX SEXT_DWORD_TO_QWORD
355: 608 611 615 615, r1 -> p57, r6 -> p54 [p4] | MOV LOAD
356: 609 612 613 616, r45 -> p2 [p53] | CMP SAVE_PC
357: 610 613 617 617, r45 -> p2, r45 -> p8 [p2] | CMP LOAD
358: 611 617 618 618, r45 -> p8, r44 -> p61 [p7], r49 -> p56 [p1] | CMP SUB_IMM
359: 615 618 619 619, r49 -> p56 | J JMP_IMM
360: 616 619 620 620, r6 -> p54, r6 -> p6 [p54], r49 -> p58 [p56] | ADD ADD_IMM
361: 617 620 621 621, r6 -> p6, r44 -> p49 [p61], r49 -> p0 [p58] | CMP SUB_IMM
362: 618 621 622 622, r49 -> p0 | J JMP_IMM
363: 619 622 626 626, r6 -> p6, r44 -> p63 [p49] | JMP LOAD
364: 620 626 627 627, r44 -> p63 | JMP JMP_REG
365: 621 623 624 628, r1 -> p57, r6 -> p45 [p6] | LEA LEA
366: 622 624 625 629, r6 -> p45, r0 -> p59 [p50] | MOVSX SEXT_DWORD_TO_QWORD
367: 626 627 631 631, r0 -> p59, r45 -> p60 [p8] | CMP LOAD
368: 627 631 632 632, r45 -> p60, r44 -> p62 [p63], r49 -> p4 [p0] | CMP SUB_IMM
369: 628 632 633 633, r49 -> p4 | J JMP_IMM
370: 638 639 640 640, r1 -> p57, r1 -> p53 [p57], r49 -> p2 [p4] | ADD ADD_IMM
371: 639 640 641 641, r1 -> p53, r0 -> p7 [p59] | MOVSX SEXT_DWORD_TO_QWORD
372: 640 641 645 645, r0 -> p7, r45 -> p1 [p60] | CMP LOAD
373: 641 645 646 646, r45 -> p1, r44 -> p54 [p62], r49 -> p56 [p2] | CMP SUB_IMM
374: 642 646 647 647, r49 -> p56 | J JMP_IMM
375: 643 644 645 648, r2 -> p51, r2 -> p51, r44 -> p61 [p54], r49 -> p58 [p56] | TEST AND
376: 645 647 648 649, r49 -> p58 | J JMP_IMM
377: 646 648 649 650, r44 -> p49 [p61] | MOVSX SAVE_PC
378: 647 649 653 653, r44 -> p49, r44 -> p6 [p49] | MOVSX LOAD
379: 648 653 654 654, r44 -> p6, r0 -> p50 [p7] | MOVSX SEXT_DWORD_TO_QWORD
380: 649 654 658 658, r0 -> p50, r6 -> p8 [p45] | MOV LOAD
381: 650 651 655 659, r2 -> p51, r45 -> p63 [p1] | CMP LOAD
382: 653 658 659 660, r45 -> p63, r6 -> p8, r44 -> p0 [p6], r49 -> p57 [p58] | CMP SUB
383: 654 659 660 661, r49 -> p57 | J JMP_IMM
384: 665 666 670 670, r0 -> p50, r6 -> p4 [p8] | MOV LOAD
385: 666 667 671 671, r2 -> p51, r45 -> p59 [p63] | CMP LOAD
386: 667 671 672 672, r45 -> p59, r6 -> p4, r44 -> p60 [p0], r49 -> p62 [p57] | CMP SUB
387: 668 672 673 673, r49 -> p62 | J JMP_IMM
388: 678 679 683 683, r0 -> p50, r6 -> p2 [p4] | MOV LOAD
389: 679 680 684 684, r2 -> p51, r45 -> p54 [p59] | CMP LOAD
390: 680 684 685 685, r45 -> p54, r6 -> p2, r44 -> p56 [p60], r49 -> p61 [p62] | CMP SUB
391: 681 685 686 686, r49 -> p61 | J JMP_IMM
392: 691 692 696 696, r0 -> p50, r6 -> p49 [p2] | MOV LOAD
393: 692 693 697 697, r2 -> p51, r45 -> p7 [p54] | CMP LOAD
394: 693 697 698 698, r45 -> p7, r6 -> p49, r44 -> p45 [p56], r49 -> p1 [p61] | CMP SUB
395: 694 698 699 699, r49 -> p1 | J JMP_IMM
396: 704 705 706 706, r0 -> p6 [p50] | XOR ADD
397: 705 706 707 707, r4 -> p52, r4 -> p58 [p52], r49 -> p8 [p1] | ADD ADD_IMM
398: 706 707 711 711, r4 -> p58, r44 -> p63 [p45] | RET LOAD
399: 707 708 709 712, r4 -> p58, r4 -> p0 [p58] | RET ADD_IMM
400: 708 711 712 713, r44 -> p63 | RET JMP_REG
401: 709 710 711 714, r5 -> p5, r44 -> p57 [p63] | MOV LEA
402: 711 712 713 715, r0 -> p6, r44 -> p57 | MOV STORE
403: 712 713 714 716, r0 -> p6, r0 -> p6, r44 -> p4 [p57], r49 -> p59 [p8] | TEST AND
404: 713 714 715 717, r49 -> p59 | J JMP_IMM
405: 720 721 722 722, r44 -> p60 [p4] | MOV SAVE_PC
406: 721 722 726 726, r44 -> p60, r14 -> p62 [p14] | MOV LOAD
407: 722 726 727 727, r14 -> p62, r14 -> p2 [p62], r49 -> p54 [p59] | ADD ADD_IMM
408: 723 727 728 728, r14 -> p2, r44 -> p56 [p60], r49 -> p61 [p54] | CMP SUB_IMM
409: 724 728 729 729, r49 -> p61 | J JMP_IMM
410: 726 729 733 733, r4 -> p0, r45 -> p50 [p7] | CMP LOAD
411: 727 733 734 734, r45 -> p50, r44 -> p52 [p56], r49 -> p1 [p61] | CMP SUB_IMM
412: 728 734 735 735, r49 -> p1 | J JMP_IMM
413: 729 730 731 736, r13 -> p13, r1 -> p45 [p53] | MOVSX SEXT_DWORD_TO_QWORD
414: 733 735 736 737, r1 -> p45, r1 -> p45, r1 -> p58 [p45] | LEA LEA
415: 734 736 740 740, r1 -> p58, r4 -> p0, r44 -> p63 [p52] | MOVSX LOAD
416: 735 740 741 741, r44 -> p63, r1 -> p57 [p58] | MOVSX SEXT_DWORD_TO_QWORD
417: 736 741 745 745, r1 -> p57, r14 -> p8 [p2] | MOV LOAD
418: 737 745 746 746, r14 -> p8, r44 -> p4 [p63], r49 -> p14 [p1] | CMP SUB_IMM
419: 740 746 747 747, r49 -> p14 | J JMP_IMM
420: 741 747 748 748, r14 -> p8, r44 -> p62 [p4], r49 -> p59 [p14] | CMP SUB_IMM
421: 745 748 749 749, r49 -> p59 | J JMP_IMM
422: 746 749 753 753, r1 -> p57, r1 -> p60 [p57] | MOV LOAD
423: 747 750 751 754 | JMP JMP_IMM
424: 748 753 754 755, r1 -> p60, r44 -> p54 [p62], r49 -> p7 [p59] | CMP SUB_IMM
425: 749 754 755 756, r49 -> p7 | J JMP_IMM
426: 760 761 762 762, r14 -> p56 [p8] | XOR ADD
427: 761 762 763 763 | JMP JMP_IMM
428: 762 763 764 764, r13 -> p13, r1 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD
429: 763 764 765 765, r1 -> p61, r1 -> p61, r2 -> p53 [p51] | LEA LEA
430: 764 765 769 769, r2 -> p53, r4 -> p0, r45 -> p45 [p50] | CMP LOAD
431: 765 769 770 770, r45 -> p45, r44 -> p52 [p54], r49 -> p58 [p7] | CMP SUB
432: 766 770 771 771, r49 -> p58 | J JMP_IMM
433: 776 777 778 778, r0 -> p6, r0 -> p6, r44 -> p2 [p52], r49 -> p63 [p58] | TEST AND
434: 777 778 779 779, r0 -> p1 [p6] | SET ADD
435: 778 779 780 780, r49 -> p63, r0 -> p4 [p1] | SET ADD_IMM
436: 779 780 784 784, r4 -> p0, r45 -> p14 [p45] | CMP LOAD
437: 780 784 785 785, r45 -> p14, r44 -> p57 [p2], r49 -> p62 [p63] | CMP SUB
438: 781 785 786 786, r49 -> p62 | J JMP_IMM
439: 791 792 796 796, r4 -> p0, r2 -> p59 [p53] | MOV LOAD
440: 792 796 797 797, r14 -> p56, r2 -> p59, r5 -> p8 [p5] | LEA LEA
441: 793 794 798 798, r4 -> p0, r45 -> p60 [p14] | TEST LOAD
442: 794 798 799 799, r45 -> p60, r44 -> p51 [p57], r49 -> p50 [p62] | TEST AND_IMM
443: 796 799 800 800, r49 -> p50 | J JMP_IMM
444: 797 800 801 801, r14 -> p54 [p56] | XOR ADD
445: 798 801 805 805, r4 -> p0, r7 -> p7 [p44] | MOV LOAD
446: 799 802 803 806, r12 -> p12, r6 -> p52 [p49] | MOV ADD
447: 800 803 804 807, r5 -> p8, r2 -> p58 [p59] | MOV ADD
448: 801 804 805 808, r1 -> p6 [p61] | XOR ADD
449: 805 806 807 809, r44 -> p1 [p51] | CALL SAVE_PC
450: 806 807 808 810, r4 -> p0, r4 -> p45 [p0] | CALL SUB_IMM
451: 807 808 809 811, r44 -> p1, r4 -> p45 | CALL STORE
452: 808 809 810 812 | CALL JMP_IMM
453: 809 810 811 813, r5 -> p8, r4 -> p45 | PUSH STORE
454: 810 811 812 814, r4 -> p45, r4 -> p2 [p45] | PUSH SUB_IMM
455: 811 812 813 815, r15 -> p15, r4 -> p2 | PUSH STORE
456: 812 813 814 816, r4 -> p2, r4 -> p63 [p2] | PUSH SUB_IMM
457: 813 814 815 817, r14 -> p54, r4 -> p63 | PUSH STORE
458: 814 815 816 818, r4 -> p63, r4 -> p53 [p63] | PUSH SUB_IMM
459: 815 816 817 819, r13 -> p13, r4 -> p53 | PUSH STORE
460: 816 817 818 820, r4 -> p53, r4 -> p5 [p53] | PUSH SUB_IMM
461: 817 818 819 821, r12 -> p12, r4 -> p5 | PUSH STORE
462: 818 819 820 822, r4 -> p5, r4 -> p14 [p5] | PUSH SUB_IMM
463: 819 820 821 823, r3 -> p3, r4 -> p14 | PUSH STORE
464: 820 821 822 824, r4 -> p14, r4 -> p57 [p14] | PUSH SUB_IMM
465: 821 822 823 825, r4 -> p57, r4 -> p62 [p57], r49 -> p56 [p50] | SUB SUB_IMM
466: 822 823 824 826, r44 -> p44 [p1] | MOV SAVE_PC
467: 823 824 828 828, r44 -> p44, r0 -> p49 [p4] | MOV LOAD
468: 824 828 829 829, r0 -> p49, r0 -> p59 [p49] | INC ADD_IMM
469: 825 826 827 830, r44 -> p61 [p44] | MOV SAVE_PC
470: 826 829 830 831, r0 -> p59, r44 -> p61 | MOV STORE
471: 828 830 831 832, r0 -> p59, r44 -> p51 [p61], r49 -> p0 [p56] | TEST AND_IMM
472: 829 831 832 833, r1 -> p6, r4 -> p62 | MOV STORE
473: 830 832 833 834, r2 -> p58, r4 -> p62 | MOV STORE
474: 831 833 834 835, r6 -> p52, r4 -> p62 | MOV STORE
475: 832 834 835 836, r7 -> p7, r4 -> p62 | MOV STORE
476: 833 835 836 837, r49 -> p0 | J JMP_IMM
477: 841 842 843 843, r4 -> p62 | MOV STORE
478: 842 843 844 844, r44 -> p45 [p51] | MOVSX SAVE_PC
479: 843 844 848 848, r44 -> p45, r44 -> p2 [p45] | MOVSX LOAD
480: 844 848 849 849, r44 -> p2, r3 -> p63 [p3] | MOVSX SEXT_DWORD_TO_QWORD
481: 845 849 850 850, r3 -> p63, r44 -> p53 [p2] | MOV LEA
482: 846 850 851 851, r3 -> p63, r44 -> p53 | MOV STORE
483: 848 851 852 852, r44 -> p5 [p53] | CALL SAVE_PC
484: 849 852 853 853, r4 -> p62, r4 -> p14 [p62] | CALL SUB_IMM
485: 850 853 854 854, r44 -> p5, r4 -> p14 | CALL STORE
486: 851 854 855 855 | CALL JMP_IMM
487: 852 855 856 856, r44 -> p57 [p5] | MOV SAVE_PC
488: 853 856 860 860, r44 -> p57, r0 -> p50 [p59] | MOV LOAD
489: 854 860 861 861, r0 -> p50, r44 -> p1 [p57], r49 -> p4 [p0] | CMP SUB_IMM
490: 855 861 862 862, r49 -> p4 | J JMP_IMM
491: 867 868 869 869, r0 -> p50, r44 -> p49 [p1], r49 -> p44 [p4] | CMP SUB_IMM
492: 868 869 870 870, r49 -> p44 | J JMP_IMM
493: 869 870 871 871, r0 -> p61 [p50] | XOR ADD
494: 870 871 875 875, r4 -> p14, r44 -> p56 [p49] | RET LOAD
495: 871 872 873 876, r4 -> p14, r4 -> p51 [p14] | RET ADD_IMM
496: 872 875 876 877, r44 -> p56 | RET JMP_REG
497: 873 874 875 878, r0 -> p61, r0 -> p61, r44 -> p45 [p56], r49 -> p3 [p44] | TEST AND
498: 875 876 877 879, r49 -> p3 | J JMP_IMM
499: 882 883 887 887, r3 -> p63, r0 -> p2 [p61] | MOV LOAD
500: 883 887 888 888, r0 -> p2, r4 -> p51 | MOV STORE
501: 884 885 886 889, r3 -> p63, r44 -> p53 [p45] | MOV LEA
502: 885 886 887 890, r44 -> p53 | MOV STORE
503: 887 888 889 891, r3 -> p63, r44 -> p62 [p53], r49 -> p5 [p3] | CMP SUB_IMM
504: 888 889 890 892, r49 -> p5 | J JMP_IMM
505: 889 890 891 893, r0 -> p2, r0 -> p2, r44 -> p59 [p62], r49 -> p57 [p5] | TEST AND
506: 890 891 892 894, r49 -> p57 | J JMP_IMM
507: 891 892 893 895, r4 -> p51 | MOV STORE
508: 892 893 894 896 | JMP JMP_IMM
509: 893 894 898 898, r4 -> p51, r45 -> p0 [p60] | CMP LOAD
510: 894 898 899 899, r45 -> p0, r44 -> p1 [p59], r49 -> p4 [p57] | CMP SUB
511: 895 899 900 900, r49 -> p4 | J JMP_IMM
512: 905 906 907 907, r44 -> p50 [p1] | MOV SAVE_PC
513: 906 907 911 911, r44 -> p50, r0 -> p49 [p2] | MOV LOAD
514: 907 911 912 912, r0 -> p49, r44 -> p14 [p50], r49 -> p56 [p4] | CMP SUB_IMM
515: 908 912 913 913, r49 -> p56 | J JMP_IMM
516: 909 913 914 914, r0 -> p49, r44 -> p44 [p14], r49 -> p61 [p56] | CMP SUB_IMM
517: 911 914 915 915, r49 -> p61 | J JMP_IMM
518: 912 915 916 916, r2 -> p45 [p58] | MOV ADD_IMM
519: 913 916 917 917, r2 -> p45, r3 -> p63, r2 -> p53 [p45], r49 -> p3 [p61] | SUB SUB
520: 914 917 918 918, r44 -> p62 [p44] | MOV ADD_IMM
521: 915 918 919 919, r45 -> p5 [p0] | MOV SAVE_PC
522: 916 919 920 920, r44 -> p62, r45 -> p5 | MOV STORE
523: 917 920 924 924, r4 -> p51, r7 -> p60 [p7] | MOV LOAD
524: 918 921 925 925, r4 -> p51, r6 -> p59 [p52] | MOV LOAD
525: 919 922 923 926, r44 -> p57 [p62] | CALL SAVE_PC
526: 920 923 924 927, r4 -> p51, r4 -> p1 [p51] | CALL SUB_IMM
527: 924 925 926 928, r44 -> p57, r4 -> p1 | CALL STORE
528: 925 926 927 929 | CALL JMP_IMM
529: 926 927 928 930, r5 -> p8, r4 -> p1 | PUSH STORE
530: 927 928 929 931, r4 -> p1, r4 -> p2 [p1] | PUSH SUB_IMM
531: 928 929 930 932, r15 -> p15, r4 -> p2 | PUSH STORE
532: 929 930 931 933, r4 -> p2, r4 -> p50 [p2] | PUSH SUB_IMM
533: 930 931 932 934, r14 -> p54, r4 -> p50 | PUSH STORE
534: 931 932 933 935, r4 -> p50, r4 -> p4 [p50] | PUSH SUB_IMM
535: 932 933 934 936, r13 -> p13, r4 -> p4 | PUSH STORE
536: 933 934 935 937, r4 -> p4, r4 -> p14 [p4] | PUSH SUB_IMM
537: 934 935 936 938, r12 -> p12, r4 -> p14 | PUSH STORE
538: 935 936 937 939, r4 -> p14, r4 -> p56 [p14] | PUSH SUB_IMM
539: 936 937 938 940, r3 -> p63, r4 -> p56 | PUSH STORE
540: 937 938 939 941, r4 -> p56, r4 -> p58 [p56] | PUSH SUB_IMM
541: 938 939 940 942, r4 -> p58, r4 -> p45 [p58], r49 -> p61 [p3] | SUB SUB_IMM
542: 939 940 941 943, r44 -> p44 [p57] | MOVSX SAVE_PC
543: 940 941 945 945, r44 -> p44, r44 -> p0 [p44] | MOVSX LOAD
544: 941 945 946 946, r44 -> p0, r0 -> p7 [p49] | MOVSX SEXT_DWORD_TO_QWORD
545: 942 946 947 947, r0 -> p7, r44 -> p52 [p0] | MOV LEA
546: 943 947 948 948, r0 -> p7, r44 -> p52 | MOV STORE
547: 945 948 949 949, r44 -> p62 [p52] | MOVZX SAVE_PC
548: 946 949 953 953, r44 -> p62, r44 -> p51 [p62] | MOVZX LOAD
549: 947 953 954 954, r44 -> p51, r0 -> p1 [p7] | MOVZX ZEXT_WORD_TO_DWORD
550: 948 954 955 955, r0 -> p1, r0 -> p1, r44 -> p2 [p51], r49 -> p50 [p61] | TEST AND
551: 949 950 951 956, r2 -> p53, r4 -> p45 | MOV STORE
552: 953 955 956 957, r6 -> p59, r4 -> p45 | MOV STORE
553: 954 956 957 958, r7 -> p60, r4 -> p45 | MOV STORE
554: 955 957 958 959, r49 -> p50 | J JMP_IMM
555: 963 964 968 968, r4 -> p45, r45 -> p4 [p5] | CMP LOAD
556: 964 968 969 969, r45 -> p4, r44 -> p14 [p2], r49 -> p56 [p50] | CMP SUB
557: 965 969 970 970, r49 -> p56 | J JMP_IMM
558: 966 967 968 971, r45 -> p58 [p4] | CMP SAVE_PC
559: 968 970 974 974, r45 -> p58, r45 -> p3 [p58] | CMP LOAD
560: 969 974 975 975, r45 -> p3, r44 -> p57 [p14], r49 -> p44 [p56] | CMP SUB_IMM
561: 970 975 976 976, r49 -> p44 | J JMP_IMM
562: 981 982 983 983, r44 -> p49 [p57] | INC SAVE_PC
563: 982 983 987 987, r44 -> p49, r44 -> p0 [p49] | INC LOAD
564: 983 987 988 988, r44 -> p0, r44 -> p52 [p0] | INC ADD_IMM
565: 984 985 986 989, r45 -> p62 [p3] | INC SAVE_PC
566: 985 988 989 990, r44 -> p52, r45 -> p62 | INC STORE
567: 987 989 990 991, r44 -> p7 [p52] | INC SAVE_PC
568: 988 990 994 994, r44 -> p7, r44 -> p51 [p7] | INC LOAD
569: 989 994 995 995, r44 -> p51, r44 -> p61 [p51] | INC ADD_IMM
570: 990 991 992 996, r45 -> p5 [p62] | INC SAVE_PC
571: 991 995 996 997, r44 -> p61, r45 -> p5 | INC STORE
572: 994 996 997 998, r44 -> p2 [p61] | INC SAVE_PC
573: 995 997 1001 1001, r44 -> p2, r44 -> p50 [p2] | INC LOAD
574: 996 1001 1002 1002, r44 -> p50, r44 -> p4 [p50] | INC ADD_IMM
575: 997 998 999 1003, r45 -> p58 [p5] | INC SAVE_PC
576: 998 1002 1003 1004, r44 -> p4, r45 -> p58 | INC STORE
577: 1001 1003 1004 1005, r1 -> p14 [p6] | MOV ADD_IMM
578: 1002 1004 1005 1006, r44 -> p56 [p4] | MOV SAVE_PC
579: 1003 1005 1009 1009, r44 -> p56, r6 -> p57 [p59] | MOV LOAD
580: 1004 1009 1010 1010, r6 -> p57, r0 -> p49 [p1] | MOV ADD
581: 1005 1010 1011 1011, r0 -> p49, r1 -> p14, r44 -> p0 [p56], r49 -> p3 [p44] | MUL MUL
582: 1006 1011 1012 1012, r44 -> p0, r0 -> p52 [p49] | MUL ADD
583: 1009 1012 1013 1013, r44 -> p0, r2 -> p7 [p53] | MUL UPPER_HALF
584: 1010 1013 1014 1014, r2 -> p7, r2 -> p51 [p7], r49 -> p62 [p3] | SHR SHR_IMM
585: 1011 1014 1015 1015, r2 -> p51, r0 -> p61 [p52], r49 -> p2 [p62] | IMUL IMUL_T_IMM
586: 1012 1015 1016 1016, r6 -> p57, r1 -> p50 [p14] | MOV ADD
587: 1013 1016 1017 1017, r1 -> p50, r0 -> p61, r1 -> p5 [p50], r49 -> p6 [p2] | SUB SUB
588: 1014 1017 1018 1018, r1 -> p5, r0 -> p4 [p61] | MOV ADD
589: 1015 1018 1019 1019, r0 -> p4, r0 -> p59 [p4], r49 -> p1 [p6] | SHL SHL_IMM
590: 1016 1019 1020 1020, r44 -> p56 [p0] | MOV SAVE_PC
591: 1017 1020 1024 1024, r44 -> p56, r2 -> p44 [p51] | MOV LOAD
592: 1018 1024 1028 1028, r0 -> p59, r2 -> p44, r45 -> p49 [p58] | CMP LOAD
593: 1019 1028 1029 1029, r45 -> p49, r6 -> p57, r44 -> p53 [p56], r49 -> p7 [p1] | CMP SUB
594: 1020 1029 1030 1030, r49 -> p7 | J JMP_IMM
595: 1035 1036 1037 1037, r44 -> p3 [p53] | MOV ADD_IMM
596: 1036 1037 1038 1038, r44 -> p3, r4 -> p45 | MOV STORE
597: 1037 1038 1042 1042, r4 -> p45, r7 -> p52 [p60] | MOV LOAD
598: 1038 1039 1043 1043, r4 -> p45, r3 -> p62 [p63] | MOV LOAD
599: 1039 1043 1044 1044, r3 -> p62, r6 -> p14 [p57] | MOV ADD
600: 1040 1041 1042 1045, r44 -> p50 [p3] | CALL SAVE_PC
601: 1042 1044 1045 1046, r4 -> p45, r4 -> p2 [p45] | CALL SUB_IMM
602: 1043 1045 1046 1047, r44 -> p50, r4 -> p2 | CALL STORE
603: 1044 1046 1047 1048 | CALL JMP_IMM
604: 1045 1047 1048 1049, r5 -> p8, r4 -> p2 | PUSH STORE
605: 1046 1048 1049 1050, r4 -> p2, r4 -> p61 [p2] | PUSH SUB_IMM
606: 1047 1049 1050 1051, r15 -> p15, r4 -> p61 | PUSH STORE
607: 1048 1050 1051 1052, r4 -> p61, r4 -> p4 [p61] | PUSH SUB_IMM
608: 1049 1051 1052 1053, r14 -> p54, r4 -> p4 | PUSH STORE
609: 1050 1052 1053 1054, r4 -> p4, r4 -> p6 [p4] | PUSH SUB_IMM
610: 1051 1053 1054 1055, r13 -> p13, r4 -> p6 | PUSH STORE
611: 1052 1054 1055 1056, r4 -> p6, r4 -> p0 [p6] | PUSH SUB_IMM
612: 1053 1055 1056 1057, r12 -> p12, r4 -> p0 | PUSH STORE
613: 1054 1056 1057 1058, r4 -> p0, r4 -> p51 [p0] | PUSH SUB_IMM
614: 1055 1057 1058 1059, r3 -> p62, r4 -> p51 | PUSH STORE
615: 1056 1058 1059 1060, r4 -> p51, r4 -> p58 [p51] | PUSH SUB_IMM
616: 1057 1059 1060 1061, r4 -> p58, r4 -> p56 [p58], r49 -> p1 [p7] | SUB SUB_IMM
617: 1058 1060 1061 1062, r44 -> p53 [p50] | MOV SAVE_PC
618: 1059 1061 1065 1065, r44 -> p53, r1 -> p60 [p5] | MOV LOAD
619: 1060 1065 1066 1066, r1 -> p60, r44 -> p63 [p53], r49 -> p57 [p1] | CMP SUB_IMM
620: 1061 1066 1067 1067, r49 -> p57 | J JMP_IMM
621: 1062 1067 1068 1068, r1 -> p60, r44 -> p3 [p63], r49 -> p45 [p57] | CMP SUB_IMM
622: 1065 1068 1069 1069, r49 -> p45 | J JMP_IMM
623: 1066 1069 1070 1070, r1 -> p60, r44 -> p2 [p3], r49 -> p61 [p45] | CMP SUB_IMM
624: 1067 1070 1071 1071, r49 -> p61 | J JMP_IMM
625: 1068 1071 1072 1072, r44 -> p4 [p2] | MOV SAVE_PC
626: 1069 1072 1076 1076, r44 -> p4, r1 -> p6 [p60] | MOV LOAD
627: 1070 1076 1077 1077, r1 -> p6, r2 -> p0 [p44] | MOV ADD
628: 1071 1077 1078 1078, r2 -> p0, r2 -> p51 [p0], r49 -> p58 [p61] | NEG SUB
629: 1072 1073 1074 1079, r44 -> p7 [p4] | MOV SAVE_PC
630: 1076 1078 1082 1082, r44 -> p7, r8 -> p50 [p55] | MOV LOAD
631: 1077 1082 1083 1083, r8 -> p50, r8 -> p50, r44 -> p5 [p7], r49 -> p53 [p58] | TEST AND
632: 1078 1083 1084 1084, r1 -> p6, r49 -> p53, r2 -> p1 [p51] | CMOV ADD
633: 1079 1080 1081 1085, r44 -> p63 [p5] | MOV SAVE_PC
634: 1082 1084 1088 1088, r44 -> p63, r1 -> p57 [p6] | MOV LOAD
635: 1083 1085 1086 1089, r2 -> p1, r0 -> p3 [p59] | MOV ADD
636: 1084 1088 1089 1090, r0 -> p3, r1 -> p57, r0 -> p45 [p3], r49 -> p2 [p53] | SUB SUB
637: 1085 1089 1090 1091, r0 -> p45, r6 -> p14, r44 -> p60 [p63], r49 -> p44 [p2] | CMP SUB
638: 1088 1090 1091 1092, r49 -> p44 | J JMP_IMM
639: 1089 1091 1092 1093, r2 -> p1, r1 -> p57, r2 -> p0 [p1], r49 -> p61 [p44] | ADD ADD
640: 1090 1092 1093 1094, r2 -> p0, r7 -> p52, r44 -> p4 [p60], r49 -> p55 [p61] | CMP SUB
641: 1091 1093 1094 1095, r49 -> p55 | J JMP_IMM
642: 1092 1094 1095 1096, r2 -> p0, r0 -> p7 [p45] | MOV ADD
643: 1093 1095 1096 1097 | JMP JMP_IMM
644: 1094 1096 1097 1098, r4 -> p56, r4 -> p58 [p56], r49 -> p51 [p55] | ADD ADD_IMM
645: 1095 1097 1101 1101, r4 -> p58, r3 -> p5 [p62] | POP LOAD
646: 1096 1098 1099 1102, r4 -> p58, r4 -> p6 [p58] | POP ADD_IMM
647: 1097 1099 1103 1103, r4 -> p6, r12 -> p59 [p12] | POP LOAD
648: 1098 1100 1101 1104, r4 -> p6, r4 -> p3 [p6] | POP ADD_IMM
649: 1101 1102 1106 1106, r4 -> p3, r13 -> p53 [p13] | POP LOAD
650: 1102 1103 1104 1107, r4 -> p3, r4 -> p63 [p3] | POP ADD_IMM
651: 1103 1104 1108 1108, r4 -> p63, r14 -> p2 [p54] | POP LOAD
652: 1104 1105 1106 1109, r4 -> p63, r4 -> p1 [p63] | POP ADD_IMM
653: 1106 1107 1111 1111, r4 -> p1, r15 -> p44 [p15] | POP LOAD
654: 1107 1108 1109 1112, r4 -> p1, r4 -> p60 [p1] | POP ADD_IMM
655: 1108 1109 1113 1113, r4 -> p60, r5 -> p61 [p8] | POP LOAD
656: 1109 1110 1111 1114, r4 -> p60, r4 -> p45 [p60] | POP ADD_IMM
657: 1111 1112 1116 1116, r4 -> p45, r44 -> p56 [p4] | RET LOAD
658: 1112 1113 1114 1117, r4 -> p45, r4 -> p55 [p45] | RET ADD_IMM
659: 1113 1116 1117 1118, r44 -> p56 | RET JMP_REG
660: 1114 1115 1116 1119, r0 -> p7, r3 -> p5, r44 -> p62 [p56], r49 -> p58 [p51] | CMP SUB
661: 1116 1117 1118 1120, r0 -> p7, r3 -> p12 [p5] | MOV ADD
662: 1117 1118 1119 1121, r49 -> p58 | J JMP_IMM
663: 1124 1125 1126 1126, r4 -> p55, r7 -> p6 [p52] | LEA LEA
664: 1125 1126 1127 1127, r44 -> p13 [p62] | CALL SAVE_PC
665: 1126 1127 1128 1128, r4 -> p55, r4 -> p3 [p55] | CALL SUB_IMM
666: 1127 1128 1129 1129, r44 -> p13, r4 -> p3 | CALL STORE
667: 1128 1129 1130 1130 | CALL JMP_IMM
668: 1129 1130 1131 1131, r5 -> p61, r4 -> p3 | PUSH STORE
669: 1130 1131 1132 1132, r4 -> p3, r4 -> p54 [p3] | PUSH SUB_IMM
670: 1131 1132 1133 1133, r15 -> p44, r4 -> p54 | PUSH STORE
671: 1132 1133 1134 1134, r4 -> p54, r4 -> p63 [p54] | PUSH SUB_IMM
672: 1133 1134 1135 1135, r14 -> p2, r4 -> p63 | PUSH STORE
673: 1134 1135 1136 1136, r4 -> p63, r4 -> p15 [p63] | PUSH SUB_IMM
674: 1135 1136 1137 1137, r13 -> p53, r4 -> p15 | PUSH STORE
675: 1136 1137 1138 1138, r4 -> p15, r4 -> p1 [p15] | PUSH SUB_IMM
676: 1137 1138 1139 1139, r12 -> p59, r4 -> p1 | PUSH STORE
677: 1138 1139 1140 1140, r4 -> p1, r4 -> p8 [p1] | PUSH SUB_IMM
678: 1139 1140 1141 1141, r3 -> p12, r4 -> p8 | PUSH STORE
679: 1140 1141 1142 1142, r4 -> p8, r4 -> p60 [p8] | PUSH SUB_IMM
680: 1141 1142 1143 1143, r4 -> p60, r4 -> p4 [p60], r49 -> p45 [p58] | SUB SUB_IMM
681: 1142 1143 1144 1144, r44 -> p56 [p13] | MOV SAVE_PC
682: 1143 1144 1145 1145, r44 -> p56 | MOV STORE
683: 1144 1145 1146 1146, r44 -> p51 [p56] | MOV SAVE_PC
684: 1145 1146 1147 1147, r44 -> p51 | MOV STORE
685: 1146 1147 1148 1148, r44 -> p5 [p51] | MOV SAVE_PC
686: 1147 1148 1149 1149, r7 -> p6, r44 -> p5 | MOV STORE
687: 1148 1149 1150 1150, r45 -> p52 [p49] | CMP SAVE_PC
688: 1149 1150 1154 1154, r45 -> p52, r45 -> p62 [p52] | CMP LOAD
689: 1150 1154 1155 1155, r45 -> p62, r44 -> p55 [p5], r49 -> p3 [p45] | CMP SUB_IMM
690: 1151 1155 1156 1156, r49 -> p3 | J JMP_IMM
691: 1161 1162 1163 1163, r44 -> p54 [p55] | MOV SAVE_PC
692: 1162 1163 1167 1167, r44 -> p54, r0 -> p63 [p7] | MOV LOAD
693: 1163 1167 1168 1168, r0 -> p63, r4 -> p4 | MOV STORE
694: 1164 1165 1166 1169, r44 -> p15 [p54] | MOV SAVE_PC
695: 1165 1166 1170 1170, r44 -> p15, r3 -> p1 [p12] | MOV LOAD
696: 1167 1168 1169 1171, r44 -> p8 [p15] | MOV SAVE_PC
697: 1168 1169 1173 1173, r44 -> p8, r0 -> p60 [p63] | MOV LOAD
698: 1169 1173 1174 1174, r0 -> p60, r4 -> p4 | MOV STORE
699: 1170 1171 1172 1175, r44 -> p58 [p8] | MOV SAVE_PC
700: 1171 1172 1176 1176, r44 -> p58, r0 -> p13 [p60] | MOV LOAD
701: 1173 1176 1177 1177, r0 -> p13, r4 -> p4 | MOV STORE
702: 1174 1175 1176 1178, r14 -> p56 [p2] | MOV ADD_IMM
703: 1175 1177 1178 1179 | JMP JMP_IMM
704: 1176 1178 1182 1182, r4 -> p4, r45 -> p51 [p62] | CMP LOAD
705: 1177 1182 1183 1183, r45 -> p51, r44 -> p49 [p58], r49 -> p52 [p3] | CMP SUB
706: 1178 1183 1184 1184, r49 -> p52 | J JMP_IMM
707: 1179 1180 1181 1185, r15 -> p5 [p44] | MOV ADD_IMM
708: 1182 1184 1185 1186, r12 -> p45 [p59] | MOV ADD_IMM
709: 1183 1185 1186 1187 | JMP JMP_IMM
710: 1184 1186 1190 1190, r4 -> p4, r45 -> p55 [p51] | CMP LOAD
711: 1185 1190 1191 1191, r15 -> p5, r45 -> p55, r44 -> p7 [p49], r49 -> p54 [p52] | CMP SUB
712: 1186 1191 1192 1192, r49 -> p54 | J JMP_IMM
713: 1187 1188 1189 1193, r44 -> p12 [p7] | MOV SAVE_PC
714: 1190 1192 1196 1196, r44 -> p12, r0 -> p15 [p13] | MOV LOAD
715: 1191 1196 1197 1197, r0 -> p15, r44 -> p63 [p12], r49 -> p8 [p54] | CMP SUB_IMM
716: 1192 1197 1198 1198, r49 -> p8 | J JMP_IMM
717: 1193 1194 1195 1199, r44 -> p60 [p63] | MOV SAVE_PC
718: 1196 1198 1202 1202, r44 -> p60, r1 -> p2 [p57] | MOV LOAD
719: 1197 1202 1203 1203, r1 -> p2, r44 -> p62 [p60], r49 -> p58 [p8] | CMP SUB_IMM
720: 1198 1203 1204 1204, r49 -> p58 | J JMP_IMM
721: 1209 1210 1214 1214, r12 -> p45, r44 -> p3 [p62] | MOVSX LOAD
722: 1210 1214 1215 1215, r44 -> p3, r13 -> p44 [p53] | MOVSX SEXT_DWORD_TO_QWORD
723: 1211 1215 1216 1216, r13 -> p44, r13 -> p44, r44 -> p59 [p3], r49 -> p51 [p58] | TEST AND
724: 1212 1216 1217 1217, r49 -> p51 | J JMP_IMM
725: 1214 1217 1218 1218, r13 -> p44, r5 -> p49 [p61] | MOV ADD
726: 1215 1218 1219 1219, r44 -> p52 [p59] | MOV SAVE_PC
727: 1216 1219 1220 1220, r5 -> p49, r44 -> p52 | MOV STORE
728: 1217 1220 1221 1221, r15 -> p5, r15 -> p7 [p5] | INC ADD_IMM
729: 1218 1221 1225 1225, r13 -> p44, r1 -> p13 [p2] | MOV LOAD
730: 1219 1225 1226 1226, r1 -> p13, r1 -> p12 [p13] | DEC SUB_IMM
731: 1220 1226 1227 1227, r1 -> p12, r44 -> p54 [p52], r49 -> p63 [p51] | CMP SUB_IMM
732: 1221 1227 1228 1228, r49 -> p63 | J JMP_IMM
733: 1225 1228 1232 1232, r1 -> p12, r44 -> p57 [p54] | JMP LOAD
734: 1226 1232 1233 1233, r44 -> p57 | JMP JMP_REG
735: 1227 1229 1230 1234, r5 -> p49, r7 -> p60 [p6] | LEA LEA
736: 1228 1230 1231 1235, r7 -> p60, r0 -> p8 [p15] | MOVSX SEXT_DWORD_TO_QWORD
737: 1232 1233 1237 1237, r0 -> p8, r45 -> p62 [p55] | CMP LOAD
738: 1233 1237 1238 1238, r45 -> p62, r44 -> p53 [p57], r49 -> p3 [p63] | CMP SUB
739: 1234 1238 1239 1239, r49 -> p3 | J JMP_IMM
740: 1244 1245 1246 1246, r5 -> p49, r7 -> p58 [p60] | LEA LEA
741: 1245 1246 1247 1247, r7 -> p58, r0 -> p61 [p8] | MOVSX SEXT_DWORD_TO_QWORD
742: 1246 1247 1251 1251, r0 -> p61, r45 -> p59 [p62] | CMP LOAD
743: 1247 1251 1252 1252, r45 -> p59, r44 -> p5 [p53], r49 -> p2 [p3] | CMP SUB
744: 1248 1252 1253 1253, r49 -> p2 | J JMP_IMM
745: 1249 1250 1251 1254, r44 -> p13 [p5] | CALL SAVE_PC
746: 1251 1253 1254 1255, r4 -> p4, r4 -> p52 [p4] | CALL SUB_IMM
747: 1252 1254 1255 1256, r44 -> p13, r4 -> p52 | CALL STORE
748: 1253 1255 1256 1257 | CALL JMP_IMM
749: 1254 1256 1257 1258, r14 -> p56, r4 -> p52 | PUSH STORE
750: 1255 1257 1258 1259, r4 -> p52, r4 -> p51 [p52] | PUSH SUB_IMM
751: 1256 1258 1259 1260, r3 -> p1, r4 -> p51 | PUSH STORE
752: 1257 1259 1260 1261, r4 -> p51, r4 -> p54 [p51] | PUSH SUB_IMM
753: 1258 1260 1261 1262, r7 -> p58, r0 -> p6 [p61] | MOVSX SEXT_DWORD_TO_QWORD
754: 1259 1261 1262 1263, r0 -> p6, r0 -> p6, r1 -> p15 [p12] | LEA LEA
755: 1260 1262 1263 1264, r44 -> p55 [p13] | MOVSX SAVE_PC
756: 1261 1263 1267 1267, r44 -> p55, r44 -> p57 [p55] | MOVSX LOAD
757: 1262 1267 1268 1268, r44 -> p57, r2 -> p63 [p0] | MOVSX SEXT_DWORD_TO_QWORD
758: 1263 1264 1265 1269, r0 -> p6, r6 -> p60 [p14] | MOV ADD
759: 1264 1268 1269 1270, r6 -> p60, r2 -> p63, r6 -> p8 [p60], r49 -> p62 [p2] | SUB SUB
760: 1267 1269 1270 1271, r6 -> p8, r6 -> p53 [p8] | MOVSX SEXT_DWORD_TO_QWORD
761: 1268 1270 1271 1272, r1 -> p15, r2 -> p63, r1 -> p3 [p15], r49 -> p5 [p62] | SUB SUB
762: 1269 1271 1272 1273, r1 -> p3, r1 -> p4 [p3] | MOVSX SEXT_DWORD_TO_QWORD
763: 1270 1272 1273 1274, r1 -> p4, r1 -> p52 [p4] | LEA LEA
764: 1271 1273 1277 1277, r2 -> p63, r7 -> p51 [p58] | MOV LOAD
765: 1272 1274 1275 1278, r0 -> p6, r8 -> p61 [p50] | LEA LEA
766: 1273 1275 1276 1279, r9 -> p12 [p9] | XOR ADD
767: 1274 1276 1277 1280, r44 -> p13 [p57] | MOV SAVE_PC
768: 1277 1278 1282 1282, r44 -> p13, r10 -> p55 [p10] | MOV LOAD
769: 1278 1279 1280 1283, r44 -> p0 [p13] | MOV SAVE_PC
770: 1279 1280 1284 1284, r44 -> p0, r11 -> p14 [p11] | MOV LOAD
771: 1280 1281 1282 1285, r44 -> p60 [p0] | MOV SAVE_PC
772: 1282 1283 1287 1287, r44 -> p60, r3 -> p2 [p1] | MOV LOAD
773: 1283 1284 1285 1288 | JMP JMP_IMM
774: 1284 1285 1289 1289, r9 -> p12, r8 -> p61, r14 -> p8 [p56] | MOV LOAD
775: 1285 1289 1290 1290, r14 -> p8, r44 -> p15 [p60], r49 -> p62 [p5] | CMP SUB_IMM
776: 1287 1290 1291 1291, r49 -> p62 | J JMP_IMM
777: 1296 1297 1298 1298, r3 -> p2, r44 -> p3 [p15], r49 -> p4 [p62] | TEST AND_IMM
778: 1297 1298 1299 1299, r49 -> p4 | J JMP_IMM
779: 1304 1305 1306 1306, r0 -> p6, r6 -> p53, r0 -> p58 [p6], r49 -> p50 [p4] | ADD ADD
780: 1305 1306 1307 1307, r6 -> p53, r9 -> p12, r14 -> p9 [p8] | LEA LEA
781: 1306 1307 1311 1311, r9 -> p12, r1 -> p52, r45 -> p57 [p59] | CMP LOAD
782: 1307 1311 1312 1312, r45 -> p57, r44 -> p10 [p3], r49 -> p13 [p50] | CMP SUB
783: 1308 1312 1313 1313, r49 -> p13 | J JMP_IMM
784: 1309 1310 1311 1314, r14 -> p9, r9 -> p11 [p12] | MOV ADD
785: 1311 1313 1317 1317, r9 -> p11, r8 -> p61, r14 -> p0 [p9] | MOV LOAD
786: 1312 1317 1318 1318, r14 -> p0, r44 -> p1 [p10], r49 -> p56 [p13] | CMP SUB_IMM
787: 1313 1318 1319 1319, r49 -> p56 | J JMP_IMM
788: 1324 1325 1326 1326, r3 -> p2, r44 -> p60 [p1], r49 -> p5 [p56] | TEST AND_IMM
789: 1325 1326 1327 1327, r49 -> p5 | J JMP_IMM
790: 1332 1333 1334 1334, r0 -> p58, r6 -> p53, r0 -> p15 [p58], r49 -> p62 [p5] | ADD ADD
791: 1333 1334 1335 1335, r6 -> p53, r9 -> p11, r14 -> p6 [p0] | LEA LEA
792: 1334 1335 1339 1339, r9 -> p11, r1 -> p52, r45 -> p4 [p57] | CMP LOAD
793: 1335 1339 1340 1340, r45 -> p4, r44 -> p8 [p60], r49 -> p59 [p62] | CMP SUB
794: 1336 1340 1341 1341, r49 -> p59 | J JMP_IMM
795: 1346 1347 1348 1348, r44 -> p3 [p8] | MOV SAVE_PC
796: 1347 1348 1349 1349, r10 -> p55, r44 -> p3 | MOV STORE
797: 1348 1349 1350 1350 | JMP JMP_IMM
798: 1349 1350 1354 1354, r4 -> p54, r3 -> p50 [p2] | POP LOAD
799: 1350 1351 1352 1355, r4 -> p54, r4 -> p12 [p54] | POP ADD_IMM
800: 1351 1352 1356 1356, r4 -> p12, r14 -> p9 [p6] | POP LOAD
801: 1352 1353 1354 1357, r4 -> p12, r4 -> p10 [p12] | POP ADD_IMM
802: 1354 1355 1359 1359, r4 -> p10, r44 -> p13 [p3] | RET LOAD
803: 1355 1356 1357 1360, r4 -> p10, r4 -> p1 [p10] | RET ADD_IMM
804: 1356 1359 1360 1361, r44 -> p13 | RET JMP_REG
805: 1357 1358 1359 1362, r5 -> p49, r7 -> p56 [p51] | LEA LEA
806: 1359 1360 1361 1363, r7 -> p56, r0 -> p58 [p15] | MOVSX SEXT_DWORD_TO_QWORD
807: 1360 1361 1365 1365, r0 -> p58, r45 -> p5 [p4] | CMP LOAD
808: 1361 1365 1366 1366, r45 -> p5, r44 -> p0 [p13], r49 -> p57 [p59] | CMP SUB
809: 1362 1366 1367 1367, r49 -> p57 | J JMP_IMM
810: 1363 1364 1365 1368, r44 -> p60 [p0] | CALL SAVE_PC
811: 1365 1367 1368 1369, r4 -> p1, r4 -> p62 [p1] | CALL SUB_IMM
812: 1366 1368 1369 1370, r44 -> p60, r4 -> p62 | CALL STORE
813: 1367 1369 1370 1371 | CALL JMP_IMM
814: 1368 1370 1371 1372, r14 -> p9, r4 -> p62 | PUSH STORE
815: 1369 1371 1372 1373, r4 -> p62, r4 -> p8 [p62] | PUSH SUB_IMM
816: 1370 1372 1373 1374, r3 -> p50, r4 -> p8 | PUSH STORE
817: 1371 1373 1374 1375, r4 -> p8, r4 -> p2 [p8] | PUSH SUB_IMM
818: 1372 1374 1375 1376, r7 -> p56, r0 -> p54 [p58] | MOVSX SEXT_DWORD_TO_QWORD
819: 1373 1375 1376 1377, r0 -> p54, r0 -> p54, r1 -> p6 [p52] | LEA LEA
820: 1374 1376 1377 1378, r44 -> p12 [p60] | MOVSX SAVE_PC
821: 1375 1377 1381 1381, r44 -> p12, r44 -> p3 [p12] | MOVSX LOAD
822: 1376 1381 1382 1382, r44 -> p3, r2 -> p10 [p63] | MOVSX SEXT_DWORD_TO_QWORD
823: 1377 1378 1379 1383, r0 -> p54, r6 -> p51 [p53] | MOV ADD
824: 1378 1382 1383 1384, r6 -> p51, r2 -> p10, r6 -> p15 [p51], r49 -> p4 [p57] | SUB SUB
825: 1381 1383 1384 1385, r6 -> p15, r6 -> p13 [p15] | MOVSX SEXT_DWORD_TO_QWORD
826: 1382 1384 1385 1386, r1 -> p6, r2 -> p10, r1 -> p59 [p6], r49 -> p0 [p4] | SUB SUB
827: 1383 1385 1386 1387, r1 -> p59, r1 -> p1 [p59] | MOVSX SEXT_DWORD_TO_QWORD
828: 1384 1386 1387 1388, r1 -> p1, r1 -> p62 [p1] | LEA LEA
829: 1385 1387 1391 1391, r2 -> p10, r7 -> p8 [p56] | MOV LOAD
830: 1386 1388 1389 1392, r0 -> p54, r8 -> p58 [p61] | LEA LEA
831: 1387 1389 1390 1393, r9 -> p52 [p11] | XOR ADD
832: 1388 1390 1391 1394, r44 -> p60 [p3] | MOV SAVE_PC
833: 1391 1392 1396 1396, r44 -> p60, r10 -> p12 [p55] | MOV LOAD
834: 1392 1393 1394 1397, r44 -> p63 [p60] | MOV SAVE_PC
835: 1393 1394 1398 1398, r44 -> p63, r11 -> p53 [p14] | MOV LOAD
836: 1394 1395 1396 1399, r44 -> p51 [p63] | MOV SAVE_PC
837: 1396 1397 1401 1401, r44 -> p51, r3 -> p57 [p50] | MOV LOAD
838: 1397 1398 1399 1402 | JMP JMP_IMM
839: 1398 1399 1403 1403, r9 -> p52, r8 -> p58, r14 -> p15 [p9] | MOV LOAD
840: 1399 1403 1404 1404, r14 -> p15, r44 -> p6 [p51], r49 -> p4 [p0] | CMP SUB_IMM
841: 1401 1404 1405 1405, r49 -> p4 | J JMP_IMM
842: 1410 1411 1412 1412, r3 -> p57, r44 -> p59 [p6], r49 -> p1 [p4] | TEST AND_IMM
843: 1411 1412 1413 1413, r49 -> p1 | J JMP_IMM
844: 1418 1419 1420 1420, r0 -> p54, r6 -> p13, r0 -> p56 [p54], r49 -> p61 [p1] | ADD ADD
845: 1419 1420 1421 1421, r6 -> p13, r9 -> p52, r14 -> p11 [p15] | LEA LEA
846: 1420 1421 1425 1425, r9 -> p52, r1 -> p62, r45 -> p3 [p5] | CMP LOAD
847: 1421 1425 1426 1426, r45 -> p3, r44 -> p55 [p59], r49 -> p60 [p61] | CMP SUB
848: 1422 1426 1427 1427, r49 -> p60 | J JMP_IMM
849: 1423 1424 1425 1428, r14 -> p11, r9 -> p14 [p52] | MOV ADD
850: 1425 1427 1431 1431, r9 -> p14, r8 -> p58, r14 -> p63 [p11] | MOV LOAD
851: 1426 1431 1432 1432, r14 -> p63, r44 -> p50 [p55], r49 -> p9 [p60] | CMP SUB_IMM
852: 1427 1432 1433 1433, r49 -> p9 | J JMP_IMM
853: 1428 1429 1430 1434, r44 -> p51 [p50] | MOV SAVE_PC
854: 1431 1433 1434 1435, r10 -> p12, r44 -> p51 | MOV STORE
855: 1432 1434 1435 1436, r7 -> p8, r14 -> p63, r7 -> p0 [p8], r49 -> p6 [p9] | XOR XOR
856: 1433 1435 1436 1437, r7 -> p0, r44 -> p4 [p51], r49 -> p54 [p6] | TEST AND_IMM
857: 1434 1436 1437 1438, r49 -> p54 | J JMP_IMM
858: 1442 1443 1447 1447, r4 -> p2, r3 -> p1 [p57] | POP LOAD
859: 1443 1444 1445 1448, r4 -> p2, r4 -> p15 [p2] | POP ADD_IMM
860: 1444 1445 1449 1449, r4 -> p15, r14 -> p5 [p63] | POP LOAD
861: 1445 1446 1447 1450, r4 -> p15, r4 -> p59 [p15] | POP ADD_IMM
862: 1447 1448 1452 1452, r4 -> p59, r44 -> p61 [p4] | RET LOAD
863: 1448 1449 1450 1453, r4 -> p59, r4 -> p52 [p59] | RET ADD_IMM
864: 1449 1452 1453 1454, r44 -> p61 | RET JMP_REG
865: 1450 1451 1452 1455, r5 -> p49, r7 -> p11 [p0] | LEA LEA
866: 1452 1453 1454 1456, r7 -> p11, r0 -> p55 [p56] | MOVSX SEXT_DWORD_TO_QWORD
867: 1453 1454 1458 1458, r0 -> p55, r45 -> p60 [p3] | CMP LOAD
868: 1454 1458 1459 1459, r45 -> p60, r44 -> p50 [p61], r49 -> p8 [p54] | CMP SUB
869: 1455 1459 1460 1460, r49 -> p8 | J JMP_IMM
870: 1456 1457 1458 1461, r44 -> p9 [p50] | CALL SAVE_PC
871: 1458 1460 1461 1462, r4 -> p52, r4 -> p51 [p52] | CALL SUB_IMM
872: 1459 1461 1462 1463, r44 -> p9, r4 -> p51 | CALL STORE
873: 1460 1462 1463 1464 | CALL JMP_IMM
874: 1461 1463 1464 1465, r14 -> p5, r4 -> p51 | PUSH STORE
875: 1462 1464 1465 1466, r4 -> p51, r4 -> p6 [p51] | PUSH SUB_IMM
876: 1463 1465 1466 1467, r3 -> p1, r4 -> p6 | PUSH STORE
877: 1464 1466 1467 1468, r4 -> p6, r4 -> p57 [p6] | PUSH SUB_IMM
878: 1465 1467 1468 1469, r7 -> p11, r0 -> p2 [p55] | MOVSX SEXT_DWORD_TO_QWORD
879: 1466 1468 1469 1470, r0 -> p2, r0 -> p2, r1 -> p63 [p62] | LEA LEA
880: 1467 1469 1470 1471, r44 -> p15 [p9] | MOVSX SAVE_PC
881: 1468 1470 1474 1474, r44 -> p15, r44 -> p4 [p15] | MOVSX LOAD
882: 1469 1474 1475 1475, r44 -> p4, r2 -> p59 [p10] | MOVSX SEXT_DWORD_TO_QWORD
883: 1470 1471 1472 1476, r0 -> p2, r6 -> p0 [p13] | MOV ADD
884: 1471 1475 1476 1477, r6 -> p0, r2 -> p59, r6 -> p56 [p0], r49 -> p3 [p8] | SUB SUB
885: 1474 1476 1477 1478, r6 -> p56, r6 -> p61 [p56] | MOVSX SEXT_DWORD_TO_QWORD
886: 1475 1477 1478 1479, r1 -> p63, r2 -> p59, r1 -> p54 [p63], r49 -> p50 [p3] | SUB SUB
887: 1476 1478 1479 1480, r1 -> p54, r1 -> p52 [p54] | MOVSX SEXT_DWORD_TO_QWORD
888: 1477 1479 1480 1481, r1 -> p52, r1 -> p51 [p52] | LEA LEA
889: 1478 1480 1484 1484, r2 -> p59, r7 -> p6 [p11] | MOV LOAD
890: 1479 1481 1482 1485, r0 -> p2, r8 -> p55 [p58] | LEA LEA
891: 1480 1482 1483 1486, r9 -> p62 [p14] | XOR ADD
892: 1481 1483 1484 1487, r44 -> p9 [p4] | MOV SAVE_PC
893: 1484 1485 1489 1489, r44 -> p9, r10 -> p15 [p12] | MOV LOAD
894: 1485 1486 1487 1490, r44 -> p10 [p9] | MOV SAVE_PC
895: 1486 1487 1491 1491, r44 -> p10, r11 -> p13 [p53] | MOV LOAD
896: 1487 1488 1489 1492, r44 -> p0 [p10] | MOV SAVE_PC
897: 1489 1490 1494 1494, r44 -> p0, r3 -> p8 [p1] | MOV LOAD
898: 1490 1491 1492 1495 | JMP JMP_IMM
899: 1491 1492 1496 1496, r9 -> p62, r8 -> p55, r14 -> p56 [p5] | MOV LOAD
900: 1492 1496 1497 1497, r14 -> p56, r44 -> p63 [p0], r49 -> p3 [p50] | CMP SUB_IMM
901: 1494 1497 1498 1498, r49 -> p3 | J JMP_IMM
902: 1495 1498 1499 1499, r44 -> p54 [p63] | MOV SAVE_PC
903: 1496 1499 1500 1500, r10 -> p15, r44 -> p54 | MOV STORE
904: 1497 1500 1501 1501, r7 -> p6, r14 -> p56, r7 -> p52 [p6], r49 -> p11 [p3] | XOR XOR
905: 1498 1501 1502 1502, r7 -> p52, r44 -> p58 [p54], r49 -> p14 [p11] | TEST AND_IMM
906: 1499 1502 1503 1503, r49 -> p14 | J JMP_IMM
907: 1500 1503 1504 1504, r45 -> p4 [p60] | CMP SAVE_PC
908: 1501 1504 1508 1508, r45 -> p4, r45 -> p12 [p4] | CMP LOAD
909: 1502 1508 1509 1509, r45 -> p12, r44 -> p9 [p58], r49 -> p53 [p14] | CMP SUB_IMM
910: 1503 1509 1510 1510, r49 -> p53 | J JMP_IMM
911: 1504 1505 1506 1511, r14 -> p56, r44 -> p10 [p9], r49 -> p1 [p53] | CMP SUB_IMM
912: 1508 1510 1511 1512, r49 -> p1 | J JMP_IMM
913: 1509 1511 1512 1513, r14 -> p56, r1 -> p5 [p51] | LEA LEA
914: 1510 1512 1513 1514, r1 -> p5, r44 -> p0 [p10], r49 -> p50 [p1] | CMP SUB_IMM
915: 1511 1513 1514 1515, r49 -> p50 | J JMP_IMM
916: 1519 1520 1521 1521, r44 -> p63 [p0] | MOV ADD_IMM
917: 1520 1521 1522 1522, r45 -> p6 [p12] | MOV SAVE_PC
918: 1521 1522 1523 1523, r44 -> p63, r45 -> p6 | MOV STORE
919: 1522 1523 1524 1524, r10 -> p15, r1 -> p3 [p5] | MOVSX SEXT_DWORD_TO_QWORD
920: 1523 1524 1525 1525, r1 -> p3, r1 -> p3, r1 -> p54 [p3] | LEA LEA
921: 1524 1525 1526 1526, r44 -> p11 [p63] | MOV SAVE_PC
922: 1525 1526 1530 1530, r44 -> p11, r10 -> p60 [p15] | MOV LOAD
923: 1526 1527 1528 1531, r44 -> p4 [p11] | MOV SAVE_PC
924: 1527 1528 1532 1532, r44 -> p4, r2 -> p58 [p59] | MOV LOAD
925: 1528 1532 1533 1533, r1 -> p54, r2 -> p58, r44 -> p14 [p4] | MOV LEA
926: 1530 1533 1534 1534, r10 -> p60, r44 -> p14 | MOV STORE
927: 1531 1534 1535 1535, r44 -> p9 [p14] | MOVSX SAVE_PC
928: 1532 1535 1539 1539, r44 -> p9, r44 -> p53 [p9] | MOVSX LOAD
929: 1533 1539 1540 1540, r44 -> p53, r1 -> p51 [p54] | MOVSX SEXT_DWORD_TO_QWORD
930: 1534 1540 1541 1541, r1 -> p51, r1 -> p51, r1 -> p10 [p51] | LEA LEA
931: 1535 1536 1537 1542, r44 -> p1 [p53] | MOV SAVE_PC
932: 1539 1541 1545 1545, r44 -> p1, r2 -> p0 [p58] | MOV LOAD
933: 1540 1545 1546 1546, r1 -> p10, r2 -> p0, r44 -> p12 [p1] | MOV LEA
934: 1541 1546 1547 1547, r0 -> p2, r44 -> p12 | MOV STORE
935: 1542 1543 1544 1548, r44 -> p5 [p12] | MOVSX SAVE_PC
936: 1545 1547 1551 1551, r44 -> p5, r44 -> p3 [p5] | MOVSX LOAD
937: 1546 1551 1552 1552, r44 -> p3, r0 -> p63 [p2] | MOVSX SEXT_DWORD_TO_QWORD
938: 1547 1552 1553 1553, r0 -> p63, r0 -> p63, r0 -> p15 [p63] | LEA LEA
939: 1548 1549 1550 1554, r44 -> p11 [p3] | MOV SAVE_PC
940: 1551 1553 1557 1557, r44 -> p11, r1 -> p59 [p10] | MOV LOAD
941: 1552 1557 1558 1558, r0 -> p15, r1 -> p59, r44 -> p4 [p11] | MOV LEA
942: 1553 1558 1559 1559, r14 -> p56, r44 -> p4 | MOV STORE
943: 1554 1555 1556 1560, r44 -> p14 [p4] | MOVSX SAVE_PC
944: 1557 1559 1563 1563, r44 -> p14, r44 -> p9 [p14] | MOVSX LOAD
945: 1558 1563 1564 1564, r44 -> p9, r0 -> p54 [p15] | MOVSX SEXT_DWORD_TO_QWORD
946: 1559 1564 1565 1565, r0 -> p54, r0 -> p54, r0 -> p51 [p54] | LEA LEA
947: 1560 1561 1562 1566, r44 -> p53 [p9] | MOV SAVE_PC
948: 1563 1565 1569 1569, r44 -> p53, r1 -> p58 [p59] | MOV LOAD
949: 1564 1569 1570 1570, r0 -> p51, r1 -> p58, r44 -> p1 [p53] | MOV LEA
950: 1565 1570 1571 1571, r44 -> p1 | MOV STORE
951: 1566 1567 1568 1572, r44 -> p12 [p1] | MOVSX SAVE_PC
952: 1569 1571 1575 1575, r44 -> p12, r44 -> p5 [p12] | MOVSX LOAD
953: 1570 1575 1576 1576, r44 -> p5, r0 -> p2 [p51] | MOVSX SEXT_DWORD_TO_QWORD
954: 1571 1576 1577 1577, r0 -> p2, r0 -> p2, r0 -> p63 [p2] | LEA LEA
955: 1572 1573 1574 1578, r44 -> p3 [p5] | MOV SAVE_PC
956: 1575 1577 1581 1581, r44 -> p3, r1 -> p10 [p58] | MOV LOAD
957: 1576 1581 1582 1582, r0 -> p63, r1 -> p10, r44 -> p11 [p3] | MOV LEA
958: 1577 1582 1583 1583, r44 -> p11 | MOV STORE
959: 1578 1579 1580 1584, r44 -> p4 [p11] | MOVSX SAVE_PC
960: 1581 1583 1587 1587, r44 -> p4, r44 -> p14 [p4] | MOVSX LOAD
961: 1582 1587 1588 1588, r44 -> p14, r0 -> p15 [p63] | MOVSX SEXT_DWORD_TO_QWORD
962: 1583 1588 1589 1589, r0 -> p15, r0 -> p15, r0 -> p54 [p15] | LEA LEA
963: 1584 1585 1586 1590, r44 -> p9 [p14] | MOV SAVE_PC
964: 1587 1589 1593 1593, r44 -> p9, r1 -> p59 [p10] | MOV LOAD
965: 1588 1593 1594 1594, r0 -> p54, r1 -> p59, r44 -> p53 [p9] | MOV LEA
966: 1589 1594 1595 1595, r44 -> p53 | MOV STORE
967: 1590 1591 1592 1596, r44 -> p1 [p53] | INC SAVE_PC
968: 1593 1595 1599 1599, r44 -> p1, r44 -> p12 [p1] | INC LOAD
969: 1594 1599 1600 1600, r44 -> p12, r44 -> p51 [p12] | INC ADD_IMM
970: 1595 1596 1597 1601, r45 -> p2 [p6] | INC SAVE_PC
971: 1596 1600 1601 1602, r44 -> p51, r45 -> p2 | INC STORE
972: 1599 1601 1605 1605, r4 -> p57, r3 -> p5 [p8] | POP LOAD
973: 1600 1602 1603 1606, r4 -> p57, r4 -> p58 [p57] | POP ADD_IMM
974: 1601 1603 1607 1607, r4 -> p58, r14 -> p3 [p56] | POP LOAD
975: 1602 1604 1605 1608, r4 -> p58, r4 -> p11 [p58] | POP ADD_IMM
976: 1605 1606 1610 1610, r4 -> p11, r44 -> p4 [p51] | RET LOAD
977: 1606 1607 1608 1611, r4 -> p11, r4 -> p63 [p11] | RET ADD_IMM
978: 1607 1610 1611 1612, r44 -> p4 | RET JMP_REG
979: 1608 1609 1610 1613 | JMP JMP_IMM
980: 1610 1611 1612 1614, r12 -> p45, r12 -> p15 [p45], r49 -> p14 [p50] | ADD ADD_IMM
981: 1611 1612 1616 1616, r4 -> p63, r45 -> p10 [p2] | CMP LOAD
982: 1612 1616 1617 1617, r15 -> p7, r45 -> p10, r44 -> p9 [p4], r49 -> p53 [p14] | CMP SUB
983: 1613 1617 1618 1618, r49 -> p53 | J JMP_IMM
984: 1614 1615 1616 1619, r44 -> p1 [p9] | MOV SAVE_PC
985: 1616 1618 1622 1622, r44 -> p1, r0 -> p12 [p54] | MOV LOAD
986: 1617 1622 1623 1623, r0 -> p12, r44 -> p6 [p1], r49 -> p8 [p53] | CMP SUB_IMM
987: 1618 1623 1624 1624, r49 -> p8 | J JMP_IMM
988: 1619 1620 1621 1625, r44 -> p57 [p6] | MOV SAVE_PC
989: 1622 1624 1628 1628, r44 -> p57, r1 -> p56 [p59] | MOV LOAD
990: 1623 1628 1629 1629, r1 -> p56, r44 -> p58 [p57], r49 -> p51 [p8] | CMP SUB_IMM
991: 1624 1629 1630 1630, r49 -> p51 | J JMP_IMM
992: 1635 1636 1640 1640, r12 -> p15, r44 -> p11 [p58] | MOVSX LOAD
993: 1636 1640 1641 1641, r44 -> p11, r13 -> p45 [p44] | MOVSX SEXT_DWORD_TO_QWORD
994: 1637 1641 1642 1642, r13 -> p45, r13 -> p45, r44 -> p50 [p11], r49 -> p2 [p51] | TEST AND
995: 1638 1642 1643 1643, r49 -> p2 | J JMP_IMM
996: 1640 1643 1644 1644, r13 -> p45, r5 -> p4 [p49] | MOV ADD
997: 1641 1644 1645 1645, r44 -> p14 [p50] | MOV SAVE_PC
998: 1642 1645 1646 1646, r5 -> p4, r44 -> p14 | MOV STORE
999: 1643 1646 1647 1647, r15 -> p7, r15 -> p9 [p7] | INC ADD_IMM
1000: 1644 1647 1651 1651, r13 -> p45, r1 -> p54 [p56] | MOV LOAD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 750
TotalCycles: 1652
uIPC:0.605327
