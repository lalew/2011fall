g++ -Wall -Wextra -Wno-long-long -O2 -lm -D DEBUG -o simulator_d simulator.c
simulator.c:112: warning: unused parameter 'instrAddr'
simulator.c:112: warning: unused parameter 'TNnotBranch'
gzcat sjeng-1K.trace.gz | ./simulator_d
Processing trace...
1: 0 1 2 2, r49 -> p49 | J JMP_IMM
2: 7 8 12 12, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD
3: 8 12 13 13, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD
4: 9 13 14 14, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA
5: 10 14 15 15, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD
6: 12 15 19 19, r6 -> p53, r6 -> p54 [p53] | MOV LOAD
7: 13 19 20 20, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM
8: 14 20 21 21, r49 -> p56 | J JMP_IMM
9: 15 21 22 22, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM
10: 19 22 23 23, r49 -> p58 | J JMP_IMM
11: 28 29 30 30, r2 -> p51, r8 -> p59 [p8] | MOV ADD
12: 29 30 31 31, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA
13: 30 31 32 32, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD
14: 31 32 33 33, r8 -> p61, r8 -> p62 [p61] | LEA LEA
15: 32 33 34 34, r2 -> p51, r2 -> p63 [p51], r49 -> p44 [p58] | SHL SHL_IMM
16: 33 34 35 35 | JMP JMP_IMM
17: 34 35 36 36, r6 -> p54, r44 -> p2 [p57], r49 -> p6 [p44] | CMP SUB_IMM
18: 35 36 37 37, r49 -> p6 | J JMP_IMM
19: 36 37 38 38, r6 -> p54, r44 -> p52 [p2], r49 -> p53 [p6] | CMP SUB_IMM
20: 37 38 39 39, r49 -> p53 | J JMP_IMM
21: 38 39 40 40, r6 -> p54, r44 -> p50 [p52], r49 -> p49 [p53] | CMP SUB_IMM
22: 39 40 41 41, r49 -> p49 | J JMP_IMM
23: 40 41 42 42, r1 -> p1, r1 -> p55 [p1], r49 -> p56 [p49] | ADD ADD_IMM
24: 41 42 43 43, r0 -> p0, r0 -> p8 [p0] | INC ADD_IMM
25: 42 43 44 44, r0 -> p8, r44 -> p59 [p50], r49 -> p60 [p56] | CMP SUB_IMM
26: 43 44 45 45, r49 -> p60 | J JMP_IMM
27: 50 51 55 55, r1 -> p55, r44 -> p61 [p59] | MOVSX LOAD
28: 51 55 56 56, r44 -> p61, r2 -> p51 [p63] | MOVSX SEXT_DWORD_TO_QWORD
29: 52 56 57 57, r7 -> p7, r2 -> p51, r6 -> p58 [p54] | LEA LEA
30: 53 57 58 58, r6 -> p58, r6 -> p57 [p58] | MOVSX SEXT_DWORD_TO_QWORD
31: 55 58 62 62, r6 -> p57, r6 -> p44 [p57] | MOV LOAD
32: 56 62 63 63, r6 -> p44, r44 -> p2 [p61], r49 -> p6 [p60] | CMP SUB_IMM
33: 57 63 64 64, r49 -> p6 | J JMP_IMM
34: 58 64 65 65, r6 -> p44, r44 -> p52 [p2], r49 -> p53 [p6] | CMP SUB_IMM
35: 62 65 66 66, r49 -> p53 | J JMP_IMM
36: 71 72 73 73, r2 -> p51, r8 -> p1 [p62] | MOV ADD
37: 72 73 74 74, r8 -> p1, r7 -> p7, r8 -> p49 [p1] | LEA LEA
38: 73 74 75 75, r8 -> p49, r8 -> p0 [p49] | MOVSX SEXT_DWORD_TO_QWORD
39: 74 75 76 76, r8 -> p0, r8 -> p50 [p0] | LEA LEA
40: 75 76 77 77, r2 -> p51, r2 -> p56 [p51], r49 -> p59 [p53] | SHL SHL_IMM
41: 76 77 78 78 | JMP JMP_IMM
42: 77 78 79 79, r6 -> p44, r44 -> p63 [p52], r49 -> p54 [p59] | CMP SUB_IMM
43: 78 79 80 80, r49 -> p54 | J JMP_IMM
44: 79 80 81 81, r6 -> p44, r44 -> p58 [p63], r49 -> p57 [p54] | CMP SUB_IMM
45: 80 81 82 82, r49 -> p57 | J JMP_IMM
46: 81 82 83 83, r6 -> p44, r44 -> p61 [p58], r49 -> p60 [p57] | CMP SUB_IMM
47: 82 83 84 84, r49 -> p60 | J JMP_IMM
48: 83 84 85 85, r1 -> p55, r1 -> p2 [p55], r49 -> p6 [p60] | ADD ADD_IMM
49: 84 85 86 86, r0 -> p8, r0 -> p62 [p8] | INC ADD_IMM
50: 85 86 87 87, r0 -> p62, r44 -> p1 [p61], r49 -> p49 [p6] | CMP SUB_IMM
51: 86 87 88 88, r49 -> p49 | J JMP_IMM
52: 87 88 92 92, r1 -> p2, r44 -> p0 [p1] | MOVSX LOAD
53: 88 92 93 93, r44 -> p0, r2 -> p51 [p56] | MOVSX SEXT_DWORD_TO_QWORD
54: 89 93 94 94, r7 -> p7, r2 -> p51, r6 -> p53 [p44] | LEA LEA
55: 90 94 95 95, r6 -> p53, r6 -> p52 [p53] | MOVSX SEXT_DWORD_TO_QWORD
56: 92 95 99 99, r6 -> p52, r6 -> p59 [p52] | MOV LOAD
57: 93 99 100 100, r6 -> p59, r44 -> p63 [p0], r49 -> p54 [p49] | CMP SUB_IMM
58: 94 100 101 101, r49 -> p54 | J JMP_IMM
59: 95 101 102 102, r6 -> p59, r44 -> p58 [p63], r49 -> p57 [p54] | CMP SUB_IMM
60: 99 102 103 103, r49 -> p57 | J JMP_IMM
61: 100 103 104 104, r2 -> p51, r8 -> p55 [p50] | MOV ADD
62: 101 104 105 105, r8 -> p55, r7 -> p7, r8 -> p60 [p55] | LEA LEA
63: 102 105 106 106, r8 -> p60, r8 -> p8 [p60] | MOVSX SEXT_DWORD_TO_QWORD
64: 103 106 107 107, r8 -> p8, r8 -> p61 [p8] | LEA LEA
65: 104 107 108 108, r2 -> p51, r2 -> p6 [p51], r49 -> p1 [p57] | SHL SHL_IMM
66: 105 108 109 109 | JMP JMP_IMM
67: 106 109 110 110, r6 -> p59, r44 -> p56 [p58], r49 -> p44 [p1] | CMP SUB_IMM
68: 107 110 111 111, r49 -> p44 | J JMP_IMM
69: 108 111 112 112, r6 -> p59, r44 -> p53 [p56], r49 -> p52 [p44] | CMP SUB_IMM
70: 109 112 113 113, r49 -> p52 | J JMP_IMM
71: 110 113 114 114, r6 -> p59, r44 -> p0 [p53], r49 -> p49 [p52] | CMP SUB_IMM
72: 111 114 115 115, r49 -> p49 | J JMP_IMM
73: 112 115 116 116, r1 -> p2, r1 -> p63 [p2], r49 -> p54 [p49] | ADD ADD_IMM
74: 113 116 117 117, r0 -> p62, r0 -> p50 [p62] | INC ADD_IMM
75: 114 117 118 118, r0 -> p50, r44 -> p55 [p0], r49 -> p60 [p54] | CMP SUB_IMM
76: 115 118 119 119, r49 -> p60 | J JMP_IMM
77: 124 125 126 126, r0 -> p8 [p50] | XOR ADD
78: 125 126 127 127, r1 -> p51 [p63] | MOV ADD_IMM
79: 126 127 128 128 | JMP JMP_IMM
80: 127 128 129 129, r0 -> p8, r44 -> p57 [p55], r49 -> p58 [p60] | CMP SUB_IMM
81: 128 129 130 130, r49 -> p58 | J JMP_IMM
82: 135 136 137 137, r7 -> p7, r2 -> p1 [p6] | MOV ADD
83: 136 137 141 141, r1 -> p51, r44 -> p56 [p57] | ADD LOAD
84: 137 141 142 142, r2 -> p1, r44 -> p56, r2 -> p44 [p1], r49 -> p53 [p58] | ADD ADD
85: 138 142 143 143, r2 -> p44, r2 -> p52 [p44] | MOVSX SEXT_DWORD_TO_QWORD
86: 139 143 147 147, r2 -> p52, r45 -> p2 [p45] | CMP LOAD
87: 141 147 148 148, r45 -> p2, r44 -> p49 [p56], r49 -> p62 [p53] | CMP SUB_IMM
88: 142 148 149 149, r49 -> p62 | J JMP_IMM
89: 143 144 145 150, r1 -> p51, r1 -> p0 [p51], r49 -> p54 [p62] | ADD ADD_IMM
90: 147 149 150 151, r0 -> p8, r0 -> p50 [p8] | INC ADD_IMM
91: 148 150 151 152, r0 -> p50, r44 -> p63 [p49], r49 -> p55 [p54] | CMP SUB_IMM
92: 149 151 152 153, r49 -> p55 | J JMP_IMM
93: 157 158 159 159, r7 -> p7, r2 -> p60 [p52] | MOV ADD
94: 158 159 163 163, r1 -> p0, r44 -> p6 [p63] | ADD LOAD
95: 159 163 164 164, r2 -> p60, r44 -> p6, r2 -> p57 [p60], r49 -> p1 [p55] | ADD ADD
96: 160 164 165 165, r2 -> p57, r2 -> p58 [p57] | MOVSX SEXT_DWORD_TO_QWORD
97: 161 165 169 169, r2 -> p58, r45 -> p44 [p2] | CMP LOAD
98: 163 169 170 170, r45 -> p44, r44 -> p45 [p6], r49 -> p56 [p1] | CMP SUB_IMM
99: 164 170 171 171, r49 -> p56 | J JMP_IMM
100: 165 166 167 172, r1 -> p0, r1 -> p53 [p0], r49 -> p51 [p56] | ADD ADD_IMM
101: 169 171 172 173, r0 -> p50, r0 -> p62 [p50] | INC ADD_IMM
102: 170 172 173 174, r0 -> p62, r44 -> p8 [p45], r49 -> p49 [p51] | CMP SUB_IMM
103: 171 173 174 175, r49 -> p49 | J JMP_IMM
104: 172 174 175 176, r7 -> p7, r2 -> p54 [p58] | MOV ADD
105: 173 175 179 179, r1 -> p53, r44 -> p52 [p8] | ADD LOAD
106: 174 179 180 180, r2 -> p54, r44 -> p52, r2 -> p63 [p54], r49 -> p60 [p49] | ADD ADD
107: 175 180 181 181, r2 -> p63, r2 -> p55 [p63] | MOVSX SEXT_DWORD_TO_QWORD
108: 176 181 185 185, r2 -> p55, r45 -> p57 [p44] | CMP LOAD
109: 179 185 186 186, r45 -> p57, r44 -> p2 [p52], r49 -> p6 [p60] | CMP SUB_IMM
110: 180 186 187 187, r49 -> p6 | J JMP_IMM
111: 181 182 183 188, r1 -> p53, r1 -> p1 [p53], r49 -> p0 [p6] | ADD ADD_IMM
112: 185 187 188 189, r0 -> p62, r0 -> p56 [p62] | INC ADD_IMM
113: 186 188 189 190, r0 -> p56, r44 -> p50 [p2], r49 -> p45 [p0] | CMP SUB_IMM
114: 187 189 190 191, r49 -> p45 | J JMP_IMM
115: 188 190 191 192, r7 -> p7, r2 -> p51 [p55] | MOV ADD
116: 189 191 195 195, r1 -> p1, r44 -> p58 [p50] | ADD LOAD
117: 190 195 196 196, r2 -> p51, r44 -> p58, r2 -> p8 [p51], r49 -> p54 [p45] | ADD ADD
118: 191 196 197 197, r2 -> p8, r2 -> p49 [p8] | MOVSX SEXT_DWORD_TO_QWORD
119: 192 197 201 201, r2 -> p49, r45 -> p63 [p57] | CMP LOAD
120: 195 201 202 202, r45 -> p63, r44 -> p44 [p58], r49 -> p52 [p54] | CMP SUB_IMM
121: 196 202 203 203, r49 -> p52 | J JMP_IMM
122: 197 198 199 204, r1 -> p1, r1 -> p60 [p1], r49 -> p53 [p52] | ADD ADD_IMM
123: 201 203 204 205, r0 -> p56, r0 -> p6 [p56] | INC ADD_IMM
124: 202 204 205 206, r0 -> p6, r44 -> p62 [p44], r49 -> p2 [p53] | CMP SUB_IMM
125: 203 205 206 207, r49 -> p2 | J JMP_IMM
126: 204 206 207 208, r7 -> p7, r2 -> p0 [p49] | MOV ADD
127: 205 207 211 211, r1 -> p60, r44 -> p55 [p62] | ADD LOAD
128: 206 211 212 212, r2 -> p0, r44 -> p55, r2 -> p50 [p0], r49 -> p51 [p2] | ADD ADD
129: 207 212 213 213, r2 -> p50, r2 -> p45 [p50] | MOVSX SEXT_DWORD_TO_QWORD
130: 208 213 217 217, r2 -> p45, r45 -> p8 [p63] | CMP LOAD
131: 211 217 218 218, r45 -> p8, r44 -> p57 [p55], r49 -> p58 [p51] | CMP SUB_IMM
132: 212 218 219 219, r49 -> p58 | J JMP_IMM
133: 213 214 215 220, r1 -> p60, r1 -> p54 [p60], r49 -> p1 [p58] | ADD ADD_IMM
134: 217 219 220 221, r0 -> p6, r0 -> p52 [p6] | INC ADD_IMM
135: 218 220 221 222, r0 -> p52, r44 -> p56 [p57], r49 -> p44 [p1] | CMP SUB_IMM
136: 219 221 222 223, r49 -> p44 | J JMP_IMM
137: 220 222 223 224, r7 -> p7, r2 -> p53 [p45] | MOV ADD
138: 221 223 227 227, r1 -> p54, r44 -> p49 [p56] | ADD LOAD
139: 222 227 228 228, r2 -> p53, r44 -> p49, r2 -> p62 [p53], r49 -> p0 [p44] | ADD ADD
140: 223 228 229 229, r2 -> p62, r2 -> p2 [p62] | MOVSX SEXT_DWORD_TO_QWORD
141: 224 229 233 233, r2 -> p2, r45 -> p50 [p8] | CMP LOAD
142: 227 233 234 234, r45 -> p50, r44 -> p63 [p49], r49 -> p55 [p0] | CMP SUB_IMM
143: 228 234 235 235, r49 -> p55 | J JMP_IMM
144: 229 230 231 236, r1 -> p54, r1 -> p51 [p54], r49 -> p60 [p55] | ADD ADD_IMM
145: 233 235 236 237, r0 -> p52, r0 -> p58 [p52] | INC ADD_IMM
146: 234 236 237 238, r0 -> p58, r44 -> p6 [p63], r49 -> p57 [p60] | CMP SUB_IMM
147: 235 237 238 239, r49 -> p57 | J JMP_IMM
148: 236 238 239 240, r7 -> p7, r2 -> p1 [p2] | MOV ADD
149: 237 239 243 243, r1 -> p51, r44 -> p45 [p6] | ADD LOAD
150: 238 243 244 244, r2 -> p1, r44 -> p45, r2 -> p56 [p1], r49 -> p53 [p57] | ADD ADD
151: 239 244 245 245, r2 -> p56, r2 -> p44 [p56] | MOVSX SEXT_DWORD_TO_QWORD
152: 240 245 249 249, r2 -> p44, r45 -> p62 [p50] | CMP LOAD
153: 243 249 250 250, r45 -> p62, r44 -> p8 [p45], r49 -> p49 [p53] | CMP SUB_IMM
154: 244 250 251 251, r49 -> p49 | J JMP_IMM
155: 245 246 247 252, r1 -> p51, r1 -> p0 [p51], r49 -> p54 [p49] | ADD ADD_IMM
156: 249 251 252 253, r0 -> p58, r0 -> p55 [p58] | INC ADD_IMM
157: 250 252 253 254, r0 -> p55, r44 -> p52 [p8], r49 -> p63 [p54] | CMP SUB_IMM
158: 251 253 254 255, r49 -> p63 | J JMP_IMM
159: 252 254 255 256, r7 -> p7, r2 -> p60 [p44] | MOV ADD
160: 253 255 259 259, r1 -> p0, r44 -> p2 [p52] | ADD LOAD
161: 254 259 260 260, r2 -> p60, r44 -> p2, r2 -> p6 [p60], r49 -> p1 [p63] | ADD ADD
162: 255 260 261 261, r2 -> p6, r2 -> p57 [p6] | MOVSX SEXT_DWORD_TO_QWORD
163: 256 261 265 265, r2 -> p57, r45 -> p56 [p62] | CMP LOAD
164: 259 265 266 266, r45 -> p56, r44 -> p50 [p2], r49 -> p45 [p1] | CMP SUB_IMM
165: 260 266 267 267, r49 -> p45 | J JMP_IMM
166: 261 262 263 268, r1 -> p0, r1 -> p53 [p0], r49 -> p51 [p45] | ADD ADD_IMM
167: 265 267 268 269, r0 -> p55, r0 -> p49 [p55] | INC ADD_IMM
168: 266 268 269 270, r0 -> p49, r44 -> p58 [p50], r49 -> p8 [p51] | CMP SUB_IMM
169: 267 269 270 271, r49 -> p8 | J JMP_IMM
170: 275 276 277 277, r0 -> p54 [p49] | XOR ADD
171: 276 277 278 278, r1 -> p44 [p53] | MOV ADD_IMM
172: 277 278 279 279 | JMP JMP_IMM
173: 278 279 280 280, r0 -> p54, r44 -> p52 [p58], r49 -> p60 [p8] | CMP SUB_IMM
174: 279 280 281 281, r49 -> p60 | J JMP_IMM
175: 286 287 291 291, r1 -> p44, r44 -> p63 [p52] | MOVSX LOAD
176: 287 291 292 292, r44 -> p63, r2 -> p6 [p57] | MOVSX SEXT_DWORD_TO_QWORD
177: 288 292 293 293, r7 -> p7, r2 -> p6, r6 -> p62 [p59] | LEA LEA
178: 289 293 294 294, r6 -> p62, r6 -> p2 [p62] | MOVSX SEXT_DWORD_TO_QWORD
179: 291 294 298 298, r6 -> p2, r6 -> p1 [p2] | MOV LOAD
180: 292 298 299 299, r6 -> p1, r44 -> p0 [p63], r49 -> p45 [p60] | CMP SUB_IMM
181: 293 299 300 300, r49 -> p45 | J JMP_IMM
182: 294 295 296 301, r2 -> p6, r8 -> p55 [p61] | MOV ADD
183: 298 300 301 302, r8 -> p55, r7 -> p7, r8 -> p50 [p55] | LEA LEA
184: 299 301 302 303, r8 -> p50, r8 -> p51 [p50] | MOVSX SEXT_DWORD_TO_QWORD
185: 300 302 303 304, r8 -> p51, r8 -> p49 [p51] | LEA LEA
186: 301 303 304 305, r2 -> p6, r2 -> p53 [p6], r49 -> p58 [p45] | SHL SHL_IMM
187: 302 304 305 306 | JMP JMP_IMM
188: 303 305 306 307, r6 -> p1, r44 -> p8 [p0], r49 -> p52 [p58] | CMP SUB_IMM
189: 304 306 307 308, r49 -> p52 | J JMP_IMM
190: 305 307 308 309, r6 -> p1, r44 -> p57 [p8], r49 -> p59 [p52] | CMP SUB_IMM
191: 306 308 309 310, r49 -> p59 | J JMP_IMM
192: 307 309 310 311, r6 -> p1, r44 -> p62 [p57], r49 -> p2 [p59] | CMP SUB_IMM
193: 308 310 311 312, r49 -> p2 | J JMP_IMM
194: 309 311 312 313, r1 -> p44, r1 -> p63 [p44], r49 -> p60 [p2] | ADD ADD_IMM
195: 310 312 313 314, r0 -> p54, r0 -> p61 [p54] | INC ADD_IMM
196: 311 313 314 315, r0 -> p61, r44 -> p55 [p62], r49 -> p50 [p60] | CMP SUB_IMM
197: 312 314 315 316, r49 -> p50 | J JMP_IMM
198: 320 321 325 325, r1 -> p63, r44 -> p51 [p55] | MOVSX LOAD
199: 321 325 326 326, r44 -> p51, r2 -> p6 [p53] | MOVSX SEXT_DWORD_TO_QWORD
200: 322 326 327 327, r7 -> p7, r2 -> p6, r6 -> p45 [p1] | LEA LEA
201: 323 327 328 328, r6 -> p45, r6 -> p0 [p45] | MOVSX SEXT_DWORD_TO_QWORD
202: 325 328 332 332, r6 -> p0, r6 -> p58 [p0] | MOV LOAD
203: 326 332 333 333, r6 -> p58, r44 -> p8 [p51], r49 -> p52 [p50] | CMP SUB_IMM
204: 327 333 334 334, r49 -> p52 | J JMP_IMM
205: 328 329 330 335, r2 -> p6, r8 -> p57 [p49] | MOV ADD
206: 332 334 335 336, r8 -> p57, r7 -> p7, r8 -> p59 [p57] | LEA LEA
207: 333 335 336 337, r8 -> p59, r8 -> p44 [p59] | MOVSX SEXT_DWORD_TO_QWORD
208: 334 336 337 338, r8 -> p44, r8 -> p2 [p44] | LEA LEA
209: 335 337 338 339, r2 -> p6, r2 -> p54 [p6], r49 -> p62 [p52] | SHL SHL_IMM
210: 336 338 339 340 | JMP JMP_IMM
211: 337 339 340 341, r6 -> p58, r44 -> p60 [p8], r49 -> p55 [p62] | CMP SUB_IMM
212: 338 340 341 342, r49 -> p55 | J JMP_IMM
213: 339 341 342 343, r6 -> p58, r44 -> p53 [p60], r49 -> p1 [p55] | CMP SUB_IMM
214: 340 342 343 344, r49 -> p1 | J JMP_IMM
215: 341 343 344 345, r6 -> p58, r44 -> p45 [p53], r49 -> p0 [p1] | CMP SUB_IMM
216: 342 344 345 346, r49 -> p0 | J JMP_IMM
217: 350 351 355 355, r8 -> p2, r6 -> p51 [p58] | MOV LOAD
218: 351 352 353 356, r8 -> p2, r2 -> p54, r8 -> p50 [p2], r49 -> p49 [p0] | ADD ADD
219: 352 355 356 357, r6 -> p51, r44 -> p57 [p45], r49 -> p59 [p49] | CMP SUB_IMM
220: 353 356 357 358, r49 -> p59 | J JMP_IMM
221: 355 357 358 359, r6 -> p51, r44 -> p44 [p57], r49 -> p6 [p59] | CMP SUB_IMM
222: 356 358 359 360, r49 -> p6 | J JMP_IMM
223: 357 359 360 361, r6 -> p51, r44 -> p52 [p44], r49 -> p8 [p6] | CMP SUB_IMM
224: 358 360 361 362, r49 -> p8 | J JMP_IMM
225: 366 367 371 371, r8 -> p50, r6 -> p62 [p51] | MOV LOAD
226: 367 368 369 372, r8 -> p50, r2 -> p54, r8 -> p60 [p50], r49 -> p55 [p8] | ADD ADD
227: 368 371 372 373, r6 -> p62, r44 -> p53 [p52], r49 -> p1 [p55] | CMP SUB_IMM
228: 369 372 373 374, r49 -> p1 | J JMP_IMM
229: 371 373 374 375, r6 -> p62, r44 -> p58 [p53], r49 -> p2 [p1] | CMP SUB_IMM
230: 372 374 375 376, r49 -> p2 | J JMP_IMM
231: 373 375 376 377, r6 -> p62, r44 -> p0 [p58], r49 -> p45 [p2] | CMP SUB_IMM
232: 374 376 377 378, r49 -> p45 | J JMP_IMM
233: 382 383 384 384, r1 -> p63, r1 -> p49 [p63], r49 -> p57 [p45] | ADD ADD_IMM
234: 383 384 385 385, r0 -> p61, r0 -> p59 [p61] | INC ADD_IMM
235: 384 385 386 386, r0 -> p59, r44 -> p44 [p0], r49 -> p6 [p57] | CMP SUB_IMM
236: 385 386 387 387, r49 -> p6 | J JMP_IMM
237: 386 387 391 391, r1 -> p49, r44 -> p51 [p44] | MOVSX LOAD
238: 387 391 392 392, r44 -> p51, r2 -> p50 [p54] | MOVSX SEXT_DWORD_TO_QWORD
239: 388 392 393 393, r7 -> p7, r2 -> p50, r6 -> p8 [p62] | LEA LEA
240: 389 393 394 394, r6 -> p8, r6 -> p52 [p8] | MOVSX SEXT_DWORD_TO_QWORD
241: 391 394 398 398, r6 -> p52, r6 -> p55 [p52] | MOV LOAD
242: 392 398 399 399, r6 -> p55, r44 -> p53 [p51], r49 -> p1 [p6] | CMP SUB_IMM
243: 393 399 400 400, r49 -> p1 | J JMP_IMM
244: 394 395 396 401, r2 -> p50, r8 -> p58 [p60] | MOV ADD
245: 398 400 401 402, r8 -> p58, r7 -> p7, r8 -> p2 [p58] | LEA LEA
246: 399 401 402 403, r8 -> p2, r8 -> p63 [p2] | MOVSX SEXT_DWORD_TO_QWORD
247: 400 402 403 404, r8 -> p63, r8 -> p45 [p63] | LEA LEA
248: 401 403 404 405, r2 -> p50, r2 -> p61 [p50], r49 -> p0 [p1] | SHL SHL_IMM
249: 402 404 405 406 | JMP JMP_IMM
250: 403 405 406 407, r6 -> p55, r44 -> p57 [p53], r49 -> p44 [p0] | CMP SUB_IMM
251: 404 406 407 408, r49 -> p44 | J JMP_IMM
252: 405 407 408 409, r6 -> p55, r44 -> p54 [p57], r49 -> p62 [p44] | CMP SUB_IMM
253: 406 408 409 410, r49 -> p62 | J JMP_IMM
254: 407 409 410 411, r6 -> p55, r44 -> p8 [p54], r49 -> p52 [p62] | CMP SUB_IMM
255: 408 410 411 412, r49 -> p52 | J JMP_IMM
256: 416 417 421 421, r8 -> p45, r6 -> p51 [p55] | MOV LOAD
257: 417 418 419 422, r8 -> p45, r2 -> p61, r8 -> p6 [p45], r49 -> p60 [p52] | ADD ADD
258: 418 421 422 423, r6 -> p51, r44 -> p58 [p8], r49 -> p2 [p60] | CMP SUB_IMM
259: 419 422 423 424, r49 -> p2 | J JMP_IMM
260: 421 423 424 425, r6 -> p51, r44 -> p63 [p58], r49 -> p50 [p2] | CMP SUB_IMM
261: 422 424 425 426, r49 -> p50 | J JMP_IMM
262: 423 425 426 427, r6 -> p51, r44 -> p1 [p63], r49 -> p53 [p50] | CMP SUB_IMM
263: 424 426 427 428, r49 -> p53 | J JMP_IMM
264: 425 427 431 431, r8 -> p6, r6 -> p0 [p51] | MOV LOAD
265: 426 428 429 432, r8 -> p6, r2 -> p61, r8 -> p57 [p6], r49 -> p44 [p53] | ADD ADD
266: 427 431 432 433, r6 -> p0, r44 -> p54 [p1], r49 -> p62 [p44] | CMP SUB_IMM
267: 428 432 433 434, r49 -> p62 | J JMP_IMM
268: 431 433 434 435, r6 -> p0, r44 -> p55 [p54], r49 -> p45 [p62] | CMP SUB_IMM
269: 432 434 435 436, r49 -> p45 | J JMP_IMM
270: 433 435 436 437, r6 -> p0, r44 -> p52 [p55], r49 -> p8 [p45] | CMP SUB_IMM
271: 434 436 437 438, r49 -> p8 | J JMP_IMM
272: 442 443 444 444, r1 -> p49, r1 -> p60 [p49], r49 -> p58 [p8] | ADD ADD_IMM
273: 443 444 445 445, r0 -> p59, r0 -> p2 [p59] | INC ADD_IMM
274: 444 445 446 446, r0 -> p2, r44 -> p63 [p52], r49 -> p50 [p58] | CMP SUB_IMM
275: 445 446 447 447, r49 -> p50 | J JMP_IMM
276: 446 447 451 451, r1 -> p60, r44 -> p51 [p63] | MOVSX LOAD
277: 447 451 452 452, r44 -> p51, r2 -> p6 [p61] | MOVSX SEXT_DWORD_TO_QWORD
278: 448 452 453 453, r7 -> p7, r2 -> p6, r6 -> p53 [p0] | LEA LEA
279: 449 453 454 454, r6 -> p53, r6 -> p1 [p53] | MOVSX SEXT_DWORD_TO_QWORD
280: 451 454 458 458, r6 -> p1, r6 -> p44 [p1] | MOV LOAD
281: 452 458 459 459, r6 -> p44, r44 -> p54 [p51], r49 -> p62 [p50] | CMP SUB_IMM
282: 453 459 460 460, r49 -> p62 | J JMP_IMM
283: 454 455 456 461, r2 -> p6, r8 -> p55 [p57] | MOV ADD
284: 458 460 461 462, r8 -> p55, r7 -> p7, r8 -> p45 [p55] | LEA LEA
285: 459 461 462 463, r8 -> p45, r8 -> p49 [p45] | MOVSX SEXT_DWORD_TO_QWORD
286: 460 462 463 464, r8 -> p49, r8 -> p8 [p49] | LEA LEA
287: 461 463 464 465, r2 -> p6, r2 -> p59 [p6], r49 -> p52 [p62] | SHL SHL_IMM
288: 462 464 465 466 | JMP JMP_IMM
289: 463 465 466 467, r6 -> p44, r44 -> p58 [p54], r49 -> p63 [p52] | CMP SUB_IMM
290: 464 466 467 468, r49 -> p63 | J JMP_IMM
291: 465 467 468 469, r6 -> p44, r44 -> p61 [p58], r49 -> p0 [p63] | CMP SUB_IMM
292: 466 468 469 470, r49 -> p0 | J JMP_IMM
293: 467 469 470 471, r6 -> p44, r44 -> p53 [p61], r49 -> p1 [p0] | CMP SUB_IMM
294: 468 470 471 472, r49 -> p1 | J JMP_IMM
295: 469 471 475 475, r8 -> p8, r6 -> p51 [p44] | MOV LOAD
296: 470 472 473 476, r8 -> p8, r2 -> p59, r8 -> p50 [p8], r49 -> p57 [p1] | ADD ADD
297: 471 475 476 477, r6 -> p51, r44 -> p55 [p53], r49 -> p45 [p57] | CMP SUB_IMM
298: 472 476 477 478, r49 -> p45 | J JMP_IMM
299: 475 477 478 479, r6 -> p51, r44 -> p49 [p55], r49 -> p6 [p45] | CMP SUB_IMM
300: 476 478 479 480, r49 -> p6 | J JMP_IMM
301: 477 479 480 481, r6 -> p51, r44 -> p62 [p49], r49 -> p54 [p6] | CMP SUB_IMM
302: 478 480 481 482, r49 -> p54 | J JMP_IMM
303: 479 481 485 485, r8 -> p50, r6 -> p52 [p51] | MOV LOAD
304: 480 482 483 486, r8 -> p50, r2 -> p59, r8 -> p58 [p50], r49 -> p63 [p54] | ADD ADD
305: 481 485 486 487, r6 -> p52, r44 -> p61 [p62], r49 -> p0 [p63] | CMP SUB_IMM
306: 482 486 487 488, r49 -> p0 | J JMP_IMM
307: 485 487 488 489, r6 -> p52, r44 -> p44 [p61], r49 -> p8 [p0] | CMP SUB_IMM
308: 486 488 489 490, r49 -> p8 | J JMP_IMM
309: 487 489 490 491, r6 -> p52, r44 -> p1 [p44], r49 -> p53 [p8] | CMP SUB_IMM
310: 488 490 491 492, r49 -> p53 | J JMP_IMM
311: 489 491 495 495, r8 -> p58, r6 -> p57 [p52] | MOV LOAD
312: 490 492 493 496, r8 -> p58, r2 -> p59, r8 -> p55 [p58], r49 -> p45 [p53] | ADD ADD
313: 491 495 496 497, r6 -> p57, r44 -> p49 [p1], r49 -> p6 [p45] | CMP SUB_IMM
314: 492 496 497 498, r49 -> p6 | J JMP_IMM
315: 495 497 498 499, r6 -> p57, r44 -> p51 [p49], r49 -> p50 [p6] | CMP SUB_IMM
316: 496 498 499 500, r49 -> p50 | J JMP_IMM
317: 497 499 500 501, r6 -> p57, r44 -> p54 [p51], r49 -> p62 [p50] | CMP SUB_IMM
318: 498 500 501 502, r49 -> p62 | J JMP_IMM
319: 506 507 508 508, r1 -> p60, r1 -> p63 [p60], r49 -> p61 [p62] | ADD ADD_IMM
320: 507 508 509 509, r0 -> p2, r0 -> p0 [p2] | INC ADD_IMM
321: 508 509 510 510, r0 -> p0, r44 -> p44 [p54], r49 -> p8 [p61] | CMP SUB_IMM
322: 509 510 511 511, r49 -> p8 | J JMP_IMM
323: 516 517 518 518, r0 -> p52 [p0] | XOR ADD
324: 517 518 522 522, r4 -> p4, r44 -> p58 [p44] | RET LOAD
325: 518 519 520 523, r4 -> p4, r4 -> p53 [p4] | RET ADD_IMM
326: 519 522 523 524, r44 -> p58 | RET JMP_REG
327: 520 521 522 525, r0 -> p52, r0 -> p52, r44 -> p1 [p58], r49 -> p45 [p8] | TEST AND
328: 522 523 524 526, r0 -> p49 [p52] | SET ADD
329: 523 524 525 527, r49 -> p45, r0 -> p6 [p49] | SET ADD_IMM
330: 524 525 526 528, r0 -> p6, r0 -> p51 [p6] | MOVZX ZEXT_BYTE_TO_DWORD
331: 525 526 527 529, r4 -> p53, r4 -> p50 [p53], r49 -> p60 [p45] | ADD ADD_IMM
332: 526 527 531 531, r4 -> p50, r44 -> p62 [p1] | RET LOAD
333: 527 528 529 532, r4 -> p50, r4 -> p2 [p50] | RET ADD_IMM
334: 528 531 532 533, r44 -> p62 | RET JMP_REG
335: 529 530 531 534, r0 -> p51, r0 -> p51, r44 -> p54 [p62], r49 -> p61 [p60] | TEST AND
336: 531 532 533 535, r49 -> p61 | J JMP_IMM
337: 532 533 534 536, r4 -> p2, r0 -> p0 [p51] | LEA LEA
338: 533 534 535 537, r0 -> p0, r7 -> p44 [p7] | MOV ADD
339: 534 535 536 538, r13 -> p13, r6 -> p4 [p57] | MOV ADD
340: 535 536 537 539, r44 -> p58 [p54] | CALL SAVE_PC
341: 536 537 538 540, r4 -> p2, r4 -> p8 [p2] | CALL SUB_IMM
342: 537 538 539 541, r44 -> p58, r4 -> p8 | CALL STORE
343: 538 539 540 542 | CALL JMP_IMM
344: 539 540 541 543, r4 -> p8, r4 -> p52 [p8], r49 -> p49 [p61] | SUB SUB_IMM
345: 540 541 542 544, r45 -> p6 [p56] | CMP SAVE_PC
346: 541 542 546 546, r45 -> p6, r45 -> p53 [p6] | CMP LOAD
347: 542 546 547 547, r45 -> p53, r44 -> p45 [p58], r49 -> p1 [p49] | CMP SUB_IMM
348: 543 547 548 548, r49 -> p1 | J JMP_IMM
349: 553 554 555 555, r6 -> p4, r0 -> p50 [p0] | MOVSX SEXT_DWORD_TO_QWORD
350: 554 555 556 556, r0 -> p50, r0 -> p50, r1 -> p62 [p63] | LEA LEA
351: 555 556 560 560, r1 -> p62, r7 -> p44, r44 -> p60 [p45] | MOVSX LOAD
352: 556 560 561 561, r44 -> p60, r2 -> p51 [p59] | MOVSX SEXT_DWORD_TO_QWORD
353: 557 558 562 562, r1 -> p62, r7 -> p44, r44 -> p7 [p60] | MOVSX LOAD
354: 558 562 563 563, r44 -> p7, r1 -> p57 [p62] | MOVSX SEXT_DWORD_TO_QWORD
355: 560 563 567 567, r1 -> p57, r6 -> p54 [p4] | MOV LOAD
356: 561 564 565 568, r45 -> p2 [p53] | CMP SAVE_PC
357: 562 565 569 569, r45 -> p2, r45 -> p8 [p2] | CMP LOAD
358: 563 569 570 570, r45 -> p8, r44 -> p61 [p7], r49 -> p56 [p1] | CMP SUB_IMM
359: 567 570 571 571, r49 -> p56 | J JMP_IMM
360: 568 571 572 572, r6 -> p54, r6 -> p6 [p54], r49 -> p58 [p56] | ADD ADD_IMM
361: 569 572 573 573, r6 -> p6, r44 -> p49 [p61], r49 -> p0 [p58] | CMP SUB_IMM
362: 570 573 574 574, r49 -> p0 | J JMP_IMM
363: 571 574 578 578, r6 -> p6, r44 -> p63 [p49] | JMP LOAD
364: 572 578 579 579, r44 -> p63 | JMP JMP_REG
365: 573 575 576 580, r1 -> p57, r6 -> p45 [p6] | LEA LEA
366: 574 576 577 581, r6 -> p45, r0 -> p59 [p50] | MOVSX SEXT_DWORD_TO_QWORD
367: 578 579 583 583, r0 -> p59, r45 -> p60 [p8] | CMP LOAD
368: 579 583 584 584, r45 -> p60, r44 -> p62 [p63], r49 -> p4 [p0] | CMP SUB_IMM
369: 580 584 585 585, r49 -> p4 | J JMP_IMM
370: 590 591 592 592, r1 -> p57, r1 -> p53 [p57], r49 -> p2 [p4] | ADD ADD_IMM
371: 591 592 593 593, r1 -> p53, r0 -> p7 [p59] | MOVSX SEXT_DWORD_TO_QWORD
372: 592 593 597 597, r0 -> p7, r45 -> p1 [p60] | CMP LOAD
373: 593 597 598 598, r45 -> p1, r44 -> p54 [p62], r49 -> p56 [p2] | CMP SUB_IMM
374: 594 598 599 599, r49 -> p56 | J JMP_IMM
375: 595 596 597 600, r2 -> p51, r2 -> p51, r44 -> p61 [p54], r49 -> p58 [p56] | TEST AND
376: 597 599 600 601, r49 -> p58 | J JMP_IMM
377: 598 600 601 602, r44 -> p49 [p61] | MOVSX SAVE_PC
378: 599 601 605 605, r44 -> p49, r44 -> p6 [p49] | MOVSX LOAD
379: 600 605 606 606, r44 -> p6, r0 -> p50 [p7] | MOVSX SEXT_DWORD_TO_QWORD
380: 601 606 610 610, r0 -> p50, r6 -> p8 [p45] | MOV LOAD
381: 602 603 607 611, r2 -> p51, r45 -> p63 [p1] | CMP LOAD
382: 605 610 611 612, r45 -> p63, r6 -> p8, r44 -> p0 [p6], r49 -> p57 [p58] | CMP SUB
383: 606 611 612 613, r49 -> p57 | J JMP_IMM
384: 617 618 622 622, r0 -> p50, r6 -> p4 [p8] | MOV LOAD
385: 618 619 623 623, r2 -> p51, r45 -> p59 [p63] | CMP LOAD
386: 619 623 624 624, r45 -> p59, r6 -> p4, r44 -> p60 [p0], r49 -> p62 [p57] | CMP SUB
387: 620 624 625 625, r49 -> p62 | J JMP_IMM
388: 630 631 635 635, r0 -> p50, r6 -> p2 [p4] | MOV LOAD
389: 631 632 636 636, r2 -> p51, r45 -> p54 [p59] | CMP LOAD
390: 632 636 637 637, r45 -> p54, r6 -> p2, r44 -> p56 [p60], r49 -> p61 [p62] | CMP SUB
391: 633 637 638 638, r49 -> p61 | J JMP_IMM
392: 643 644 648 648, r0 -> p50, r6 -> p49 [p2] | MOV LOAD
393: 644 645 649 649, r2 -> p51, r45 -> p7 [p54] | CMP LOAD
394: 645 649 650 650, r45 -> p7, r6 -> p49, r44 -> p45 [p56], r49 -> p1 [p61] | CMP SUB
395: 646 650 651 651, r49 -> p1 | J JMP_IMM
396: 656 657 658 658, r0 -> p6 [p50] | XOR ADD
397: 657 658 659 659, r4 -> p52, r4 -> p58 [p52], r49 -> p8 [p1] | ADD ADD_IMM
398: 658 659 663 663, r4 -> p58, r44 -> p63 [p45] | RET LOAD
399: 659 660 661 664, r4 -> p58, r4 -> p0 [p58] | RET ADD_IMM
400: 660 663 664 665, r44 -> p63 | RET JMP_REG
401: 661 662 663 666, r5 -> p5, r44 -> p57 [p63] | MOV LEA
402: 663 664 665 667, r0 -> p6, r44 -> p57 | MOV STORE
403: 664 665 666 668, r0 -> p6, r0 -> p6, r44 -> p4 [p57], r49 -> p59 [p8] | TEST AND
404: 665 666 667 669, r49 -> p59 | J JMP_IMM
405: 672 673 674 674, r44 -> p60 [p4] | MOV SAVE_PC
406: 673 674 678 678, r44 -> p60, r14 -> p62 [p14] | MOV LOAD
407: 674 678 679 679, r14 -> p62, r14 -> p2 [p62], r49 -> p54 [p59] | ADD ADD_IMM
408: 675 679 680 680, r14 -> p2, r44 -> p56 [p60], r49 -> p61 [p54] | CMP SUB_IMM
409: 676 680 681 681, r49 -> p61 | J JMP_IMM
410: 678 681 685 685, r4 -> p0, r45 -> p50 [p7] | CMP LOAD
411: 679 685 686 686, r45 -> p50, r44 -> p52 [p56], r49 -> p1 [p61] | CMP SUB_IMM
412: 680 686 687 687, r49 -> p1 | J JMP_IMM
413: 681 682 683 688, r13 -> p13, r1 -> p45 [p53] | MOVSX SEXT_DWORD_TO_QWORD
414: 685 687 688 689, r1 -> p45, r1 -> p45, r1 -> p58 [p45] | LEA LEA
415: 686 688 692 692, r1 -> p58, r4 -> p0, r44 -> p63 [p52] | MOVSX LOAD
416: 687 692 693 693, r44 -> p63, r1 -> p57 [p58] | MOVSX SEXT_DWORD_TO_QWORD
417: 688 693 697 697, r1 -> p57, r14 -> p8 [p2] | MOV LOAD
418: 689 697 698 698, r14 -> p8, r44 -> p4 [p63], r49 -> p14 [p1] | CMP SUB_IMM
419: 692 698 699 699, r49 -> p14 | J JMP_IMM
420: 693 699 700 700, r14 -> p8, r44 -> p62 [p4], r49 -> p59 [p14] | CMP SUB_IMM
421: 697 700 701 701, r49 -> p59 | J JMP_IMM
422: 698 701 705 705, r1 -> p57, r1 -> p60 [p57] | MOV LOAD
423: 699 702 703 706 | JMP JMP_IMM
424: 700 705 706 707, r1 -> p60, r44 -> p54 [p62], r49 -> p7 [p59] | CMP SUB_IMM
425: 701 706 707 708, r49 -> p7 | J JMP_IMM
426: 712 713 714 714, r14 -> p56 [p8] | XOR ADD
427: 713 714 715 715 | JMP JMP_IMM
428: 714 715 716 716, r13 -> p13, r1 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD
429: 715 716 717 717, r1 -> p61, r1 -> p61, r2 -> p53 [p51] | LEA LEA
430: 716 717 721 721, r2 -> p53, r4 -> p0, r45 -> p45 [p50] | CMP LOAD
431: 717 721 722 722, r45 -> p45, r44 -> p52 [p54], r49 -> p58 [p7] | CMP SUB
432: 718 722 723 723, r49 -> p58 | J JMP_IMM
433: 728 729 730 730, r0 -> p6, r0 -> p6, r44 -> p2 [p52], r49 -> p63 [p58] | TEST AND
434: 729 730 731 731, r0 -> p1 [p6] | SET ADD
435: 730 731 732 732, r49 -> p63, r0 -> p4 [p1] | SET ADD_IMM
436: 731 732 736 736, r4 -> p0, r45 -> p14 [p45] | CMP LOAD
437: 732 736 737 737, r45 -> p14, r44 -> p57 [p2], r49 -> p62 [p63] | CMP SUB
438: 733 737 738 738, r49 -> p62 | J JMP_IMM
439: 743 744 748 748, r4 -> p0, r2 -> p59 [p53] | MOV LOAD
440: 744 748 749 749, r14 -> p56, r2 -> p59, r5 -> p8 [p5] | LEA LEA
441: 745 746 750 750, r4 -> p0, r45 -> p60 [p14] | TEST LOAD
442: 746 750 751 751, r45 -> p60, r44 -> p51 [p57], r49 -> p50 [p62] | TEST AND_IMM
443: 748 751 752 752, r49 -> p50 | J JMP_IMM
444: 749 752 753 753, r14 -> p54 [p56] | XOR ADD
445: 750 753 757 757, r4 -> p0, r7 -> p7 [p44] | MOV LOAD
446: 751 754 755 758, r12 -> p12, r6 -> p52 [p49] | MOV ADD
447: 752 755 756 759, r5 -> p8, r2 -> p58 [p59] | MOV ADD
448: 753 756 757 760, r1 -> p6 [p61] | XOR ADD
449: 757 758 759 761, r44 -> p1 [p51] | CALL SAVE_PC
450: 758 759 760 762, r4 -> p0, r4 -> p45 [p0] | CALL SUB_IMM
451: 759 760 761 763, r44 -> p1, r4 -> p45 | CALL STORE
452: 760 761 762 764 | CALL JMP_IMM
453: 761 762 763 765, r5 -> p8, r4 -> p45 | PUSH STORE
454: 762 763 764 766, r4 -> p45, r4 -> p2 [p45] | PUSH SUB_IMM
455: 763 764 765 767, r15 -> p15, r4 -> p2 | PUSH STORE
456: 764 765 766 768, r4 -> p2, r4 -> p63 [p2] | PUSH SUB_IMM
457: 765 766 767 769, r14 -> p54, r4 -> p63 | PUSH STORE
458: 766 767 768 770, r4 -> p63, r4 -> p53 [p63] | PUSH SUB_IMM
459: 767 768 769 771, r13 -> p13, r4 -> p53 | PUSH STORE
460: 768 769 770 772, r4 -> p53, r4 -> p5 [p53] | PUSH SUB_IMM
461: 769 770 771 773, r12 -> p12, r4 -> p5 | PUSH STORE
462: 770 771 772 774, r4 -> p5, r4 -> p14 [p5] | PUSH SUB_IMM
463: 771 772 773 775, r3 -> p3, r4 -> p14 | PUSH STORE
464: 772 773 774 776, r4 -> p14, r4 -> p57 [p14] | PUSH SUB_IMM
465: 773 774 775 777, r4 -> p57, r4 -> p62 [p57], r49 -> p56 [p50] | SUB SUB_IMM
466: 774 775 776 778, r44 -> p44 [p1] | MOV SAVE_PC
467: 775 776 780 780, r44 -> p44, r0 -> p49 [p4] | MOV LOAD
468: 776 780 781 781, r0 -> p49, r0 -> p59 [p49] | INC ADD_IMM
469: 777 778 779 782, r44 -> p61 [p44] | MOV SAVE_PC
470: 778 781 782 783, r0 -> p59, r44 -> p61 | MOV STORE
471: 780 782 783 784, r0 -> p59, r44 -> p51 [p61], r49 -> p0 [p56] | TEST AND_IMM
472: 781 783 784 785, r1 -> p6, r4 -> p62 | MOV STORE
473: 782 784 785 786, r2 -> p58, r4 -> p62 | MOV STORE
474: 783 785 786 787, r6 -> p52, r4 -> p62 | MOV STORE
475: 784 786 787 788, r7 -> p7, r4 -> p62 | MOV STORE
476: 785 787 788 789, r49 -> p0 | J JMP_IMM
477: 793 794 795 795, r4 -> p62 | MOV STORE
478: 794 795 796 796, r44 -> p45 [p51] | MOVSX SAVE_PC
479: 795 796 800 800, r44 -> p45, r44 -> p2 [p45] | MOVSX LOAD
480: 796 800 801 801, r44 -> p2, r3 -> p63 [p3] | MOVSX SEXT_DWORD_TO_QWORD
481: 797 801 802 802, r3 -> p63, r44 -> p53 [p2] | MOV LEA
482: 798 802 803 803, r3 -> p63, r44 -> p53 | MOV STORE
483: 800 803 804 804, r44 -> p5 [p53] | CALL SAVE_PC
484: 801 804 805 805, r4 -> p62, r4 -> p14 [p62] | CALL SUB_IMM
485: 802 805 806 806, r44 -> p5, r4 -> p14 | CALL STORE
486: 803 806 807 807 | CALL JMP_IMM
487: 804 807 808 808, r44 -> p57 [p5] | MOV SAVE_PC
488: 805 808 812 812, r44 -> p57, r0 -> p50 [p59] | MOV LOAD
489: 806 812 813 813, r0 -> p50, r44 -> p1 [p57], r49 -> p4 [p0] | CMP SUB_IMM
490: 807 813 814 814, r49 -> p4 | J JMP_IMM
491: 819 820 821 821, r0 -> p50, r44 -> p49 [p1], r49 -> p44 [p4] | CMP SUB_IMM
492: 820 821 822 822, r49 -> p44 | J JMP_IMM
493: 821 822 823 823, r0 -> p61 [p50] | XOR ADD
494: 822 823 827 827, r4 -> p14, r44 -> p56 [p49] | RET LOAD
495: 823 824 825 828, r4 -> p14, r4 -> p51 [p14] | RET ADD_IMM
496: 824 827 828 829, r44 -> p56 | RET JMP_REG
497: 825 826 827 830, r0 -> p61, r0 -> p61, r44 -> p45 [p56], r49 -> p3 [p44] | TEST AND
498: 827 828 829 831, r49 -> p3 | J JMP_IMM
499: 834 835 839 839, r3 -> p63, r0 -> p2 [p61] | MOV LOAD
500: 835 839 840 840, r0 -> p2, r4 -> p51 | MOV STORE
501: 836 837 838 841, r3 -> p63, r44 -> p53 [p45] | MOV LEA
502: 837 838 839 842, r44 -> p53 | MOV STORE
503: 839 840 841 843, r3 -> p63, r44 -> p62 [p53], r49 -> p5 [p3] | CMP SUB_IMM
504: 840 841 842 844, r49 -> p5 | J JMP_IMM
505: 841 842 843 845, r0 -> p2, r0 -> p2, r44 -> p59 [p62], r49 -> p57 [p5] | TEST AND
506: 842 843 844 846, r49 -> p57 | J JMP_IMM
507: 843 844 845 847, r4 -> p51 | MOV STORE
508: 844 845 846 848 | JMP JMP_IMM
509: 845 846 850 850, r4 -> p51, r45 -> p0 [p60] | CMP LOAD
510: 846 850 851 851, r45 -> p0, r44 -> p1 [p59], r49 -> p4 [p57] | CMP SUB
511: 847 851 852 852, r49 -> p4 | J JMP_IMM
512: 857 858 859 859, r44 -> p50 [p1] | MOV SAVE_PC
513: 858 859 863 863, r44 -> p50, r0 -> p49 [p2] | MOV LOAD
514: 859 863 864 864, r0 -> p49, r44 -> p14 [p50], r49 -> p56 [p4] | CMP SUB_IMM
515: 860 864 865 865, r49 -> p56 | J JMP_IMM
516: 861 865 866 866, r0 -> p49, r44 -> p44 [p14], r49 -> p61 [p56] | CMP SUB_IMM
517: 863 866 867 867, r49 -> p61 | J JMP_IMM
518: 864 867 868 868, r2 -> p45 [p58] | MOV ADD_IMM
519: 865 868 869 869, r2 -> p45, r3 -> p63, r2 -> p53 [p45], r49 -> p3 [p61] | SUB SUB
520: 866 869 870 870, r44 -> p62 [p44] | MOV ADD_IMM
521: 867 870 871 871, r45 -> p5 [p0] | MOV SAVE_PC
522: 868 871 872 872, r44 -> p62, r45 -> p5 | MOV STORE
523: 869 872 876 876, r4 -> p51, r7 -> p60 [p7] | MOV LOAD
524: 870 873 877 877, r4 -> p51, r6 -> p59 [p52] | MOV LOAD
525: 871 874 875 878, r44 -> p57 [p62] | CALL SAVE_PC
526: 872 875 876 879, r4 -> p51, r4 -> p1 [p51] | CALL SUB_IMM
527: 876 877 878 880, r44 -> p57, r4 -> p1 | CALL STORE
528: 877 878 879 881 | CALL JMP_IMM
529: 878 879 880 882, r5 -> p8, r4 -> p1 | PUSH STORE
530: 879 880 881 883, r4 -> p1, r4 -> p2 [p1] | PUSH SUB_IMM
531: 880 881 882 884, r15 -> p15, r4 -> p2 | PUSH STORE
532: 881 882 883 885, r4 -> p2, r4 -> p50 [p2] | PUSH SUB_IMM
533: 882 883 884 886, r14 -> p54, r4 -> p50 | PUSH STORE
534: 883 884 885 887, r4 -> p50, r4 -> p4 [p50] | PUSH SUB_IMM
535: 884 885 886 888, r13 -> p13, r4 -> p4 | PUSH STORE
536: 885 886 887 889, r4 -> p4, r4 -> p14 [p4] | PUSH SUB_IMM
537: 886 887 888 890, r12 -> p12, r4 -> p14 | PUSH STORE
538: 887 888 889 891, r4 -> p14, r4 -> p56 [p14] | PUSH SUB_IMM
539: 888 889 890 892, r3 -> p63, r4 -> p56 | PUSH STORE
540: 889 890 891 893, r4 -> p56, r4 -> p58 [p56] | PUSH SUB_IMM
541: 890 891 892 894, r4 -> p58, r4 -> p45 [p58], r49 -> p61 [p3] | SUB SUB_IMM
542: 891 892 893 895, r44 -> p44 [p57] | MOVSX SAVE_PC
543: 892 893 897 897, r44 -> p44, r44 -> p0 [p44] | MOVSX LOAD
544: 893 897 898 898, r44 -> p0, r0 -> p7 [p49] | MOVSX SEXT_DWORD_TO_QWORD
545: 894 898 899 899, r0 -> p7, r44 -> p52 [p0] | MOV LEA
546: 895 899 900 900, r0 -> p7, r44 -> p52 | MOV STORE
547: 897 900 901 901, r44 -> p62 [p52] | MOVZX SAVE_PC
548: 898 901 905 905, r44 -> p62, r44 -> p51 [p62] | MOVZX LOAD
549: 899 905 906 906, r44 -> p51, r0 -> p1 [p7] | MOVZX ZEXT_WORD_TO_DWORD
550: 900 906 907 907, r0 -> p1, r0 -> p1, r44 -> p2 [p51], r49 -> p50 [p61] | TEST AND
551: 901 902 903 908, r2 -> p53, r4 -> p45 | MOV STORE
552: 905 907 908 909, r6 -> p59, r4 -> p45 | MOV STORE
553: 906 908 909 910, r7 -> p60, r4 -> p45 | MOV STORE
554: 907 909 910 911, r49 -> p50 | J JMP_IMM
555: 915 916 920 920, r4 -> p45, r45 -> p4 [p5] | CMP LOAD
556: 916 920 921 921, r45 -> p4, r44 -> p14 [p2], r49 -> p56 [p50] | CMP SUB
557: 917 921 922 922, r49 -> p56 | J JMP_IMM
558: 918 919 920 923, r45 -> p58 [p4] | CMP SAVE_PC
559: 920 922 926 926, r45 -> p58, r45 -> p3 [p58] | CMP LOAD
560: 921 926 927 927, r45 -> p3, r44 -> p57 [p14], r49 -> p44 [p56] | CMP SUB_IMM
561: 922 927 928 928, r49 -> p44 | J JMP_IMM
562: 933 934 935 935, r44 -> p49 [p57] | INC SAVE_PC
563: 934 935 939 939, r44 -> p49, r44 -> p0 [p49] | INC LOAD
564: 935 939 940 940, r44 -> p0, r44 -> p52 [p0] | INC ADD_IMM
565: 936 937 938 941, r45 -> p62 [p3] | INC SAVE_PC
566: 937 940 941 942, r44 -> p52, r45 -> p62 | INC STORE
567: 939 941 942 943, r44 -> p7 [p52] | INC SAVE_PC
568: 940 942 946 946, r44 -> p7, r44 -> p51 [p7] | INC LOAD
569: 941 946 947 947, r44 -> p51, r44 -> p61 [p51] | INC ADD_IMM
570: 942 943 944 948, r45 -> p5 [p62] | INC SAVE_PC
571: 943 947 948 949, r44 -> p61, r45 -> p5 | INC STORE
572: 946 948 949 950, r44 -> p2 [p61] | INC SAVE_PC
573: 947 949 953 953, r44 -> p2, r44 -> p50 [p2] | INC LOAD
574: 948 953 954 954, r44 -> p50, r44 -> p4 [p50] | INC ADD_IMM
575: 949 950 951 955, r45 -> p58 [p5] | INC SAVE_PC
576: 950 954 955 956, r44 -> p4, r45 -> p58 | INC STORE
577: 953 955 956 957, r1 -> p14 [p6] | MOV ADD_IMM
578: 954 956 957 958, r44 -> p56 [p4] | MOV SAVE_PC
579: 955 957 961 961, r44 -> p56, r6 -> p57 [p59] | MOV LOAD
580: 956 961 962 962, r6 -> p57, r0 -> p49 [p1] | MOV ADD
581: 957 962 963 963, r0 -> p49, r1 -> p14, r44 -> p0 [p56], r49 -> p3 [p44] | MUL MUL
582: 958 963 964 964, r44 -> p0, r0 -> p52 [p49] | MUL ADD
583: 961 964 965 965, r44 -> p0, r2 -> p7 [p53] | MUL UPPER_HALF
584: 962 965 966 966, r2 -> p7, r2 -> p51 [p7], r49 -> p62 [p3] | SHR SHR_IMM
585: 963 966 967 967, r2 -> p51, r0 -> p61 [p52], r49 -> p2 [p62] | IMUL IMUL_T_IMM
586: 964 967 968 968, r6 -> p57, r1 -> p50 [p14] | MOV ADD
587: 965 968 969 969, r1 -> p50, r0 -> p61, r1 -> p5 [p50], r49 -> p6 [p2] | SUB SUB
588: 966 969 970 970, r1 -> p5, r0 -> p4 [p61] | MOV ADD
589: 967 970 971 971, r0 -> p4, r0 -> p59 [p4], r49 -> p1 [p6] | SHL SHL_IMM
590: 968 971 972 972, r44 -> p56 [p0] | MOV SAVE_PC
591: 969 972 976 976, r44 -> p56, r2 -> p44 [p51] | MOV LOAD
592: 970 976 980 980, r0 -> p59, r2 -> p44, r45 -> p49 [p58] | CMP LOAD
593: 971 980 981 981, r45 -> p49, r6 -> p57, r44 -> p53 [p56], r49 -> p7 [p1] | CMP SUB
594: 972 981 982 982, r49 -> p7 | J JMP_IMM
595: 987 988 989 989, r44 -> p3 [p53] | MOV ADD_IMM
596: 988 989 990 990, r44 -> p3, r4 -> p45 | MOV STORE
597: 989 990 994 994, r4 -> p45, r7 -> p52 [p60] | MOV LOAD
598: 990 991 995 995, r4 -> p45, r3 -> p62 [p63] | MOV LOAD
599: 991 995 996 996, r3 -> p62, r6 -> p14 [p57] | MOV ADD
600: 992 993 994 997, r44 -> p50 [p3] | CALL SAVE_PC
601: 994 996 997 998, r4 -> p45, r4 -> p2 [p45] | CALL SUB_IMM
602: 995 997 998 999, r44 -> p50, r4 -> p2 | CALL STORE
603: 996 998 999 1000 | CALL JMP_IMM
604: 997 999 1000 1001, r5 -> p8, r4 -> p2 | PUSH STORE
605: 998 1000 1001 1002, r4 -> p2, r4 -> p61 [p2] | PUSH SUB_IMM
606: 999 1001 1002 1003, r15 -> p15, r4 -> p61 | PUSH STORE
607: 1000 1002 1003 1004, r4 -> p61, r4 -> p4 [p61] | PUSH SUB_IMM
608: 1001 1003 1004 1005, r14 -> p54, r4 -> p4 | PUSH STORE
609: 1002 1004 1005 1006, r4 -> p4, r4 -> p6 [p4] | PUSH SUB_IMM
610: 1003 1005 1006 1007, r13 -> p13, r4 -> p6 | PUSH STORE
611: 1004 1006 1007 1008, r4 -> p6, r4 -> p0 [p6] | PUSH SUB_IMM
612: 1005 1007 1008 1009, r12 -> p12, r4 -> p0 | PUSH STORE
613: 1006 1008 1009 1010, r4 -> p0, r4 -> p51 [p0] | PUSH SUB_IMM
614: 1007 1009 1010 1011, r3 -> p62, r4 -> p51 | PUSH STORE
615: 1008 1010 1011 1012, r4 -> p51, r4 -> p58 [p51] | PUSH SUB_IMM
616: 1009 1011 1012 1013, r4 -> p58, r4 -> p56 [p58], r49 -> p1 [p7] | SUB SUB_IMM
617: 1010 1012 1013 1014, r44 -> p53 [p50] | MOV SAVE_PC
618: 1011 1013 1017 1017, r44 -> p53, r1 -> p60 [p5] | MOV LOAD
619: 1012 1017 1018 1018, r1 -> p60, r44 -> p63 [p53], r49 -> p57 [p1] | CMP SUB_IMM
620: 1013 1018 1019 1019, r49 -> p57 | J JMP_IMM
621: 1014 1019 1020 1020, r1 -> p60, r44 -> p3 [p63], r49 -> p45 [p57] | CMP SUB_IMM
622: 1017 1020 1021 1021, r49 -> p45 | J JMP_IMM
623: 1018 1021 1022 1022, r1 -> p60, r44 -> p2 [p3], r49 -> p61 [p45] | CMP SUB_IMM
624: 1019 1022 1023 1023, r49 -> p61 | J JMP_IMM
625: 1020 1023 1024 1024, r44 -> p4 [p2] | MOV SAVE_PC
626: 1021 1024 1028 1028, r44 -> p4, r1 -> p6 [p60] | MOV LOAD
627: 1022 1028 1029 1029, r1 -> p6, r2 -> p0 [p44] | MOV ADD
628: 1023 1029 1030 1030, r2 -> p0, r2 -> p51 [p0], r49 -> p58 [p61] | NEG SUB
629: 1024 1025 1026 1031, r44 -> p7 [p4] | MOV SAVE_PC
630: 1028 1030 1034 1034, r44 -> p7, r8 -> p50 [p55] | MOV LOAD
631: 1029 1034 1035 1035, r8 -> p50, r8 -> p50, r44 -> p5 [p7], r49 -> p53 [p58] | TEST AND
632: 1030 1035 1036 1036, r1 -> p6, r49 -> p53, r2 -> p1 [p51] | CMOV ADD
633: 1031 1032 1033 1037, r44 -> p63 [p5] | MOV SAVE_PC
634: 1034 1036 1040 1040, r44 -> p63, r1 -> p57 [p6] | MOV LOAD
635: 1035 1037 1038 1041, r2 -> p1, r0 -> p3 [p59] | MOV ADD
636: 1036 1040 1041 1042, r0 -> p3, r1 -> p57, r0 -> p45 [p3], r49 -> p2 [p53] | SUB SUB
637: 1037 1041 1042 1043, r0 -> p45, r6 -> p14, r44 -> p60 [p63], r49 -> p44 [p2] | CMP SUB
638: 1040 1042 1043 1044, r49 -> p44 | J JMP_IMM
639: 1041 1043 1044 1045, r2 -> p1, r1 -> p57, r2 -> p0 [p1], r49 -> p61 [p44] | ADD ADD
640: 1042 1044 1045 1046, r2 -> p0, r7 -> p52, r44 -> p4 [p60], r49 -> p55 [p61] | CMP SUB
641: 1043 1045 1046 1047, r49 -> p55 | J JMP_IMM
642: 1044 1046 1047 1048, r2 -> p0, r0 -> p7 [p45] | MOV ADD
643: 1045 1047 1048 1049 | JMP JMP_IMM
644: 1046 1048 1049 1050, r4 -> p56, r4 -> p58 [p56], r49 -> p51 [p55] | ADD ADD_IMM
645: 1047 1049 1053 1053, r4 -> p58, r3 -> p5 [p62] | POP LOAD
646: 1048 1050 1051 1054, r4 -> p58, r4 -> p6 [p58] | POP ADD_IMM
647: 1049 1051 1055 1055, r4 -> p6, r12 -> p59 [p12] | POP LOAD
648: 1050 1052 1053 1056, r4 -> p6, r4 -> p3 [p6] | POP ADD_IMM
649: 1053 1054 1058 1058, r4 -> p3, r13 -> p53 [p13] | POP LOAD
650: 1054 1055 1056 1059, r4 -> p3, r4 -> p63 [p3] | POP ADD_IMM
651: 1055 1056 1060 1060, r4 -> p63, r14 -> p2 [p54] | POP LOAD
652: 1056 1057 1058 1061, r4 -> p63, r4 -> p1 [p63] | POP ADD_IMM
653: 1058 1059 1063 1063, r4 -> p1, r15 -> p44 [p15] | POP LOAD
654: 1059 1060 1061 1064, r4 -> p1, r4 -> p60 [p1] | POP ADD_IMM
655: 1060 1061 1065 1065, r4 -> p60, r5 -> p61 [p8] | POP LOAD
656: 1061 1062 1063 1066, r4 -> p60, r4 -> p45 [p60] | POP ADD_IMM
657: 1063 1064 1068 1068, r4 -> p45, r44 -> p56 [p4] | RET LOAD
658: 1064 1065 1066 1069, r4 -> p45, r4 -> p55 [p45] | RET ADD_IMM
659: 1065 1068 1069 1070, r44 -> p56 | RET JMP_REG
660: 1066 1067 1068 1071, r0 -> p7, r3 -> p5, r44 -> p62 [p56], r49 -> p58 [p51] | CMP SUB
661: 1068 1069 1070 1072, r0 -> p7, r3 -> p12 [p5] | MOV ADD
662: 1069 1070 1071 1073, r49 -> p58 | J JMP_IMM
663: 1076 1077 1078 1078, r4 -> p55, r7 -> p6 [p52] | LEA LEA
664: 1077 1078 1079 1079, r44 -> p13 [p62] | CALL SAVE_PC
665: 1078 1079 1080 1080, r4 -> p55, r4 -> p3 [p55] | CALL SUB_IMM
666: 1079 1080 1081 1081, r44 -> p13, r4 -> p3 | CALL STORE
667: 1080 1081 1082 1082 | CALL JMP_IMM
668: 1081 1082 1083 1083, r5 -> p61, r4 -> p3 | PUSH STORE
669: 1082 1083 1084 1084, r4 -> p3, r4 -> p54 [p3] | PUSH SUB_IMM
670: 1083 1084 1085 1085, r15 -> p44, r4 -> p54 | PUSH STORE
671: 1084 1085 1086 1086, r4 -> p54, r4 -> p63 [p54] | PUSH SUB_IMM
672: 1085 1086 1087 1087, r14 -> p2, r4 -> p63 | PUSH STORE
673: 1086 1087 1088 1088, r4 -> p63, r4 -> p15 [p63] | PUSH SUB_IMM
674: 1087 1088 1089 1089, r13 -> p53, r4 -> p15 | PUSH STORE
675: 1088 1089 1090 1090, r4 -> p15, r4 -> p1 [p15] | PUSH SUB_IMM
676: 1089 1090 1091 1091, r12 -> p59, r4 -> p1 | PUSH STORE
677: 1090 1091 1092 1092, r4 -> p1, r4 -> p8 [p1] | PUSH SUB_IMM
678: 1091 1092 1093 1093, r3 -> p12, r4 -> p8 | PUSH STORE
679: 1092 1093 1094 1094, r4 -> p8, r4 -> p60 [p8] | PUSH SUB_IMM
680: 1093 1094 1095 1095, r4 -> p60, r4 -> p4 [p60], r49 -> p45 [p58] | SUB SUB_IMM
681: 1094 1095 1096 1096, r44 -> p56 [p13] | MOV SAVE_PC
682: 1095 1096 1097 1097, r44 -> p56 | MOV STORE
683: 1096 1097 1098 1098, r44 -> p51 [p56] | MOV SAVE_PC
684: 1097 1098 1099 1099, r44 -> p51 | MOV STORE
685: 1098 1099 1100 1100, r44 -> p5 [p51] | MOV SAVE_PC
686: 1099 1100 1101 1101, r7 -> p6, r44 -> p5 | MOV STORE
687: 1100 1101 1102 1102, r45 -> p52 [p49] | CMP SAVE_PC
688: 1101 1102 1106 1106, r45 -> p52, r45 -> p62 [p52] | CMP LOAD
689: 1102 1106 1107 1107, r45 -> p62, r44 -> p55 [p5], r49 -> p3 [p45] | CMP SUB_IMM
690: 1103 1107 1108 1108, r49 -> p3 | J JMP_IMM
691: 1113 1114 1115 1115, r44 -> p54 [p55] | MOV SAVE_PC
692: 1114 1115 1119 1119, r44 -> p54, r0 -> p63 [p7] | MOV LOAD
693: 1115 1119 1120 1120, r0 -> p63, r4 -> p4 | MOV STORE
694: 1116 1117 1118 1121, r44 -> p15 [p54] | MOV SAVE_PC
695: 1117 1118 1122 1122, r44 -> p15, r3 -> p1 [p12] | MOV LOAD
696: 1119 1120 1121 1123, r44 -> p8 [p15] | MOV SAVE_PC
697: 1120 1121 1125 1125, r44 -> p8, r0 -> p60 [p63] | MOV LOAD
698: 1121 1125 1126 1126, r0 -> p60, r4 -> p4 | MOV STORE
699: 1122 1123 1124 1127, r44 -> p58 [p8] | MOV SAVE_PC
700: 1123 1124 1128 1128, r44 -> p58, r0 -> p13 [p60] | MOV LOAD
701: 1125 1128 1129 1129, r0 -> p13, r4 -> p4 | MOV STORE
702: 1126 1127 1128 1130, r14 -> p56 [p2] | MOV ADD_IMM
703: 1127 1129 1130 1131 | JMP JMP_IMM
704: 1128 1130 1134 1134, r4 -> p4, r45 -> p51 [p62] | CMP LOAD
705: 1129 1134 1135 1135, r45 -> p51, r44 -> p49 [p58], r49 -> p52 [p3] | CMP SUB
706: 1130 1135 1136 1136, r49 -> p52 | J JMP_IMM
707: 1131 1132 1133 1137, r15 -> p5 [p44] | MOV ADD_IMM
708: 1134 1136 1137 1138, r12 -> p45 [p59] | MOV ADD_IMM
709: 1135 1137 1138 1139 | JMP JMP_IMM
710: 1136 1138 1142 1142, r4 -> p4, r45 -> p55 [p51] | CMP LOAD
711: 1137 1142 1143 1143, r15 -> p5, r45 -> p55, r44 -> p7 [p49], r49 -> p54 [p52] | CMP SUB
712: 1138 1143 1144 1144, r49 -> p54 | J JMP_IMM
713: 1139 1140 1141 1145, r44 -> p12 [p7] | MOV SAVE_PC
714: 1142 1144 1148 1148, r44 -> p12, r0 -> p15 [p13] | MOV LOAD
715: 1143 1148 1149 1149, r0 -> p15, r44 -> p63 [p12], r49 -> p8 [p54] | CMP SUB_IMM
716: 1144 1149 1150 1150, r49 -> p8 | J JMP_IMM
717: 1145 1146 1147 1151, r44 -> p60 [p63] | MOV SAVE_PC
718: 1148 1150 1154 1154, r44 -> p60, r1 -> p2 [p57] | MOV LOAD
719: 1149 1154 1155 1155, r1 -> p2, r44 -> p62 [p60], r49 -> p58 [p8] | CMP SUB_IMM
720: 1150 1155 1156 1156, r49 -> p58 | J JMP_IMM
721: 1161 1162 1166 1166, r12 -> p45, r44 -> p3 [p62] | MOVSX LOAD
722: 1162 1166 1167 1167, r44 -> p3, r13 -> p44 [p53] | MOVSX SEXT_DWORD_TO_QWORD
723: 1163 1167 1168 1168, r13 -> p44, r13 -> p44, r44 -> p59 [p3], r49 -> p51 [p58] | TEST AND
724: 1164 1168 1169 1169, r49 -> p51 | J JMP_IMM
725: 1166 1169 1170 1170, r13 -> p44, r5 -> p49 [p61] | MOV ADD
726: 1167 1170 1171 1171, r44 -> p52 [p59] | MOV SAVE_PC
727: 1168 1171 1172 1172, r5 -> p49, r44 -> p52 | MOV STORE
728: 1169 1172 1173 1173, r15 -> p5, r15 -> p7 [p5] | INC ADD_IMM
729: 1170 1173 1177 1177, r13 -> p44, r1 -> p13 [p2] | MOV LOAD
730: 1171 1177 1178 1178, r1 -> p13, r1 -> p12 [p13] | DEC SUB_IMM
731: 1172 1178 1179 1179, r1 -> p12, r44 -> p54 [p52], r49 -> p63 [p51] | CMP SUB_IMM
732: 1173 1179 1180 1180, r49 -> p63 | J JMP_IMM
733: 1177 1180 1184 1184, r1 -> p12, r44 -> p57 [p54] | JMP LOAD
734: 1178 1184 1185 1185, r44 -> p57 | JMP JMP_REG
735: 1179 1181 1182 1186, r5 -> p49, r7 -> p60 [p6] | LEA LEA
736: 1180 1182 1183 1187, r7 -> p60, r0 -> p8 [p15] | MOVSX SEXT_DWORD_TO_QWORD
737: 1184 1185 1189 1189, r0 -> p8, r45 -> p62 [p55] | CMP LOAD
738: 1185 1189 1190 1190, r45 -> p62, r44 -> p53 [p57], r49 -> p3 [p63] | CMP SUB
739: 1186 1190 1191 1191, r49 -> p3 | J JMP_IMM
740: 1196 1197 1198 1198, r5 -> p49, r7 -> p58 [p60] | LEA LEA
741: 1197 1198 1199 1199, r7 -> p58, r0 -> p61 [p8] | MOVSX SEXT_DWORD_TO_QWORD
742: 1198 1199 1203 1203, r0 -> p61, r45 -> p59 [p62] | CMP LOAD
743: 1199 1203 1204 1204, r45 -> p59, r44 -> p5 [p53], r49 -> p2 [p3] | CMP SUB
744: 1200 1204 1205 1205, r49 -> p2 | J JMP_IMM
745: 1201 1202 1203 1206, r44 -> p13 [p5] | CALL SAVE_PC
746: 1203 1205 1206 1207, r4 -> p4, r4 -> p52 [p4] | CALL SUB_IMM
747: 1204 1206 1207 1208, r44 -> p13, r4 -> p52 | CALL STORE
748: 1205 1207 1208 1209 | CALL JMP_IMM
749: 1206 1208 1209 1210, r14 -> p56, r4 -> p52 | PUSH STORE
750: 1207 1209 1210 1211, r4 -> p52, r4 -> p51 [p52] | PUSH SUB_IMM
751: 1208 1210 1211 1212, r3 -> p1, r4 -> p51 | PUSH STORE
752: 1209 1211 1212 1213, r4 -> p51, r4 -> p54 [p51] | PUSH SUB_IMM
753: 1210 1212 1213 1214, r7 -> p58, r0 -> p6 [p61] | MOVSX SEXT_DWORD_TO_QWORD
754: 1211 1213 1214 1215, r0 -> p6, r0 -> p6, r1 -> p15 [p12] | LEA LEA
755: 1212 1214 1215 1216, r44 -> p55 [p13] | MOVSX SAVE_PC
756: 1213 1215 1219 1219, r44 -> p55, r44 -> p57 [p55] | MOVSX LOAD
757: 1214 1219 1220 1220, r44 -> p57, r2 -> p63 [p0] | MOVSX SEXT_DWORD_TO_QWORD
758: 1215 1216 1217 1221, r0 -> p6, r6 -> p60 [p14] | MOV ADD
759: 1216 1220 1221 1222, r6 -> p60, r2 -> p63, r6 -> p8 [p60], r49 -> p62 [p2] | SUB SUB
760: 1219 1221 1222 1223, r6 -> p8, r6 -> p53 [p8] | MOVSX SEXT_DWORD_TO_QWORD
761: 1220 1222 1223 1224, r1 -> p15, r2 -> p63, r1 -> p3 [p15], r49 -> p5 [p62] | SUB SUB
762: 1221 1223 1224 1225, r1 -> p3, r1 -> p4 [p3] | MOVSX SEXT_DWORD_TO_QWORD
763: 1222 1224 1225 1226, r1 -> p4, r1 -> p52 [p4] | LEA LEA
764: 1223 1225 1229 1229, r2 -> p63, r7 -> p51 [p58] | MOV LOAD
765: 1224 1226 1227 1230, r0 -> p6, r8 -> p61 [p50] | LEA LEA
766: 1225 1227 1228 1231, r9 -> p12 [p9] | XOR ADD
767: 1226 1228 1229 1232, r44 -> p13 [p57] | MOV SAVE_PC
768: 1229 1230 1234 1234, r44 -> p13, r10 -> p55 [p10] | MOV LOAD
769: 1230 1231 1232 1235, r44 -> p0 [p13] | MOV SAVE_PC
770: 1231 1232 1236 1236, r44 -> p0, r11 -> p14 [p11] | MOV LOAD
771: 1232 1233 1234 1237, r44 -> p60 [p0] | MOV SAVE_PC
772: 1234 1235 1239 1239, r44 -> p60, r3 -> p2 [p1] | MOV LOAD
773: 1235 1236 1237 1240 | JMP JMP_IMM
774: 1236 1237 1241 1241, r9 -> p12, r8 -> p61, r14 -> p8 [p56] | MOV LOAD
775: 1237 1241 1242 1242, r14 -> p8, r44 -> p15 [p60], r49 -> p62 [p5] | CMP SUB_IMM
776: 1239 1242 1243 1243, r49 -> p62 | J JMP_IMM
777: 1248 1249 1250 1250, r3 -> p2, r44 -> p3 [p15], r49 -> p4 [p62] | TEST AND_IMM
778: 1249 1250 1251 1251, r49 -> p4 | J JMP_IMM
779: 1256 1257 1258 1258, r0 -> p6, r6 -> p53, r0 -> p58 [p6], r49 -> p50 [p4] | ADD ADD
780: 1257 1258 1259 1259, r6 -> p53, r9 -> p12, r14 -> p9 [p8] | LEA LEA
781: 1258 1259 1263 1263, r9 -> p12, r1 -> p52, r45 -> p57 [p59] | CMP LOAD
782: 1259 1263 1264 1264, r45 -> p57, r44 -> p10 [p3], r49 -> p13 [p50] | CMP SUB
783: 1260 1264 1265 1265, r49 -> p13 | J JMP_IMM
784: 1261 1262 1263 1266, r14 -> p9, r9 -> p11 [p12] | MOV ADD
785: 1263 1265 1269 1269, r9 -> p11, r8 -> p61, r14 -> p0 [p9] | MOV LOAD
786: 1264 1269 1270 1270, r14 -> p0, r44 -> p1 [p10], r49 -> p56 [p13] | CMP SUB_IMM
787: 1265 1270 1271 1271, r49 -> p56 | J JMP_IMM
788: 1276 1277 1278 1278, r3 -> p2, r44 -> p60 [p1], r49 -> p5 [p56] | TEST AND_IMM
789: 1277 1278 1279 1279, r49 -> p5 | J JMP_IMM
790: 1284 1285 1286 1286, r0 -> p58, r6 -> p53, r0 -> p15 [p58], r49 -> p62 [p5] | ADD ADD
791: 1285 1286 1287 1287, r6 -> p53, r9 -> p11, r14 -> p6 [p0] | LEA LEA
792: 1286 1287 1291 1291, r9 -> p11, r1 -> p52, r45 -> p4 [p57] | CMP LOAD
793: 1287 1291 1292 1292, r45 -> p4, r44 -> p8 [p60], r49 -> p59 [p62] | CMP SUB
794: 1288 1292 1293 1293, r49 -> p59 | J JMP_IMM
795: 1298 1299 1300 1300, r44 -> p3 [p8] | MOV SAVE_PC
796: 1299 1300 1301 1301, r10 -> p55, r44 -> p3 | MOV STORE
797: 1300 1301 1302 1302 | JMP JMP_IMM
798: 1301 1302 1306 1306, r4 -> p54, r3 -> p50 [p2] | POP LOAD
799: 1302 1303 1304 1307, r4 -> p54, r4 -> p12 [p54] | POP ADD_IMM
800: 1303 1304 1308 1308, r4 -> p12, r14 -> p9 [p6] | POP LOAD
801: 1304 1305 1306 1309, r4 -> p12, r4 -> p10 [p12] | POP ADD_IMM
802: 1306 1307 1311 1311, r4 -> p10, r44 -> p13 [p3] | RET LOAD
803: 1307 1308 1309 1312, r4 -> p10, r4 -> p1 [p10] | RET ADD_IMM
804: 1308 1311 1312 1313, r44 -> p13 | RET JMP_REG
805: 1309 1310 1311 1314, r5 -> p49, r7 -> p56 [p51] | LEA LEA
806: 1311 1312 1313 1315, r7 -> p56, r0 -> p58 [p15] | MOVSX SEXT_DWORD_TO_QWORD
807: 1312 1313 1317 1317, r0 -> p58, r45 -> p5 [p4] | CMP LOAD
808: 1313 1317 1318 1318, r45 -> p5, r44 -> p0 [p13], r49 -> p57 [p59] | CMP SUB
809: 1314 1318 1319 1319, r49 -> p57 | J JMP_IMM
810: 1315 1316 1317 1320, r44 -> p60 [p0] | CALL SAVE_PC
811: 1317 1319 1320 1321, r4 -> p1, r4 -> p62 [p1] | CALL SUB_IMM
812: 1318 1320 1321 1322, r44 -> p60, r4 -> p62 | CALL STORE
813: 1319 1321 1322 1323 | CALL JMP_IMM
814: 1320 1322 1323 1324, r14 -> p9, r4 -> p62 | PUSH STORE
815: 1321 1323 1324 1325, r4 -> p62, r4 -> p8 [p62] | PUSH SUB_IMM
816: 1322 1324 1325 1326, r3 -> p50, r4 -> p8 | PUSH STORE
817: 1323 1325 1326 1327, r4 -> p8, r4 -> p2 [p8] | PUSH SUB_IMM
818: 1324 1326 1327 1328, r7 -> p56, r0 -> p54 [p58] | MOVSX SEXT_DWORD_TO_QWORD
819: 1325 1327 1328 1329, r0 -> p54, r0 -> p54, r1 -> p6 [p52] | LEA LEA
820: 1326 1328 1329 1330, r44 -> p12 [p60] | MOVSX SAVE_PC
821: 1327 1329 1333 1333, r44 -> p12, r44 -> p3 [p12] | MOVSX LOAD
822: 1328 1333 1334 1334, r44 -> p3, r2 -> p10 [p63] | MOVSX SEXT_DWORD_TO_QWORD
823: 1329 1330 1331 1335, r0 -> p54, r6 -> p51 [p53] | MOV ADD
824: 1330 1334 1335 1336, r6 -> p51, r2 -> p10, r6 -> p15 [p51], r49 -> p4 [p57] | SUB SUB
825: 1333 1335 1336 1337, r6 -> p15, r6 -> p13 [p15] | MOVSX SEXT_DWORD_TO_QWORD
826: 1334 1336 1337 1338, r1 -> p6, r2 -> p10, r1 -> p59 [p6], r49 -> p0 [p4] | SUB SUB
827: 1335 1337 1338 1339, r1 -> p59, r1 -> p1 [p59] | MOVSX SEXT_DWORD_TO_QWORD
828: 1336 1338 1339 1340, r1 -> p1, r1 -> p62 [p1] | LEA LEA
829: 1337 1339 1343 1343, r2 -> p10, r7 -> p8 [p56] | MOV LOAD
830: 1338 1340 1341 1344, r0 -> p54, r8 -> p58 [p61] | LEA LEA
831: 1339 1341 1342 1345, r9 -> p52 [p11] | XOR ADD
832: 1340 1342 1343 1346, r44 -> p60 [p3] | MOV SAVE_PC
833: 1343 1344 1348 1348, r44 -> p60, r10 -> p12 [p55] | MOV LOAD
834: 1344 1345 1346 1349, r44 -> p63 [p60] | MOV SAVE_PC
835: 1345 1346 1350 1350, r44 -> p63, r11 -> p53 [p14] | MOV LOAD
836: 1346 1347 1348 1351, r44 -> p51 [p63] | MOV SAVE_PC
837: 1348 1349 1353 1353, r44 -> p51, r3 -> p57 [p50] | MOV LOAD
838: 1349 1350 1351 1354 | JMP JMP_IMM
839: 1350 1351 1355 1355, r9 -> p52, r8 -> p58, r14 -> p15 [p9] | MOV LOAD
840: 1351 1355 1356 1356, r14 -> p15, r44 -> p6 [p51], r49 -> p4 [p0] | CMP SUB_IMM
841: 1353 1356 1357 1357, r49 -> p4 | J JMP_IMM
842: 1354 1357 1358 1358, r3 -> p57, r44 -> p59 [p6], r49 -> p1 [p4] | TEST AND_IMM
843: 1355 1358 1359 1359, r49 -> p1 | J JMP_IMM
844: 1356 1359 1360 1360, r0 -> p54, r6 -> p13, r0 -> p56 [p54], r49 -> p61 [p1] | ADD ADD
845: 1357 1360 1361 1361, r6 -> p13, r9 -> p52, r14 -> p11 [p15] | LEA LEA
846: 1358 1361 1365 1365, r9 -> p52, r1 -> p62, r45 -> p3 [p5] | CMP LOAD
847: 1359 1365 1366 1366, r45 -> p3, r44 -> p55 [p59], r49 -> p60 [p61] | CMP SUB
848: 1360 1366 1367 1367, r49 -> p60 | J JMP_IMM
849: 1361 1362 1363 1368, r14 -> p11, r9 -> p14 [p52] | MOV ADD
850: 1365 1367 1371 1371, r9 -> p14, r8 -> p58, r14 -> p63 [p11] | MOV LOAD
851: 1366 1371 1372 1372, r14 -> p63, r44 -> p50 [p55], r49 -> p9 [p60] | CMP SUB_IMM
852: 1367 1372 1373 1373, r49 -> p9 | J JMP_IMM
853: 1378 1379 1380 1380, r44 -> p51 [p50] | MOV SAVE_PC
854: 1379 1380 1381 1381, r10 -> p12, r44 -> p51 | MOV STORE
855: 1380 1381 1382 1382, r7 -> p8, r14 -> p63, r7 -> p0 [p8], r49 -> p6 [p9] | XOR XOR
856: 1381 1382 1383 1383, r7 -> p0, r44 -> p4 [p51], r49 -> p54 [p6] | TEST AND_IMM
857: 1382 1383 1384 1384, r49 -> p54 | J JMP_IMM
858: 1389 1390 1394 1394, r4 -> p2, r3 -> p1 [p57] | POP LOAD
859: 1390 1391 1392 1395, r4 -> p2, r4 -> p15 [p2] | POP ADD_IMM
860: 1391 1392 1396 1396, r4 -> p15, r14 -> p5 [p63] | POP LOAD
861: 1392 1393 1394 1397, r4 -> p15, r4 -> p59 [p15] | POP ADD_IMM
862: 1394 1395 1399 1399, r4 -> p59, r44 -> p61 [p4] | RET LOAD
863: 1395 1396 1397 1400, r4 -> p59, r4 -> p52 [p59] | RET ADD_IMM
864: 1396 1399 1400 1401, r44 -> p61 | RET JMP_REG
865: 1397 1398 1399 1402, r5 -> p49, r7 -> p11 [p0] | LEA LEA
866: 1399 1400 1401 1403, r7 -> p11, r0 -> p55 [p56] | MOVSX SEXT_DWORD_TO_QWORD
867: 1400 1401 1405 1405, r0 -> p55, r45 -> p60 [p3] | CMP LOAD
868: 1401 1405 1406 1406, r45 -> p60, r44 -> p50 [p61], r49 -> p8 [p54] | CMP SUB
869: 1402 1406 1407 1407, r49 -> p8 | J JMP_IMM
870: 1403 1404 1405 1408, r44 -> p9 [p50] | CALL SAVE_PC
871: 1405 1407 1408 1409, r4 -> p52, r4 -> p51 [p52] | CALL SUB_IMM
872: 1406 1408 1409 1410, r44 -> p9, r4 -> p51 | CALL STORE
873: 1407 1409 1410 1411 | CALL JMP_IMM
874: 1408 1410 1411 1412, r14 -> p5, r4 -> p51 | PUSH STORE
875: 1409 1411 1412 1413, r4 -> p51, r4 -> p6 [p51] | PUSH SUB_IMM
876: 1410 1412 1413 1414, r3 -> p1, r4 -> p6 | PUSH STORE
877: 1411 1413 1414 1415, r4 -> p6, r4 -> p57 [p6] | PUSH SUB_IMM
878: 1412 1414 1415 1416, r7 -> p11, r0 -> p2 [p55] | MOVSX SEXT_DWORD_TO_QWORD
879: 1413 1415 1416 1417, r0 -> p2, r0 -> p2, r1 -> p63 [p62] | LEA LEA
880: 1414 1416 1417 1418, r44 -> p15 [p9] | MOVSX SAVE_PC
881: 1415 1417 1421 1421, r44 -> p15, r44 -> p4 [p15] | MOVSX LOAD
882: 1416 1421 1422 1422, r44 -> p4, r2 -> p59 [p10] | MOVSX SEXT_DWORD_TO_QWORD
883: 1417 1418 1419 1423, r0 -> p2, r6 -> p0 [p13] | MOV ADD
884: 1418 1422 1423 1424, r6 -> p0, r2 -> p59, r6 -> p56 [p0], r49 -> p3 [p8] | SUB SUB
885: 1421 1423 1424 1425, r6 -> p56, r6 -> p61 [p56] | MOVSX SEXT_DWORD_TO_QWORD
886: 1422 1424 1425 1426, r1 -> p63, r2 -> p59, r1 -> p54 [p63], r49 -> p50 [p3] | SUB SUB
887: 1423 1425 1426 1427, r1 -> p54, r1 -> p52 [p54] | MOVSX SEXT_DWORD_TO_QWORD
888: 1424 1426 1427 1428, r1 -> p52, r1 -> p51 [p52] | LEA LEA
889: 1425 1427 1431 1431, r2 -> p59, r7 -> p6 [p11] | MOV LOAD
890: 1426 1428 1429 1432, r0 -> p2, r8 -> p55 [p58] | LEA LEA
891: 1427 1429 1430 1433, r9 -> p62 [p14] | XOR ADD
892: 1428 1430 1431 1434, r44 -> p9 [p4] | MOV SAVE_PC
893: 1431 1432 1436 1436, r44 -> p9, r10 -> p15 [p12] | MOV LOAD
894: 1432 1433 1434 1437, r44 -> p10 [p9] | MOV SAVE_PC
895: 1433 1434 1438 1438, r44 -> p10, r11 -> p13 [p53] | MOV LOAD
896: 1434 1435 1436 1439, r44 -> p0 [p10] | MOV SAVE_PC
897: 1436 1437 1441 1441, r44 -> p0, r3 -> p8 [p1] | MOV LOAD
898: 1437 1438 1439 1442 | JMP JMP_IMM
899: 1438 1439 1443 1443, r9 -> p62, r8 -> p55, r14 -> p56 [p5] | MOV LOAD
900: 1439 1443 1444 1444, r14 -> p56, r44 -> p63 [p0], r49 -> p3 [p50] | CMP SUB_IMM
901: 1441 1444 1445 1445, r49 -> p3 | J JMP_IMM
902: 1450 1451 1452 1452, r44 -> p54 [p63] | MOV SAVE_PC
903: 1451 1452 1453 1453, r10 -> p15, r44 -> p54 | MOV STORE
904: 1452 1453 1454 1454, r7 -> p6, r14 -> p56, r7 -> p52 [p6], r49 -> p11 [p3] | XOR XOR
905: 1453 1454 1455 1455, r7 -> p52, r44 -> p58 [p54], r49 -> p14 [p11] | TEST AND_IMM
906: 1454 1455 1456 1456, r49 -> p14 | J JMP_IMM
907: 1455 1456 1457 1457, r45 -> p4 [p60] | CMP SAVE_PC
908: 1456 1457 1461 1461, r45 -> p4, r45 -> p12 [p4] | CMP LOAD
909: 1457 1461 1462 1462, r45 -> p12, r44 -> p9 [p58], r49 -> p53 [p14] | CMP SUB_IMM
910: 1458 1462 1463 1463, r49 -> p53 | J JMP_IMM
911: 1459 1460 1461 1464, r14 -> p56, r44 -> p10 [p9], r49 -> p1 [p53] | CMP SUB_IMM
912: 1461 1463 1464 1465, r49 -> p1 | J JMP_IMM
913: 1462 1464 1465 1466, r14 -> p56, r1 -> p5 [p51] | LEA LEA
914: 1463 1465 1466 1467, r1 -> p5, r44 -> p0 [p10], r49 -> p50 [p1] | CMP SUB_IMM
915: 1464 1466 1467 1468, r49 -> p50 | J JMP_IMM
916: 1472 1473 1474 1474, r44 -> p63 [p0] | MOV ADD_IMM
917: 1473 1474 1475 1475, r45 -> p6 [p12] | MOV SAVE_PC
918: 1474 1475 1476 1476, r44 -> p63, r45 -> p6 | MOV STORE
919: 1475 1476 1477 1477, r10 -> p15, r1 -> p3 [p5] | MOVSX SEXT_DWORD_TO_QWORD
920: 1476 1477 1478 1478, r1 -> p3, r1 -> p3, r1 -> p54 [p3] | LEA LEA
921: 1477 1478 1479 1479, r44 -> p11 [p63] | MOV SAVE_PC
922: 1478 1479 1483 1483, r44 -> p11, r10 -> p60 [p15] | MOV LOAD
923: 1479 1480 1481 1484, r44 -> p4 [p11] | MOV SAVE_PC
924: 1480 1481 1485 1485, r44 -> p4, r2 -> p58 [p59] | MOV LOAD
925: 1481 1485 1486 1486, r1 -> p54, r2 -> p58, r44 -> p14 [p4] | MOV LEA
926: 1483 1486 1487 1487, r10 -> p60, r44 -> p14 | MOV STORE
927: 1484 1487 1488 1488, r44 -> p9 [p14] | MOVSX SAVE_PC
928: 1485 1488 1492 1492, r44 -> p9, r44 -> p53 [p9] | MOVSX LOAD
929: 1486 1492 1493 1493, r44 -> p53, r1 -> p51 [p54] | MOVSX SEXT_DWORD_TO_QWORD
930: 1487 1493 1494 1494, r1 -> p51, r1 -> p51, r1 -> p10 [p51] | LEA LEA
931: 1488 1489 1490 1495, r44 -> p1 [p53] | MOV SAVE_PC
932: 1492 1494 1498 1498, r44 -> p1, r2 -> p0 [p58] | MOV LOAD
933: 1493 1498 1499 1499, r1 -> p10, r2 -> p0, r44 -> p12 [p1] | MOV LEA
934: 1494 1499 1500 1500, r0 -> p2, r44 -> p12 | MOV STORE
935: 1495 1496 1497 1501, r44 -> p5 [p12] | MOVSX SAVE_PC
936: 1498 1500 1504 1504, r44 -> p5, r44 -> p3 [p5] | MOVSX LOAD
937: 1499 1504 1505 1505, r44 -> p3, r0 -> p63 [p2] | MOVSX SEXT_DWORD_TO_QWORD
938: 1500 1505 1506 1506, r0 -> p63, r0 -> p63, r0 -> p15 [p63] | LEA LEA
939: 1501 1502 1503 1507, r44 -> p11 [p3] | MOV SAVE_PC
940: 1504 1506 1510 1510, r44 -> p11, r1 -> p59 [p10] | MOV LOAD
941: 1505 1510 1511 1511, r0 -> p15, r1 -> p59, r44 -> p4 [p11] | MOV LEA
942: 1506 1511 1512 1512, r14 -> p56, r44 -> p4 | MOV STORE
943: 1507 1508 1509 1513, r44 -> p14 [p4] | MOVSX SAVE_PC
944: 1510 1512 1516 1516, r44 -> p14, r44 -> p9 [p14] | MOVSX LOAD
945: 1511 1516 1517 1517, r44 -> p9, r0 -> p54 [p15] | MOVSX SEXT_DWORD_TO_QWORD
946: 1512 1517 1518 1518, r0 -> p54, r0 -> p54, r0 -> p51 [p54] | LEA LEA
947: 1513 1514 1515 1519, r44 -> p53 [p9] | MOV SAVE_PC
948: 1516 1518 1522 1522, r44 -> p53, r1 -> p58 [p59] | MOV LOAD
949: 1517 1522 1523 1523, r0 -> p51, r1 -> p58, r44 -> p1 [p53] | MOV LEA
950: 1518 1523 1524 1524, r44 -> p1 | MOV STORE
951: 1519 1520 1521 1525, r44 -> p12 [p1] | MOVSX SAVE_PC
952: 1522 1524 1528 1528, r44 -> p12, r44 -> p5 [p12] | MOVSX LOAD
953: 1523 1528 1529 1529, r44 -> p5, r0 -> p2 [p51] | MOVSX SEXT_DWORD_TO_QWORD
954: 1524 1529 1530 1530, r0 -> p2, r0 -> p2, r0 -> p63 [p2] | LEA LEA
955: 1525 1526 1527 1531, r44 -> p3 [p5] | MOV SAVE_PC
956: 1528 1530 1534 1534, r44 -> p3, r1 -> p10 [p58] | MOV LOAD
957: 1529 1534 1535 1535, r0 -> p63, r1 -> p10, r44 -> p11 [p3] | MOV LEA
958: 1530 1535 1536 1536, r44 -> p11 | MOV STORE
959: 1531 1532 1533 1537, r44 -> p4 [p11] | MOVSX SAVE_PC
960: 1534 1536 1540 1540, r44 -> p4, r44 -> p14 [p4] | MOVSX LOAD
961: 1535 1540 1541 1541, r44 -> p14, r0 -> p15 [p63] | MOVSX SEXT_DWORD_TO_QWORD
962: 1536 1541 1542 1542, r0 -> p15, r0 -> p15, r0 -> p54 [p15] | LEA LEA
963: 1537 1538 1539 1543, r44 -> p9 [p14] | MOV SAVE_PC
964: 1540 1542 1546 1546, r44 -> p9, r1 -> p59 [p10] | MOV LOAD
965: 1541 1546 1547 1547, r0 -> p54, r1 -> p59, r44 -> p53 [p9] | MOV LEA
966: 1542 1547 1548 1548, r44 -> p53 | MOV STORE
967: 1543 1544 1545 1549, r44 -> p1 [p53] | INC SAVE_PC
968: 1546 1548 1552 1552, r44 -> p1, r44 -> p12 [p1] | INC LOAD
969: 1547 1552 1553 1553, r44 -> p12, r44 -> p51 [p12] | INC ADD_IMM
970: 1548 1549 1550 1554, r45 -> p2 [p6] | INC SAVE_PC
971: 1549 1553 1554 1555, r44 -> p51, r45 -> p2 | INC STORE
972: 1552 1554 1558 1558, r4 -> p57, r3 -> p5 [p8] | POP LOAD
973: 1553 1555 1556 1559, r4 -> p57, r4 -> p58 [p57] | POP ADD_IMM
974: 1554 1556 1560 1560, r4 -> p58, r14 -> p3 [p56] | POP LOAD
975: 1555 1557 1558 1561, r4 -> p58, r4 -> p11 [p58] | POP ADD_IMM
976: 1558 1559 1563 1563, r4 -> p11, r44 -> p4 [p51] | RET LOAD
977: 1559 1560 1561 1564, r4 -> p11, r4 -> p63 [p11] | RET ADD_IMM
978: 1560 1563 1564 1565, r44 -> p4 | RET JMP_REG
979: 1561 1562 1563 1566 | JMP JMP_IMM
980: 1563 1564 1565 1567, r12 -> p45, r12 -> p15 [p45], r49 -> p14 [p50] | ADD ADD_IMM
981: 1564 1565 1569 1569, r4 -> p63, r45 -> p10 [p2] | CMP LOAD
982: 1565 1569 1570 1570, r15 -> p7, r45 -> p10, r44 -> p9 [p4], r49 -> p53 [p14] | CMP SUB
983: 1566 1570 1571 1571, r49 -> p53 | J JMP_IMM
984: 1567 1568 1569 1572, r44 -> p1 [p9] | MOV SAVE_PC
985: 1569 1571 1575 1575, r44 -> p1, r0 -> p12 [p54] | MOV LOAD
986: 1570 1575 1576 1576, r0 -> p12, r44 -> p6 [p1], r49 -> p8 [p53] | CMP SUB_IMM
987: 1571 1576 1577 1577, r49 -> p8 | J JMP_IMM
988: 1572 1573 1574 1578, r44 -> p57 [p6] | MOV SAVE_PC
989: 1575 1577 1581 1581, r44 -> p57, r1 -> p56 [p59] | MOV LOAD
990: 1576 1581 1582 1582, r1 -> p56, r44 -> p58 [p57], r49 -> p51 [p8] | CMP SUB_IMM
991: 1577 1582 1583 1583, r49 -> p51 | J JMP_IMM
992: 1588 1589 1593 1593, r12 -> p15, r44 -> p11 [p58] | MOVSX LOAD
993: 1589 1593 1594 1594, r44 -> p11, r13 -> p45 [p44] | MOVSX SEXT_DWORD_TO_QWORD
994: 1590 1594 1595 1595, r13 -> p45, r13 -> p45, r44 -> p50 [p11], r49 -> p2 [p51] | TEST AND
995: 1591 1595 1596 1596, r49 -> p2 | J JMP_IMM
996: 1593 1596 1597 1597, r13 -> p45, r5 -> p4 [p49] | MOV ADD
997: 1594 1597 1598 1598, r44 -> p14 [p50] | MOV SAVE_PC
998: 1595 1598 1599 1599, r5 -> p4, r44 -> p14 | MOV STORE
999: 1596 1599 1600 1600, r15 -> p7, r15 -> p9 [p7] | INC ADD_IMM
1000: 1597 1600 1604 1604, r13 -> p45, r1 -> p54 [p56] | MOV LOAD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 750
TotalCycles: 1605
uIPC:0.623053
