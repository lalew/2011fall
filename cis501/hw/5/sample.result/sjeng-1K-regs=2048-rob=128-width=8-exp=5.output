Processing trace...
1: 0 1 2 2, r49 -> p49 | J JMP_IMM
2: 7 8 12 12, r1 -> p1, r44 -> p50 [p44] | MOVSX LOAD
3: 7 12 13 13, r44 -> p50, r2 -> p51 [p2] | MOVSX SEXT_DWORD_TO_QWORD
4: 7 13 14 14, r7 -> p7, r2 -> p51, r6 -> p52 [p6] | LEA LEA
5: 7 14 15 15, r6 -> p52, r6 -> p53 [p52] | MOVSX SEXT_DWORD_TO_QWORD
6: 7 15 19 19, r6 -> p53, r6 -> p54 [p53] | MOV LOAD
7: 7 19 20 20, r6 -> p54, r44 -> p55 [p50], r49 -> p56 [p49] | CMP SUB_IMM
8: 7 20 21 21, r49 -> p56 | J JMP_IMM
9: 7 19 20 21, r6 -> p54, r44 -> p57 [p55], r49 -> p58 [p56] | CMP SUB_IMM
10: 8 20 21 21, r49 -> p58 | J JMP_IMM
11: 26 27 28 28, r2 -> p51, r8 -> p59 [p8] | MOV ADD
12: 26 28 29 29, r8 -> p59, r7 -> p7, r8 -> p60 [p59] | LEA LEA
13: 26 29 30 30, r8 -> p60, r8 -> p61 [p60] | MOVSX SEXT_DWORD_TO_QWORD
14: 26 30 31 31, r8 -> p61, r8 -> p62 [p61] | LEA LEA
15: 26 27 28 31, r2 -> p51, r2 -> p63 [p51], r49 -> p64 [p58] | SHL SHL_IMM
16: 26 27 28 31 | JMP JMP_IMM
17: 26 27 28 31, r6 -> p54, r44 -> p65 [p57], r49 -> p66 [p64] | CMP SUB_IMM
18: 26 28 29 31, r49 -> p66 | J JMP_IMM
19: 27 28 29 31, r6 -> p54, r44 -> p67 [p65], r49 -> p68 [p66] | CMP SUB_IMM
20: 27 29 30 31, r49 -> p68 | J JMP_IMM
21: 27 28 29 31, r6 -> p54, r44 -> p69 [p67], r49 -> p70 [p68] | CMP SUB_IMM
22: 27 29 30 32, r49 -> p70 | J JMP_IMM
23: 27 28 29 32, r1 -> p1, r1 -> p71 [p1], r49 -> p72 [p70] | ADD ADD_IMM
24: 27 28 29 32, r0 -> p0, r0 -> p73 [p0] | INC ADD_IMM
25: 27 29 30 32, r0 -> p73, r44 -> p74 [p69], r49 -> p75 [p72] | CMP SUB_IMM
26: 27 30 31 32, r49 -> p75 | J JMP_IMM
27: 36 37 41 41, r1 -> p71, r44 -> p76 [p74] | MOVSX LOAD
28: 36 41 42 42, r44 -> p76, r2 -> p77 [p63] | MOVSX SEXT_DWORD_TO_QWORD
29: 36 42 43 43, r7 -> p7, r2 -> p77, r6 -> p78 [p54] | LEA LEA
30: 36 43 44 44, r6 -> p78, r6 -> p79 [p78] | MOVSX SEXT_DWORD_TO_QWORD
31: 36 44 48 48, r6 -> p79, r6 -> p80 [p79] | MOV LOAD
32: 36 48 49 49, r6 -> p80, r44 -> p81 [p76], r49 -> p82 [p75] | CMP SUB_IMM
33: 36 49 50 50, r49 -> p82 | J JMP_IMM
34: 36 48 49 50, r6 -> p80, r44 -> p83 [p81], r49 -> p84 [p82] | CMP SUB_IMM
35: 37 49 50 50, r49 -> p84 | J JMP_IMM
36: 55 56 57 57, r2 -> p77, r8 -> p85 [p62] | MOV ADD
37: 55 57 58 58, r8 -> p85, r7 -> p7, r8 -> p86 [p85] | LEA LEA
38: 55 58 59 59, r8 -> p86, r8 -> p87 [p86] | MOVSX SEXT_DWORD_TO_QWORD
39: 55 59 60 60, r8 -> p87, r8 -> p88 [p87] | LEA LEA
40: 55 56 57 60, r2 -> p77, r2 -> p89 [p77], r49 -> p90 [p84] | SHL SHL_IMM
41: 55 56 57 60 | JMP JMP_IMM
42: 55 56 57 60, r6 -> p80, r44 -> p91 [p83], r49 -> p92 [p90] | CMP SUB_IMM
43: 55 57 58 60, r49 -> p92 | J JMP_IMM
44: 56 57 58 60, r6 -> p80, r44 -> p93 [p91], r49 -> p94 [p92] | CMP SUB_IMM
45: 56 58 59 60, r49 -> p94 | J JMP_IMM
46: 56 57 58 60, r6 -> p80, r44 -> p95 [p93], r49 -> p96 [p94] | CMP SUB_IMM
47: 56 58 59 61, r49 -> p96 | J JMP_IMM
48: 56 57 58 61, r1 -> p71, r1 -> p97 [p71], r49 -> p98 [p96] | ADD ADD_IMM
49: 56 57 58 61, r0 -> p73, r0 -> p99 [p73] | INC ADD_IMM
50: 56 58 59 61, r0 -> p99, r44 -> p100 [p95], r49 -> p101 [p98] | CMP SUB_IMM
51: 56 59 60 61, r49 -> p101 | J JMP_IMM
52: 65 66 70 70, r1 -> p97, r44 -> p102 [p100] | MOVSX LOAD
53: 65 70 71 71, r44 -> p102, r2 -> p103 [p89] | MOVSX SEXT_DWORD_TO_QWORD
54: 65 71 72 72, r7 -> p7, r2 -> p103, r6 -> p104 [p80] | LEA LEA
55: 65 72 73 73, r6 -> p104, r6 -> p105 [p104] | MOVSX SEXT_DWORD_TO_QWORD
56: 65 73 77 77, r6 -> p105, r6 -> p106 [p105] | MOV LOAD
57: 65 77 78 78, r6 -> p106, r44 -> p107 [p102], r49 -> p108 [p101] | CMP SUB_IMM
58: 65 78 79 79, r49 -> p108 | J JMP_IMM
59: 65 77 78 79, r6 -> p106, r44 -> p109 [p107], r49 -> p110 [p108] | CMP SUB_IMM
60: 66 78 79 79, r49 -> p110 | J JMP_IMM
61: 84 85 86 86, r2 -> p103, r8 -> p111 [p88] | MOV ADD
62: 84 86 87 87, r8 -> p111, r7 -> p7, r8 -> p112 [p111] | LEA LEA
63: 84 87 88 88, r8 -> p112, r8 -> p113 [p112] | MOVSX SEXT_DWORD_TO_QWORD
64: 84 88 89 89, r8 -> p113, r8 -> p114 [p113] | LEA LEA
65: 84 85 86 89, r2 -> p103, r2 -> p115 [p103], r49 -> p116 [p110] | SHL SHL_IMM
66: 84 85 86 89 | JMP JMP_IMM
67: 84 85 86 89, r6 -> p106, r44 -> p117 [p109], r49 -> p118 [p116] | CMP SUB_IMM
68: 84 86 87 89, r49 -> p118 | J JMP_IMM
69: 85 86 87 89, r6 -> p106, r44 -> p119 [p117], r49 -> p120 [p118] | CMP SUB_IMM
70: 85 87 88 89, r49 -> p120 | J JMP_IMM
71: 85 86 87 89, r6 -> p106, r44 -> p121 [p119], r49 -> p122 [p120] | CMP SUB_IMM
72: 85 87 88 90, r49 -> p122 | J JMP_IMM
73: 85 86 87 90, r1 -> p97, r1 -> p123 [p97], r49 -> p124 [p122] | ADD ADD_IMM
74: 85 86 87 90, r0 -> p99, r0 -> p125 [p99] | INC ADD_IMM
75: 85 87 88 90, r0 -> p125, r44 -> p126 [p121], r49 -> p127 [p124] | CMP SUB_IMM
76: 85 88 89 90, r49 -> p127 | J JMP_IMM
77: 86 87 88 90, r0 -> p128 [p125] | XOR ADD
78: 86 87 88 90, r1 -> p129 [p123] | MOV ADD_IMM
79: 86 87 88 90 | JMP JMP_IMM
80: 86 88 89 91, r0 -> p128, r44 -> p130 [p126], r49 -> p131 [p127] | CMP SUB_IMM
81: 86 89 90 91, r49 -> p131 | J JMP_IMM
82: 95 96 97 97, r7 -> p7, r2 -> p132 [p115] | MOV ADD
83: 95 96 100 100, r1 -> p129, r44 -> p133 [p130] | ADD LOAD
84: 95 100 101 101, r2 -> p132, r44 -> p133, r2 -> p134 [p132], r49 -> p135 [p131] | ADD ADD
85: 95 101 102 102, r2 -> p134, r2 -> p136 [p134] | MOVSX SEXT_DWORD_TO_QWORD
86: 95 102 106 106, r2 -> p136, r45 -> p137 [p45] | CMP LOAD
87: 95 106 107 107, r45 -> p137, r44 -> p138 [p133], r49 -> p139 [p135] | CMP SUB_IMM
88: 95 107 108 108, r49 -> p139 | J JMP_IMM
89: 95 96 97 108, r1 -> p129, r1 -> p140 [p129], r49 -> p141 [p139] | ADD ADD_IMM
90: 96 97 98 108, r0 -> p128, r0 -> p142 [p128] | INC ADD_IMM
91: 96 98 99 108, r0 -> p142, r44 -> p143 [p138], r49 -> p144 [p141] | CMP SUB_IMM
92: 96 99 100 108, r49 -> p144 | J JMP_IMM
93: 105 106 107 108, r7 -> p7, r2 -> p145 [p136] | MOV ADD
94: 105 106 110 110, r1 -> p140, r44 -> p146 [p143] | ADD LOAD
95: 105 110 111 111, r2 -> p145, r44 -> p146, r2 -> p147 [p145], r49 -> p148 [p144] | ADD ADD
96: 105 111 112 112, r2 -> p147, r2 -> p149 [p147] | MOVSX SEXT_DWORD_TO_QWORD
97: 105 112 116 116, r2 -> p149, r45 -> p150 [p137] | CMP LOAD
98: 105 116 117 117, r45 -> p150, r44 -> p151 [p146], r49 -> p152 [p148] | CMP SUB_IMM
99: 105 117 118 118, r49 -> p152 | J JMP_IMM
100: 105 106 107 118, r1 -> p140, r1 -> p153 [p140], r49 -> p154 [p152] | ADD ADD_IMM
101: 106 107 108 118, r0 -> p142, r0 -> p155 [p142] | INC ADD_IMM
102: 106 108 109 118, r0 -> p155, r44 -> p156 [p151], r49 -> p157 [p154] | CMP SUB_IMM
103: 106 109 110 118, r49 -> p157 | J JMP_IMM
104: 115 116 117 118, r7 -> p7, r2 -> p158 [p149] | MOV ADD
105: 115 116 120 120, r1 -> p153, r44 -> p159 [p156] | ADD LOAD
106: 115 120 121 121, r2 -> p158, r44 -> p159, r2 -> p160 [p158], r49 -> p161 [p157] | ADD ADD
107: 115 121 122 122, r2 -> p160, r2 -> p162 [p160] | MOVSX SEXT_DWORD_TO_QWORD
108: 115 122 126 126, r2 -> p162, r45 -> p163 [p150] | CMP LOAD
109: 115 126 127 127, r45 -> p163, r44 -> p164 [p159], r49 -> p165 [p161] | CMP SUB_IMM
110: 115 127 128 128, r49 -> p165 | J JMP_IMM
111: 115 116 117 128, r1 -> p153, r1 -> p166 [p153], r49 -> p167 [p165] | ADD ADD_IMM
112: 116 117 118 128, r0 -> p155, r0 -> p168 [p155] | INC ADD_IMM
113: 116 118 119 128, r0 -> p168, r44 -> p169 [p164], r49 -> p170 [p167] | CMP SUB_IMM
114: 116 119 120 128, r49 -> p170 | J JMP_IMM
115: 125 126 127 128, r7 -> p7, r2 -> p171 [p162] | MOV ADD
116: 125 126 130 130, r1 -> p166, r44 -> p172 [p169] | ADD LOAD
117: 125 130 131 131, r2 -> p171, r44 -> p172, r2 -> p173 [p171], r49 -> p174 [p170] | ADD ADD
118: 125 131 132 132, r2 -> p173, r2 -> p175 [p173] | MOVSX SEXT_DWORD_TO_QWORD
119: 125 132 136 136, r2 -> p175, r45 -> p176 [p163] | CMP LOAD
120: 125 136 137 137, r45 -> p176, r44 -> p177 [p172], r49 -> p178 [p174] | CMP SUB_IMM
121: 125 137 138 138, r49 -> p178 | J JMP_IMM
122: 125 126 127 138, r1 -> p166, r1 -> p179 [p166], r49 -> p180 [p178] | ADD ADD_IMM
123: 126 127 128 138, r0 -> p168, r0 -> p181 [p168] | INC ADD_IMM
124: 126 128 129 138, r0 -> p181, r44 -> p182 [p177], r49 -> p183 [p180] | CMP SUB_IMM
125: 126 129 130 138, r49 -> p183 | J JMP_IMM
126: 135 136 137 138, r7 -> p7, r2 -> p184 [p175] | MOV ADD
127: 135 136 140 140, r1 -> p179, r44 -> p185 [p182] | ADD LOAD
128: 135 140 141 141, r2 -> p184, r44 -> p185, r2 -> p186 [p184], r49 -> p187 [p183] | ADD ADD
129: 135 141 142 142, r2 -> p186, r2 -> p188 [p186] | MOVSX SEXT_DWORD_TO_QWORD
130: 135 142 146 146, r2 -> p188, r45 -> p189 [p176] | CMP LOAD
131: 135 146 147 147, r45 -> p189, r44 -> p190 [p185], r49 -> p191 [p187] | CMP SUB_IMM
132: 135 147 148 148, r49 -> p191 | J JMP_IMM
133: 135 136 137 148, r1 -> p179, r1 -> p192 [p179], r49 -> p193 [p191] | ADD ADD_IMM
134: 136 137 138 148, r0 -> p181, r0 -> p194 [p181] | INC ADD_IMM
135: 136 138 139 148, r0 -> p194, r44 -> p195 [p190], r49 -> p196 [p193] | CMP SUB_IMM
136: 136 139 140 148, r49 -> p196 | J JMP_IMM
137: 145 146 147 148, r7 -> p7, r2 -> p197 [p188] | MOV ADD
138: 145 146 150 150, r1 -> p192, r44 -> p198 [p195] | ADD LOAD
139: 145 150 151 151, r2 -> p197, r44 -> p198, r2 -> p199 [p197], r49 -> p200 [p196] | ADD ADD
140: 145 151 152 152, r2 -> p199, r2 -> p201 [p199] | MOVSX SEXT_DWORD_TO_QWORD
141: 145 152 156 156, r2 -> p201, r45 -> p202 [p189] | CMP LOAD
142: 145 156 157 157, r45 -> p202, r44 -> p203 [p198], r49 -> p204 [p200] | CMP SUB_IMM
143: 145 157 158 158, r49 -> p204 | J JMP_IMM
144: 145 146 147 158, r1 -> p192, r1 -> p205 [p192], r49 -> p206 [p204] | ADD ADD_IMM
145: 146 147 148 158, r0 -> p194, r0 -> p207 [p194] | INC ADD_IMM
146: 146 148 149 158, r0 -> p207, r44 -> p208 [p203], r49 -> p209 [p206] | CMP SUB_IMM
147: 146 149 150 158, r49 -> p209 | J JMP_IMM
148: 155 156 157 158, r7 -> p7, r2 -> p210 [p201] | MOV ADD
149: 155 156 160 160, r1 -> p205, r44 -> p211 [p208] | ADD LOAD
150: 155 160 161 161, r2 -> p210, r44 -> p211, r2 -> p212 [p210], r49 -> p213 [p209] | ADD ADD
151: 155 161 162 162, r2 -> p212, r2 -> p214 [p212] | MOVSX SEXT_DWORD_TO_QWORD
152: 155 162 166 166, r2 -> p214, r45 -> p215 [p202] | CMP LOAD
153: 155 166 167 167, r45 -> p215, r44 -> p216 [p211], r49 -> p217 [p213] | CMP SUB_IMM
154: 155 167 168 168, r49 -> p217 | J JMP_IMM
155: 155 156 157 168, r1 -> p205, r1 -> p218 [p205], r49 -> p219 [p217] | ADD ADD_IMM
156: 156 157 158 168, r0 -> p207, r0 -> p220 [p207] | INC ADD_IMM
157: 156 158 159 168, r0 -> p220, r44 -> p221 [p216], r49 -> p222 [p219] | CMP SUB_IMM
158: 156 159 160 168, r49 -> p222 | J JMP_IMM
159: 165 166 167 168, r7 -> p7, r2 -> p223 [p214] | MOV ADD
160: 165 166 170 170, r1 -> p218, r44 -> p224 [p221] | ADD LOAD
161: 165 170 171 171, r2 -> p223, r44 -> p224, r2 -> p225 [p223], r49 -> p226 [p222] | ADD ADD
162: 165 171 172 172, r2 -> p225, r2 -> p227 [p225] | MOVSX SEXT_DWORD_TO_QWORD
163: 165 172 176 176, r2 -> p227, r45 -> p228 [p215] | CMP LOAD
164: 165 176 177 177, r45 -> p228, r44 -> p229 [p224], r49 -> p230 [p226] | CMP SUB_IMM
165: 165 177 178 178, r49 -> p230 | J JMP_IMM
166: 165 166 167 178, r1 -> p218, r1 -> p231 [p218], r49 -> p232 [p230] | ADD ADD_IMM
167: 166 167 168 178, r0 -> p220, r0 -> p233 [p220] | INC ADD_IMM
168: 166 168 169 178, r0 -> p233, r44 -> p234 [p229], r49 -> p235 [p232] | CMP SUB_IMM
169: 166 169 170 178, r49 -> p235 | J JMP_IMM
170: 166 167 168 178, r0 -> p236 [p233] | XOR ADD
171: 166 167 168 178, r1 -> p237 [p231] | MOV ADD_IMM
172: 166 167 168 178 | JMP JMP_IMM
173: 166 168 169 179, r0 -> p236, r44 -> p238 [p234], r49 -> p239 [p235] | CMP SUB_IMM
174: 166 169 170 179, r49 -> p239 | J JMP_IMM
175: 175 176 180 180, r1 -> p237, r44 -> p240 [p238] | MOVSX LOAD
176: 175 180 181 181, r44 -> p240, r2 -> p241 [p227] | MOVSX SEXT_DWORD_TO_QWORD
177: 175 181 182 182, r7 -> p7, r2 -> p241, r6 -> p242 [p106] | LEA LEA
178: 175 182 183 183, r6 -> p242, r6 -> p243 [p242] | MOVSX SEXT_DWORD_TO_QWORD
179: 175 183 187 187, r6 -> p243, r6 -> p244 [p243] | MOV LOAD
180: 175 187 188 188, r6 -> p244, r44 -> p245 [p240], r49 -> p246 [p239] | CMP SUB_IMM
181: 175 188 189 189, r49 -> p246 | J JMP_IMM
182: 175 181 182 189, r2 -> p241, r8 -> p247 [p114] | MOV ADD
183: 176 182 183 189, r8 -> p247, r7 -> p7, r8 -> p248 [p247] | LEA LEA
184: 176 183 184 189, r8 -> p248, r8 -> p249 [p248] | MOVSX SEXT_DWORD_TO_QWORD
185: 176 184 185 189, r8 -> p249, r8 -> p250 [p249] | LEA LEA
186: 176 181 182 189, r2 -> p241, r2 -> p251 [p241], r49 -> p252 [p246] | SHL SHL_IMM
187: 176 177 178 189 | JMP JMP_IMM
188: 176 187 188 189, r6 -> p244, r44 -> p253 [p245], r49 -> p254 [p252] | CMP SUB_IMM
189: 176 188 189 190, r49 -> p254 | J JMP_IMM
190: 176 187 188 190, r6 -> p244, r44 -> p255 [p253], r49 -> p256 [p254] | CMP SUB_IMM
191: 177 188 189 190, r49 -> p256 | J JMP_IMM
192: 177 187 188 190, r6 -> p244, r44 -> p257 [p255], r49 -> p258 [p256] | CMP SUB_IMM
193: 177 188 189 190, r49 -> p258 | J JMP_IMM
194: 177 178 179 190, r1 -> p237, r1 -> p259 [p237], r49 -> p260 [p258] | ADD ADD_IMM
195: 177 178 179 190, r0 -> p236, r0 -> p261 [p236] | INC ADD_IMM
196: 177 179 180 190, r0 -> p261, r44 -> p262 [p257], r49 -> p263 [p260] | CMP SUB_IMM
197: 177 180 181 191, r49 -> p263 | J JMP_IMM
198: 186 187 191 191, r1 -> p259, r44 -> p264 [p262] | MOVSX LOAD
199: 186 191 192 192, r44 -> p264, r2 -> p265 [p251] | MOVSX SEXT_DWORD_TO_QWORD
200: 186 192 193 193, r7 -> p7, r2 -> p265, r6 -> p266 [p244] | LEA LEA
201: 186 193 194 194, r6 -> p266, r6 -> p267 [p266] | MOVSX SEXT_DWORD_TO_QWORD
202: 186 194 198 198, r6 -> p267, r6 -> p268 [p267] | MOV LOAD
203: 186 198 199 199, r6 -> p268, r44 -> p269 [p264], r49 -> p270 [p263] | CMP SUB_IMM
204: 186 199 200 200, r49 -> p270 | J JMP_IMM
205: 186 192 193 200, r2 -> p265, r8 -> p271 [p250] | MOV ADD
206: 187 193 194 200, r8 -> p271, r7 -> p7, r8 -> p272 [p271] | LEA LEA
207: 187 194 195 200, r8 -> p272, r8 -> p273 [p272] | MOVSX SEXT_DWORD_TO_QWORD
208: 187 195 196 200, r8 -> p273, r8 -> p274 [p273] | LEA LEA
209: 187 192 193 200, r2 -> p265, r2 -> p275 [p265], r49 -> p276 [p270] | SHL SHL_IMM
210: 187 188 189 200 | JMP JMP_IMM
211: 187 198 199 200, r6 -> p268, r44 -> p277 [p269], r49 -> p278 [p276] | CMP SUB_IMM
212: 187 199 200 201, r49 -> p278 | J JMP_IMM
213: 187 198 199 201, r6 -> p268, r44 -> p279 [p277], r49 -> p280 [p278] | CMP SUB_IMM
214: 188 199 200 201, r49 -> p280 | J JMP_IMM
215: 188 198 199 201, r6 -> p268, r44 -> p281 [p279], r49 -> p282 [p280] | CMP SUB_IMM
216: 188 199 200 201, r49 -> p282 | J JMP_IMM
217: 205 206 210 210, r8 -> p274, r6 -> p283 [p268] | MOV LOAD
218: 205 206 207 210, r8 -> p274, r2 -> p275, r8 -> p284 [p274], r49 -> p285 [p282] | ADD ADD
219: 205 210 211 211, r6 -> p283, r44 -> p286 [p281], r49 -> p287 [p285] | CMP SUB_IMM
220: 205 211 212 212, r49 -> p287 | J JMP_IMM
221: 205 210 211 212, r6 -> p283, r44 -> p288 [p286], r49 -> p289 [p287] | CMP SUB_IMM
222: 205 211 212 212, r49 -> p289 | J JMP_IMM
223: 205 210 211 212, r6 -> p283, r44 -> p290 [p288], r49 -> p291 [p289] | CMP SUB_IMM
224: 205 211 212 212, r49 -> p291 | J JMP_IMM
225: 217 218 222 222, r8 -> p284, r6 -> p292 [p283] | MOV LOAD
226: 217 218 219 222, r8 -> p284, r2 -> p275, r8 -> p293 [p284], r49 -> p294 [p291] | ADD ADD
227: 217 222 223 223, r6 -> p292, r44 -> p295 [p290], r49 -> p296 [p294] | CMP SUB_IMM
228: 217 223 224 224, r49 -> p296 | J JMP_IMM
229: 217 222 223 224, r6 -> p292, r44 -> p297 [p295], r49 -> p298 [p296] | CMP SUB_IMM
230: 217 223 224 224, r49 -> p298 | J JMP_IMM
231: 217 222 223 224, r6 -> p292, r44 -> p299 [p297], r49 -> p300 [p298] | CMP SUB_IMM
232: 217 223 224 224, r49 -> p300 | J JMP_IMM
233: 218 219 220 224, r1 -> p259, r1 -> p301 [p259], r49 -> p302 [p300] | ADD ADD_IMM
234: 218 219 220 224, r0 -> p261, r0 -> p303 [p261] | INC ADD_IMM
235: 218 220 221 224, r0 -> p303, r44 -> p304 [p299], r49 -> p305 [p302] | CMP SUB_IMM
236: 218 221 222 225, r49 -> p305 | J JMP_IMM
237: 227 228 232 232, r1 -> p301, r44 -> p306 [p304] | MOVSX LOAD
238: 227 232 233 233, r44 -> p306, r2 -> p307 [p275] | MOVSX SEXT_DWORD_TO_QWORD
239: 227 233 234 234, r7 -> p7, r2 -> p307, r6 -> p308 [p292] | LEA LEA
240: 227 234 235 235, r6 -> p308, r6 -> p309 [p308] | MOVSX SEXT_DWORD_TO_QWORD
241: 227 235 239 239, r6 -> p309, r6 -> p310 [p309] | MOV LOAD
242: 227 239 240 240, r6 -> p310, r44 -> p311 [p306], r49 -> p312 [p305] | CMP SUB_IMM
243: 227 240 241 241, r49 -> p312 | J JMP_IMM
244: 227 233 234 241, r2 -> p307, r8 -> p313 [p293] | MOV ADD
245: 228 234 235 241, r8 -> p313, r7 -> p7, r8 -> p314 [p313] | LEA LEA
246: 228 235 236 241, r8 -> p314, r8 -> p315 [p314] | MOVSX SEXT_DWORD_TO_QWORD
247: 228 236 237 241, r8 -> p315, r8 -> p316 [p315] | LEA LEA
248: 228 233 234 241, r2 -> p307, r2 -> p317 [p307], r49 -> p318 [p312] | SHL SHL_IMM
249: 228 229 230 241 | JMP JMP_IMM
250: 228 239 240 241, r6 -> p310, r44 -> p319 [p311], r49 -> p320 [p318] | CMP SUB_IMM
251: 228 240 241 242, r49 -> p320 | J JMP_IMM
252: 228 239 240 242, r6 -> p310, r44 -> p321 [p319], r49 -> p322 [p320] | CMP SUB_IMM
253: 229 240 241 242, r49 -> p322 | J JMP_IMM
254: 229 239 240 242, r6 -> p310, r44 -> p323 [p321], r49 -> p324 [p322] | CMP SUB_IMM
255: 229 240 241 242, r49 -> p324 | J JMP_IMM
256: 246 247 251 251, r8 -> p316, r6 -> p325 [p310] | MOV LOAD
257: 246 247 248 251, r8 -> p316, r2 -> p317, r8 -> p326 [p316], r49 -> p327 [p324] | ADD ADD
258: 246 251 252 252, r6 -> p325, r44 -> p328 [p323], r49 -> p329 [p327] | CMP SUB_IMM
259: 246 252 253 253, r49 -> p329 | J JMP_IMM
260: 246 251 252 253, r6 -> p325, r44 -> p330 [p328], r49 -> p331 [p329] | CMP SUB_IMM
261: 246 252 253 253, r49 -> p331 | J JMP_IMM
262: 246 251 252 253, r6 -> p325, r44 -> p332 [p330], r49 -> p333 [p331] | CMP SUB_IMM
263: 246 252 253 253, r49 -> p333 | J JMP_IMM
264: 258 259 263 263, r8 -> p326, r6 -> p334 [p325] | MOV LOAD
265: 258 259 260 263, r8 -> p326, r2 -> p317, r8 -> p335 [p326], r49 -> p336 [p333] | ADD ADD
266: 258 263 264 264, r6 -> p334, r44 -> p337 [p332], r49 -> p338 [p336] | CMP SUB_IMM
267: 258 264 265 265, r49 -> p338 | J JMP_IMM
268: 258 263 264 265, r6 -> p334, r44 -> p339 [p337], r49 -> p340 [p338] | CMP SUB_IMM
269: 258 264 265 265, r49 -> p340 | J JMP_IMM
270: 258 263 264 265, r6 -> p334, r44 -> p341 [p339], r49 -> p342 [p340] | CMP SUB_IMM
271: 258 264 265 265, r49 -> p342 | J JMP_IMM
272: 259 260 261 265, r1 -> p301, r1 -> p343 [p301], r49 -> p344 [p342] | ADD ADD_IMM
273: 259 260 261 265, r0 -> p303, r0 -> p345 [p303] | INC ADD_IMM
274: 259 261 262 265, r0 -> p345, r44 -> p346 [p341], r49 -> p347 [p344] | CMP SUB_IMM
275: 259 262 263 266, r49 -> p347 | J JMP_IMM
276: 268 269 273 273, r1 -> p343, r44 -> p348 [p346] | MOVSX LOAD
277: 268 273 274 274, r44 -> p348, r2 -> p349 [p317] | MOVSX SEXT_DWORD_TO_QWORD
278: 268 274 275 275, r7 -> p7, r2 -> p349, r6 -> p350 [p334] | LEA LEA
279: 268 275 276 276, r6 -> p350, r6 -> p351 [p350] | MOVSX SEXT_DWORD_TO_QWORD
280: 268 276 280 280, r6 -> p351, r6 -> p352 [p351] | MOV LOAD
281: 268 280 281 281, r6 -> p352, r44 -> p353 [p348], r49 -> p354 [p347] | CMP SUB_IMM
282: 268 281 282 282, r49 -> p354 | J JMP_IMM
283: 268 274 275 282, r2 -> p349, r8 -> p355 [p335] | MOV ADD
284: 269 275 276 282, r8 -> p355, r7 -> p7, r8 -> p356 [p355] | LEA LEA
285: 269 276 277 282, r8 -> p356, r8 -> p357 [p356] | MOVSX SEXT_DWORD_TO_QWORD
286: 269 277 278 282, r8 -> p357, r8 -> p358 [p357] | LEA LEA
287: 269 274 275 282, r2 -> p349, r2 -> p359 [p349], r49 -> p360 [p354] | SHL SHL_IMM
288: 269 270 271 282 | JMP JMP_IMM
289: 269 280 281 282, r6 -> p352, r44 -> p361 [p353], r49 -> p362 [p360] | CMP SUB_IMM
290: 269 281 282 283, r49 -> p362 | J JMP_IMM
291: 269 280 281 283, r6 -> p352, r44 -> p363 [p361], r49 -> p364 [p362] | CMP SUB_IMM
292: 270 281 282 283, r49 -> p364 | J JMP_IMM
293: 270 280 281 283, r6 -> p352, r44 -> p365 [p363], r49 -> p366 [p364] | CMP SUB_IMM
294: 270 281 282 283, r49 -> p366 | J JMP_IMM
295: 287 288 292 292, r8 -> p358, r6 -> p367 [p352] | MOV LOAD
296: 287 288 289 292, r8 -> p358, r2 -> p359, r8 -> p368 [p358], r49 -> p369 [p366] | ADD ADD
297: 287 292 293 293, r6 -> p367, r44 -> p370 [p365], r49 -> p371 [p369] | CMP SUB_IMM
298: 287 293 294 294, r49 -> p371 | J JMP_IMM
299: 287 292 293 294, r6 -> p367, r44 -> p372 [p370], r49 -> p373 [p371] | CMP SUB_IMM
300: 287 293 294 294, r49 -> p373 | J JMP_IMM
301: 287 292 293 294, r6 -> p367, r44 -> p374 [p372], r49 -> p375 [p373] | CMP SUB_IMM
302: 287 293 294 294, r49 -> p375 | J JMP_IMM
303: 299 300 304 304, r8 -> p368, r6 -> p376 [p367] | MOV LOAD
304: 299 300 301 304, r8 -> p368, r2 -> p359, r8 -> p377 [p368], r49 -> p378 [p375] | ADD ADD
305: 299 304 305 305, r6 -> p376, r44 -> p379 [p374], r49 -> p380 [p378] | CMP SUB_IMM
306: 299 305 306 306, r49 -> p380 | J JMP_IMM
307: 299 304 305 306, r6 -> p376, r44 -> p381 [p379], r49 -> p382 [p380] | CMP SUB_IMM
308: 299 305 306 306, r49 -> p382 | J JMP_IMM
309: 299 304 305 306, r6 -> p376, r44 -> p383 [p381], r49 -> p384 [p382] | CMP SUB_IMM
310: 299 305 306 306, r49 -> p384 | J JMP_IMM
311: 311 312 316 316, r8 -> p377, r6 -> p385 [p376] | MOV LOAD
312: 311 312 313 316, r8 -> p377, r2 -> p359, r8 -> p386 [p377], r49 -> p387 [p384] | ADD ADD
313: 311 316 317 317, r6 -> p385, r44 -> p388 [p383], r49 -> p389 [p387] | CMP SUB_IMM
314: 311 317 318 318, r49 -> p389 | J JMP_IMM
315: 311 316 317 318, r6 -> p385, r44 -> p390 [p388], r49 -> p391 [p389] | CMP SUB_IMM
316: 311 317 318 318, r49 -> p391 | J JMP_IMM
317: 311 316 317 318, r6 -> p385, r44 -> p392 [p390], r49 -> p393 [p391] | CMP SUB_IMM
318: 311 317 318 318, r49 -> p393 | J JMP_IMM
319: 312 313 314 318, r1 -> p343, r1 -> p394 [p343], r49 -> p395 [p393] | ADD ADD_IMM
320: 312 313 314 318, r0 -> p345, r0 -> p396 [p345] | INC ADD_IMM
321: 312 314 315 318, r0 -> p396, r44 -> p397 [p392], r49 -> p398 [p395] | CMP SUB_IMM
322: 312 315 316 319, r49 -> p398 | J JMP_IMM
323: 312 313 314 319, r0 -> p399 [p396] | XOR ADD
324: 312 313 317 319, r4 -> p4, r44 -> p400 [p397] | RET LOAD
325: 312 313 314 319, r4 -> p4, r4 -> p401 [p4] | RET ADD_IMM
326: 312 317 318 319, r44 -> p400 | RET JMP_REG
327: 313 314 315 319, r0 -> p399, r0 -> p399, r44 -> p402 [p400], r49 -> p403 [p398] | TEST AND
328: 313 314 315 319, r0 -> p404 [p399] | SET ADD
329: 313 315 316 319, r49 -> p403, r0 -> p405 [p404] | SET ADD_IMM
330: 313 316 317 320, r0 -> p405, r0 -> p406 [p405] | MOVZX ZEXT_BYTE_TO_DWORD
331: 313 314 315 320, r4 -> p401, r4 -> p407 [p401], r49 -> p408 [p403] | ADD ADD_IMM
332: 313 315 319 320, r4 -> p407, r44 -> p409 [p402] | RET LOAD
333: 313 315 316 320, r4 -> p407, r4 -> p410 [p407] | RET ADD_IMM
334: 313 319 320 320, r44 -> p409 | RET JMP_REG
335: 314 317 318 320, r0 -> p406, r0 -> p406, r44 -> p411 [p409], r49 -> p412 [p408] | TEST AND
336: 314 318 319 320, r49 -> p412 | J JMP_IMM
337: 314 316 317 320, r4 -> p410, r0 -> p413 [p406] | LEA LEA
338: 314 317 318 321, r0 -> p413, r7 -> p414 [p7] | MOV ADD
339: 314 315 316 321, r13 -> p13, r6 -> p415 [p385] | MOV ADD
340: 314 315 316 321, r44 -> p416 [p411] | CALL SAVE_PC
341: 314 316 317 321, r4 -> p410, r4 -> p417 [p410] | CALL SUB_IMM
342: 314 317 318 321, r44 -> p416, r4 -> p417 | CALL STORE
343: 315 316 317 321 | CALL JMP_IMM
344: 315 317 318 321, r4 -> p417, r4 -> p418 [p417], r49 -> p419 [p412] | SUB SUB_IMM
345: 315 316 317 321, r45 -> p420 [p228] | CMP SAVE_PC
346: 315 318 322 322, r45 -> p420, r45 -> p421 [p420] | CMP LOAD
347: 315 322 323 323, r45 -> p421, r44 -> p422 [p416], r49 -> p423 [p419] | CMP SUB_IMM
348: 315 323 324 324, r49 -> p423 | J JMP_IMM
349: 329 330 331 331, r6 -> p415, r0 -> p424 [p413] | MOVSX SEXT_DWORD_TO_QWORD
350: 329 331 332 332, r0 -> p424, r0 -> p424, r1 -> p425 [p394] | LEA LEA
351: 329 332 336 336, r1 -> p425, r7 -> p414, r44 -> p426 [p422] | MOVSX LOAD
352: 329 336 337 337, r44 -> p426, r2 -> p427 [p359] | MOVSX SEXT_DWORD_TO_QWORD
353: 329 332 336 337, r1 -> p425, r7 -> p414, r44 -> p428 [p426] | MOVSX LOAD
354: 329 336 337 337, r44 -> p428, r1 -> p429 [p425] | MOVSX SEXT_DWORD_TO_QWORD
355: 329 337 341 341, r1 -> p429, r6 -> p430 [p415] | MOV LOAD
356: 329 330 331 341, r45 -> p431 [p421] | CMP SAVE_PC
357: 330 331 335 341, r45 -> p431, r45 -> p432 [p431] | CMP LOAD
358: 330 335 336 341, r45 -> p432, r44 -> p433 [p428], r49 -> p434 [p423] | CMP SUB_IMM
359: 330 336 337 341, r49 -> p434 | J JMP_IMM
360: 330 341 342 342, r6 -> p430, r6 -> p435 [p430], r49 -> p436 [p434] | ADD ADD_IMM
361: 330 342 343 343, r6 -> p435, r44 -> p437 [p433], r49 -> p438 [p436] | CMP SUB_IMM
362: 330 343 344 344, r49 -> p438 | J JMP_IMM
363: 330 342 346 346, r6 -> p435, r44 -> p439 [p437] | JMP LOAD
364: 330 346 347 347, r44 -> p439 | JMP JMP_REG
365: 331 337 338 347, r1 -> p429, r6 -> p440 [p435] | LEA LEA
366: 331 338 339 347, r6 -> p440, r0 -> p441 [p424] | MOVSX SEXT_DWORD_TO_QWORD
367: 331 339 343 347, r0 -> p441, r45 -> p442 [p432] | CMP LOAD
368: 331 343 344 347, r45 -> p442, r44 -> p443 [p439], r49 -> p444 [p438] | CMP SUB_IMM
369: 331 344 345 347, r49 -> p444 | J JMP_IMM
370: 350 351 352 352, r1 -> p429, r1 -> p445 [p429], r49 -> p446 [p444] | ADD ADD_IMM
371: 350 352 353 353, r1 -> p445, r0 -> p447 [p441] | MOVSX SEXT_DWORD_TO_QWORD
372: 350 353 357 357, r0 -> p447, r45 -> p448 [p442] | CMP LOAD
373: 350 357 358 358, r45 -> p448, r44 -> p449 [p443], r49 -> p450 [p446] | CMP SUB_IMM
374: 350 358 359 359, r49 -> p450 | J JMP_IMM
375: 350 351 352 359, r2 -> p427, r2 -> p427, r44 -> p451 [p449], r49 -> p452 [p450] | TEST AND
376: 350 352 353 359, r49 -> p452 | J JMP_IMM
377: 350 351 352 359, r44 -> p453 [p451] | MOVSX SAVE_PC
378: 351 352 356 359, r44 -> p453, r44 -> p454 [p453] | MOVSX LOAD
379: 351 356 357 359, r44 -> p454, r0 -> p455 [p447] | MOVSX SEXT_DWORD_TO_QWORD
380: 351 357 361 361, r0 -> p455, r6 -> p456 [p440] | MOV LOAD
381: 351 352 356 361, r2 -> p427, r45 -> p457 [p448] | CMP LOAD
382: 351 361 362 362, r45 -> p457, r6 -> p456, r44 -> p458 [p454], r49 -> p459 [p452] | CMP SUB
383: 351 362 363 363, r49 -> p459 | J JMP_IMM
384: 368 369 373 373, r0 -> p455, r6 -> p460 [p456] | MOV LOAD
385: 368 369 373 373, r2 -> p427, r45 -> p461 [p457] | CMP LOAD
386: 368 373 374 374, r45 -> p461, r6 -> p460, r44 -> p462 [p458], r49 -> p463 [p459] | CMP SUB
387: 368 374 375 375, r49 -> p463 | J JMP_IMM
388: 380 381 385 385, r0 -> p455, r6 -> p464 [p460] | MOV LOAD
389: 380 381 385 385, r2 -> p427, r45 -> p465 [p461] | CMP LOAD
390: 380 385 386 386, r45 -> p465, r6 -> p464, r44 -> p466 [p462], r49 -> p467 [p463] | CMP SUB
391: 380 386 387 387, r49 -> p467 | J JMP_IMM
392: 392 393 397 397, r0 -> p455, r6 -> p468 [p464] | MOV LOAD
393: 392 393 397 397, r2 -> p427, r45 -> p469 [p465] | CMP LOAD
394: 392 397 398 398, r45 -> p469, r6 -> p468, r44 -> p470 [p466], r49 -> p471 [p467] | CMP SUB
395: 392 398 399 399, r49 -> p471 | J JMP_IMM
396: 404 405 406 406, r0 -> p472 [p455] | XOR ADD
397: 404 405 406 406, r4 -> p418, r4 -> p473 [p418], r49 -> p474 [p471] | ADD ADD_IMM
398: 404 406 410 410, r4 -> p473, r44 -> p475 [p470] | RET LOAD
399: 404 406 407 410, r4 -> p473, r4 -> p476 [p473] | RET ADD_IMM
400: 404 410 411 411, r44 -> p475 | RET JMP_REG
401: 404 405 406 411, r5 -> p5, r44 -> p477 [p475] | MOV LEA
402: 404 406 407 411, r0 -> p472, r44 -> p477 | MOV STORE
403: 404 406 407 411, r0 -> p472, r0 -> p472, r44 -> p478 [p477], r49 -> p479 [p474] | TEST AND
404: 405 407 408 411, r49 -> p479 | J JMP_IMM
405: 413 414 415 415, r44 -> p480 [p478] | MOV SAVE_PC
406: 413 415 419 419, r44 -> p480, r14 -> p481 [p14] | MOV LOAD
407: 413 419 420 420, r14 -> p481, r14 -> p482 [p481], r49 -> p483 [p479] | ADD ADD_IMM
408: 413 420 421 421, r14 -> p482, r44 -> p484 [p480], r49 -> p485 [p483] | CMP SUB_IMM
409: 413 421 422 422, r49 -> p485 | J JMP_IMM
410: 413 414 418 422, r4 -> p476, r45 -> p486 [p469] | CMP LOAD
411: 413 418 419 422, r45 -> p486, r44 -> p487 [p484], r49 -> p488 [p485] | CMP SUB_IMM
412: 413 419 420 422, r49 -> p488 | J JMP_IMM
413: 414 415 416 422, r13 -> p13, r1 -> p489 [p445] | MOVSX SEXT_DWORD_TO_QWORD
414: 414 416 417 422, r1 -> p489, r1 -> p489, r1 -> p490 [p489] | LEA LEA
415: 414 417 421 422, r1 -> p490, r4 -> p476, r44 -> p491 [p487] | MOVSX LOAD
416: 414 421 422 422, r44 -> p491, r1 -> p492 [p490] | MOVSX SEXT_DWORD_TO_QWORD
417: 414 422 426 426, r1 -> p492, r14 -> p493 [p482] | MOV LOAD
418: 414 426 427 427, r14 -> p493, r44 -> p494 [p491], r49 -> p495 [p488] | CMP SUB_IMM
419: 414 427 428 428, r49 -> p495 | J JMP_IMM
420: 414 426 427 428, r14 -> p493, r44 -> p496 [p494], r49 -> p497 [p495] | CMP SUB_IMM
421: 415 427 428 428, r49 -> p497 | J JMP_IMM
422: 415 422 426 428, r1 -> p492, r1 -> p498 [p492] | MOV LOAD
423: 415 416 417 428 | JMP JMP_IMM
424: 415 426 427 428, r1 -> p498, r44 -> p499 [p496], r49 -> p500 [p497] | CMP SUB_IMM
425: 415 427 428 428, r49 -> p500 | J JMP_IMM
426: 433 434 435 435, r14 -> p501 [p493] | XOR ADD
427: 433 434 435 435 | JMP JMP_IMM
428: 433 434 435 435, r13 -> p13, r1 -> p502 [p498] | MOVSX SEXT_DWORD_TO_QWORD
429: 433 435 436 436, r1 -> p502, r1 -> p502, r2 -> p503 [p427] | LEA LEA
430: 433 436 440 440, r2 -> p503, r4 -> p476, r45 -> p504 [p486] | CMP LOAD
431: 433 440 441 441, r45 -> p504, r44 -> p505 [p499], r49 -> p506 [p500] | CMP SUB
432: 433 441 442 442, r49 -> p506 | J JMP_IMM
433: 447 448 449 449, r0 -> p472, r0 -> p472, r44 -> p507 [p505], r49 -> p508 [p506] | TEST AND
434: 447 448 449 449, r0 -> p509 [p472] | SET ADD
435: 447 449 450 450, r49 -> p508, r0 -> p510 [p509] | SET ADD_IMM
436: 447 448 452 452, r4 -> p476, r45 -> p511 [p504] | CMP LOAD
437: 447 452 453 453, r45 -> p511, r44 -> p512 [p507], r49 -> p513 [p508] | CMP SUB
438: 447 453 454 454, r49 -> p513 | J JMP_IMM
439: 459 460 464 464, r4 -> p476, r2 -> p514 [p503] | MOV LOAD
440: 459 464 465 465, r14 -> p501, r2 -> p514, r5 -> p515 [p5] | LEA LEA
441: 459 460 464 465, r4 -> p476, r45 -> p516 [p511] | TEST LOAD
442: 459 464 465 465, r45 -> p516, r44 -> p517 [p512], r49 -> p518 [p513] | TEST AND_IMM
443: 459 465 466 466, r49 -> p518 | J JMP_IMM
444: 459 460 461 466, r14 -> p519 [p501] | XOR ADD
445: 459 460 464 466, r4 -> p476, r7 -> p520 [p414] | MOV LOAD
446: 459 460 461 466, r12 -> p12, r6 -> p521 [p468] | MOV ADD
447: 460 465 466 466, r5 -> p515, r2 -> p522 [p514] | MOV ADD
448: 460 461 462 466, r1 -> p523 [p502] | XOR ADD
449: 460 461 462 466, r44 -> p524 [p517] | CALL SAVE_PC
450: 460 461 462 466, r4 -> p476, r4 -> p525 [p476] | CALL SUB_IMM
451: 460 462 463 467, r44 -> p524, r4 -> p525 | CALL STORE
452: 460 461 462 467 | CALL JMP_IMM
453: 460 465 466 467, r5 -> p515, r4 -> p525 | PUSH STORE
454: 460 462 463 467, r4 -> p525, r4 -> p526 [p525] | PUSH SUB_IMM
455: 461 463 464 467, r15 -> p15, r4 -> p526 | PUSH STORE
456: 461 463 464 467, r4 -> p526, r4 -> p527 [p526] | PUSH SUB_IMM
457: 461 464 465 467, r14 -> p519, r4 -> p527 | PUSH STORE
458: 461 464 465 467, r4 -> p527, r4 -> p528 [p527] | PUSH SUB_IMM
459: 461 465 466 468, r13 -> p13, r4 -> p528 | PUSH STORE
460: 461 465 466 468, r4 -> p528, r4 -> p529 [p528] | PUSH SUB_IMM
461: 461 466 467 468, r12 -> p12, r4 -> p529 | PUSH STORE
462: 461 466 467 468, r4 -> p529, r4 -> p530 [p529] | PUSH SUB_IMM
463: 462 467 468 468, r3 -> p3, r4 -> p530 | PUSH STORE
464: 462 467 468 468, r4 -> p530, r4 -> p531 [p530] | PUSH SUB_IMM
465: 462 468 469 469, r4 -> p531, r4 -> p532 [p531], r49 -> p533 [p518] | SUB SUB_IMM
466: 462 463 464 469, r44 -> p534 [p524] | MOV SAVE_PC
467: 462 464 468 469, r44 -> p534, r0 -> p535 [p510] | MOV LOAD
468: 462 468 469 469, r0 -> p535, r0 -> p536 [p535] | INC ADD_IMM
469: 462 463 464 469, r44 -> p537 [p534] | MOV SAVE_PC
470: 462 469 470 470, r0 -> p536, r44 -> p537 | MOV STORE
471: 463 469 470 470, r0 -> p536, r44 -> p538 [p537], r49 -> p539 [p533] | TEST AND_IMM
472: 463 469 470 470, r1 -> p523, r4 -> p532 | MOV STORE
473: 463 469 470 470, r2 -> p522, r4 -> p532 | MOV STORE
474: 463 469 470 470, r6 -> p521, r4 -> p532 | MOV STORE
475: 463 469 470 470, r7 -> p520, r4 -> p532 | MOV STORE
476: 463 470 471 471, r49 -> p539 | J JMP_IMM
477: 476 477 478 478, r4 -> p532 | MOV STORE
478: 476 477 478 478, r44 -> p540 [p538] | MOVSX SAVE_PC
479: 476 478 482 482, r44 -> p540, r44 -> p541 [p540] | MOVSX LOAD
480: 476 482 483 483, r44 -> p541, r3 -> p542 [p3] | MOVSX SEXT_DWORD_TO_QWORD
481: 476 483 484 484, r3 -> p542, r44 -> p543 [p541] | MOV LEA
482: 476 484 485 485, r3 -> p542, r44 -> p543 | MOV STORE
483: 476 477 478 485, r44 -> p544 [p543] | CALL SAVE_PC
484: 476 477 478 485, r4 -> p532, r4 -> p545 [p532] | CALL SUB_IMM
485: 477 478 479 485, r44 -> p544, r4 -> p545 | CALL STORE
486: 477 478 479 485 | CALL JMP_IMM
487: 477 478 479 485, r44 -> p546 [p544] | MOV SAVE_PC
488: 477 479 483 485, r44 -> p546, r0 -> p547 [p536] | MOV LOAD
489: 477 483 484 485, r0 -> p547, r44 -> p548 [p546], r49 -> p549 [p539] | CMP SUB_IMM
490: 477 484 485 486, r49 -> p549 | J JMP_IMM
491: 490 491 492 492, r0 -> p547, r44 -> p550 [p548], r49 -> p551 [p549] | CMP SUB_IMM
492: 490 492 493 493, r49 -> p551 | J JMP_IMM
493: 490 491 492 493, r0 -> p552 [p547] | XOR ADD
494: 490 491 495 495, r4 -> p545, r44 -> p553 [p550] | RET LOAD
495: 490 491 492 495, r4 -> p545, r4 -> p554 [p545] | RET ADD_IMM
496: 490 495 496 496, r44 -> p553 | RET JMP_REG
497: 490 492 493 496, r0 -> p552, r0 -> p552, r44 -> p555 [p553], r49 -> p556 [p551] | TEST AND
498: 490 493 494 496, r49 -> p556 | J JMP_IMM
499: 499 500 504 504, r3 -> p542, r0 -> p557 [p552] | MOV LOAD
500: 499 504 505 505, r0 -> p557, r4 -> p554 | MOV STORE
501: 499 500 501 505, r3 -> p542, r44 -> p558 [p555] | MOV LEA
502: 499 501 502 505, r44 -> p558 | MOV STORE
503: 499 500 501 505, r3 -> p542, r44 -> p559 [p558], r49 -> p560 [p556] | CMP SUB_IMM
504: 499 501 502 505, r49 -> p560 | J JMP_IMM
505: 499 504 505 505, r0 -> p557, r0 -> p557, r44 -> p561 [p559], r49 -> p562 [p560] | TEST AND
506: 499 505 506 506, r49 -> p562 | J JMP_IMM
507: 500 501 502 506, r4 -> p554 | MOV STORE
508: 500 501 502 506 | JMP JMP_IMM
509: 500 501 505 506, r4 -> p554, r45 -> p563 [p516] | CMP LOAD
510: 500 505 506 506, r45 -> p563, r44 -> p564 [p561], r49 -> p565 [p562] | CMP SUB
511: 500 506 507 507, r49 -> p565 | J JMP_IMM
512: 512 513 514 514, r44 -> p566 [p564] | MOV SAVE_PC
513: 512 514 518 518, r44 -> p566, r0 -> p567 [p557] | MOV LOAD
514: 512 518 519 519, r0 -> p567, r44 -> p568 [p566], r49 -> p569 [p565] | CMP SUB_IMM
515: 512 519 520 520, r49 -> p569 | J JMP_IMM
516: 512 518 519 520, r0 -> p567, r44 -> p570 [p568], r49 -> p571 [p569] | CMP SUB_IMM
517: 512 519 520 520, r49 -> p571 | J JMP_IMM
518: 512 513 514 520, r2 -> p572 [p522] | MOV ADD_IMM
519: 512 514 515 520, r2 -> p572, r3 -> p542, r2 -> p573 [p572], r49 -> p574 [p571] | SUB SUB
520: 513 514 515 520, r44 -> p575 [p570] | MOV ADD_IMM
521: 513 514 515 520, r45 -> p576 [p563] | MOV SAVE_PC
522: 513 515 516 520, r44 -> p575, r45 -> p576 | MOV STORE
523: 513 514 518 521, r4 -> p554, r7 -> p577 [p520] | MOV LOAD
524: 513 514 518 521, r4 -> p554, r6 -> p578 [p521] | MOV LOAD
525: 513 514 515 521, r44 -> p579 [p575] | CALL SAVE_PC
526: 513 514 515 521, r4 -> p554, r4 -> p580 [p554] | CALL SUB_IMM
527: 513 515 516 521, r44 -> p579, r4 -> p580 | CALL STORE
528: 514 515 516 521 | CALL JMP_IMM
529: 514 515 516 521, r5 -> p515, r4 -> p580 | PUSH STORE
530: 514 515 516 521, r4 -> p580, r4 -> p581 [p580] | PUSH SUB_IMM
531: 514 516 517 522, r15 -> p15, r4 -> p581 | PUSH STORE
532: 514 516 517 522, r4 -> p581, r4 -> p582 [p581] | PUSH SUB_IMM
533: 514 517 518 522, r14 -> p519, r4 -> p582 | PUSH STORE
534: 514 517 518 522, r4 -> p582, r4 -> p583 [p582] | PUSH SUB_IMM
535: 514 518 519 522, r13 -> p13, r4 -> p583 | PUSH STORE
536: 515 518 519 522, r4 -> p583, r4 -> p584 [p583] | PUSH SUB_IMM
537: 515 519 520 522, r12 -> p12, r4 -> p584 | PUSH STORE
538: 515 519 520 522, r4 -> p584, r4 -> p585 [p584] | PUSH SUB_IMM
539: 515 520 521 523, r3 -> p542, r4 -> p585 | PUSH STORE
540: 515 520 521 523, r4 -> p585, r4 -> p586 [p585] | PUSH SUB_IMM
541: 515 521 522 523, r4 -> p586, r4 -> p587 [p586], r49 -> p588 [p574] | SUB SUB_IMM
542: 515 516 517 523, r44 -> p589 [p579] | MOVSX SAVE_PC
543: 515 517 521 523, r44 -> p589, r44 -> p590 [p589] | MOVSX LOAD
544: 516 521 522 523, r44 -> p590, r0 -> p591 [p567] | MOVSX SEXT_DWORD_TO_QWORD
545: 516 522 523 523, r0 -> p591, r44 -> p592 [p590] | MOV LEA
546: 516 523 524 524, r0 -> p591, r44 -> p592 | MOV STORE
547: 516 517 518 524, r44 -> p593 [p592] | MOVZX SAVE_PC
548: 516 518 522 524, r44 -> p593, r44 -> p594 [p593] | MOVZX LOAD
549: 516 522 523 524, r44 -> p594, r0 -> p595 [p591] | MOVZX ZEXT_WORD_TO_DWORD
550: 516 523 524 524, r0 -> p595, r0 -> p595, r44 -> p596 [p594], r49 -> p597 [p588] | TEST AND
551: 516 522 523 524, r2 -> p573, r4 -> p587 | MOV STORE
552: 517 522 523 524, r6 -> p578, r4 -> p587 | MOV STORE
553: 517 522 523 524, r7 -> p577, r4 -> p587 | MOV STORE
554: 517 524 525 525, r49 -> p597 | J JMP_IMM
555: 530 531 535 535, r4 -> p587, r45 -> p598 [p576] | CMP LOAD
556: 530 535 536 536, r45 -> p598, r44 -> p599 [p596], r49 -> p600 [p597] | CMP SUB
557: 530 536 537 537, r49 -> p600 | J JMP_IMM
558: 530 531 532 537, r45 -> p601 [p598] | CMP SAVE_PC
559: 530 532 536 537, r45 -> p601, r45 -> p602 [p601] | CMP LOAD
560: 530 536 537 537, r45 -> p602, r44 -> p603 [p599], r49 -> p604 [p600] | CMP SUB_IMM
561: 530 537 538 538, r49 -> p604 | J JMP_IMM
562: 543 544 545 545, r44 -> p605 [p603] | INC SAVE_PC
563: 543 545 549 549, r44 -> p605, r44 -> p606 [p605] | INC LOAD
564: 543 549 550 550, r44 -> p606, r44 -> p607 [p606] | INC ADD_IMM
565: 543 544 545 550, r45 -> p608 [p602] | INC SAVE_PC
566: 543 550 551 551, r44 -> p607, r45 -> p608 | INC STORE
567: 543 544 545 551, r44 -> p609 [p607] | INC SAVE_PC
568: 543 545 549 551, r44 -> p609, r44 -> p610 [p609] | INC LOAD
569: 543 549 550 551, r44 -> p610, r44 -> p611 [p610] | INC ADD_IMM
570: 544 545 546 551, r45 -> p612 [p608] | INC SAVE_PC
571: 544 550 551 551, r44 -> p611, r45 -> p612 | INC STORE
572: 544 545 546 551, r44 -> p613 [p611] | INC SAVE_PC
573: 544 546 550 551, r44 -> p613, r44 -> p614 [p613] | INC LOAD
574: 544 550 551 552, r44 -> p614, r44 -> p615 [p614] | INC ADD_IMM
575: 544 545 546 552, r45 -> p616 [p612] | INC SAVE_PC
576: 544 551 552 552, r44 -> p615, r45 -> p616 | INC STORE
577: 544 545 546 552, r1 -> p617 [p523] | MOV ADD_IMM
578: 545 546 547 552, r44 -> p618 [p615] | MOV SAVE_PC
579: 545 547 551 552, r44 -> p618, r6 -> p619 [p578] | MOV LOAD
580: 545 551 552 552, r6 -> p619, r0 -> p620 [p595] | MOV ADD
581: 545 552 553 553, r0 -> p620, r1 -> p617, r44 -> p621 [p618], r49 -> p622 [p604] | MUL MUL
582: 545 553 554 554, r44 -> p621, r0 -> p623 [p620] | MUL ADD
583: 545 553 554 554, r44 -> p621, r2 -> p624 [p573] | MUL UPPER_HALF
584: 545 554 555 555, r2 -> p624, r2 -> p625 [p624], r49 -> p626 [p622] | SHR SHR_IMM
585: 545 555 556 556, r2 -> p625, r0 -> p627 [p623], r49 -> p628 [p626] | IMUL IMUL_T_IMM
586: 546 551 552 556, r6 -> p619, r1 -> p629 [p617] | MOV ADD
587: 546 556 557 557, r1 -> p629, r0 -> p627, r1 -> p630 [p629], r49 -> p631 [p628] | SUB SUB
588: 546 557 558 558, r1 -> p630, r0 -> p632 [p627] | MOV ADD
589: 546 558 559 559, r0 -> p632, r0 -> p633 [p632], r49 -> p634 [p631] | SHL SHL_IMM
590: 546 547 548 559, r44 -> p635 [p621] | MOV SAVE_PC
591: 546 548 552 559, r44 -> p635, r2 -> p636 [p625] | MOV LOAD
592: 546 559 563 563, r0 -> p633, r2 -> p636, r45 -> p637 [p616] | CMP LOAD
593: 546 563 564 564, r45 -> p637, r6 -> p619, r44 -> p638 [p635], r49 -> p639 [p634] | CMP SUB
594: 547 564 565 565, r49 -> p639 | J JMP_IMM
595: 570 571 572 572, r44 -> p640 [p638] | MOV ADD_IMM
596: 570 572 573 573, r44 -> p640, r4 -> p587 | MOV STORE
597: 570 571 575 575, r4 -> p587, r7 -> p641 [p577] | MOV LOAD
598: 570 571 575 575, r4 -> p587, r3 -> p642 [p542] | MOV LOAD
599: 570 575 576 576, r3 -> p642, r6 -> p643 [p619] | MOV ADD
600: 570 571 572 576, r44 -> p644 [p640] | CALL SAVE_PC
601: 570 571 572 576, r4 -> p587, r4 -> p645 [p587] | CALL SUB_IMM
602: 570 572 573 576, r44 -> p644, r4 -> p645 | CALL STORE
603: 571 572 573 576 | CALL JMP_IMM
604: 571 572 573 576, r5 -> p515, r4 -> p645 | PUSH STORE
605: 571 572 573 576, r4 -> p645, r4 -> p646 [p645] | PUSH SUB_IMM
606: 571 573 574 576, r15 -> p15, r4 -> p646 | PUSH STORE
607: 571 573 574 577, r4 -> p646, r4 -> p647 [p646] | PUSH SUB_IMM
608: 571 574 575 577, r14 -> p519, r4 -> p647 | PUSH STORE
609: 571 574 575 577, r4 -> p647, r4 -> p648 [p647] | PUSH SUB_IMM
610: 571 575 576 577, r13 -> p13, r4 -> p648 | PUSH STORE
611: 572 575 576 577, r4 -> p648, r4 -> p649 [p648] | PUSH SUB_IMM
612: 572 576 577 577, r12 -> p12, r4 -> p649 | PUSH STORE
613: 572 576 577 577, r4 -> p649, r4 -> p650 [p649] | PUSH SUB_IMM
614: 572 577 578 578, r3 -> p642, r4 -> p650 | PUSH STORE
615: 572 577 578 578, r4 -> p650, r4 -> p651 [p650] | PUSH SUB_IMM
616: 572 578 579 579, r4 -> p651, r4 -> p652 [p651], r49 -> p653 [p639] | SUB SUB_IMM
617: 572 573 574 579, r44 -> p654 [p644] | MOV SAVE_PC
618: 572 574 578 579, r44 -> p654, r1 -> p655 [p630] | MOV LOAD
619: 573 578 579 579, r1 -> p655, r44 -> p656 [p654], r49 -> p657 [p653] | CMP SUB_IMM
620: 573 579 580 580, r49 -> p657 | J JMP_IMM
621: 573 578 579 580, r1 -> p655, r44 -> p658 [p656], r49 -> p659 [p657] | CMP SUB_IMM
622: 573 579 580 580, r49 -> p659 | J JMP_IMM
623: 573 578 579 580, r1 -> p655, r44 -> p660 [p658], r49 -> p661 [p659] | CMP SUB_IMM
624: 573 579 580 580, r49 -> p661 | J JMP_IMM
625: 573 574 575 580, r44 -> p662 [p660] | MOV SAVE_PC
626: 573 575 579 580, r44 -> p662, r1 -> p663 [p655] | MOV LOAD
627: 574 579 580 580, r1 -> p663, r2 -> p664 [p636] | MOV ADD
628: 574 580 581 581, r2 -> p664, r2 -> p665 [p664], r49 -> p666 [p661] | NEG SUB
629: 574 575 576 581, r44 -> p667 [p662] | MOV SAVE_PC
630: 574 576 580 581, r44 -> p667, r8 -> p668 [p386] | MOV LOAD
631: 574 580 581 581, r8 -> p668, r8 -> p668, r44 -> p669 [p667], r49 -> p670 [p666] | TEST AND
632: 574 581 582 582, r1 -> p663, r49 -> p670, r2 -> p671 [p665] | CMOV ADD
633: 574 575 576 582, r44 -> p672 [p669] | MOV SAVE_PC
634: 574 576 580 582, r44 -> p672, r1 -> p673 [p663] | MOV LOAD
635: 575 582 583 583, r2 -> p671, r0 -> p674 [p633] | MOV ADD
636: 575 583 584 584, r0 -> p674, r1 -> p673, r0 -> p675 [p674], r49 -> p676 [p670] | SUB SUB
637: 575 584 585 585, r0 -> p675, r6 -> p643, r44 -> p677 [p672], r49 -> p678 [p676] | CMP SUB
638: 575 585 586 586, r49 -> p678 | J JMP_IMM
639: 575 582 583 586, r2 -> p671, r1 -> p673, r2 -> p679 [p671], r49 -> p680 [p678] | ADD ADD
640: 575 583 584 586, r2 -> p679, r7 -> p641, r44 -> p681 [p677], r49 -> p682 [p680] | CMP SUB
641: 575 584 585 586, r49 -> p682 | J JMP_IMM
642: 575 583 584 586, r2 -> p679, r0 -> p683 [p675] | MOV ADD
643: 576 577 578 586 | JMP JMP_IMM
644: 576 579 580 586, r4 -> p652, r4 -> p684 [p652], r49 -> p685 [p682] | ADD ADD_IMM
645: 576 580 584 586, r4 -> p684, r3 -> p686 [p642] | POP LOAD
646: 576 580 581 587, r4 -> p684, r4 -> p687 [p684] | POP ADD_IMM
647: 576 581 585 587, r4 -> p687, r12 -> p688 [p12] | POP LOAD
648: 576 581 582 587, r4 -> p687, r4 -> p689 [p687] | POP ADD_IMM
649: 576 582 586 587, r4 -> p689, r13 -> p690 [p13] | POP LOAD
650: 576 582 583 587, r4 -> p689, r4 -> p691 [p689] | POP ADD_IMM
651: 577 583 587 587, r4 -> p691, r14 -> p692 [p519] | POP LOAD
652: 577 583 584 587, r4 -> p691, r4 -> p693 [p691] | POP ADD_IMM
653: 577 584 588 588, r4 -> p693, r15 -> p694 [p15] | POP LOAD
654: 577 584 585 588, r4 -> p693, r4 -> p695 [p693] | POP ADD_IMM
655: 577 585 589 589, r4 -> p695, r5 -> p696 [p515] | POP LOAD
656: 577 585 586 589, r4 -> p695, r4 -> p697 [p695] | POP ADD_IMM
657: 577 586 590 590, r4 -> p697, r44 -> p698 [p681] | RET LOAD
658: 577 586 587 590, r4 -> p697, r4 -> p699 [p697] | RET ADD_IMM
659: 578 590 591 591, r44 -> p698 | RET JMP_REG
660: 578 584 585 591, r0 -> p683, r3 -> p686, r44 -> p700 [p698], r49 -> p701 [p685] | CMP SUB
661: 578 584 585 591, r0 -> p683, r3 -> p702 [p686] | MOV ADD
662: 578 585 586 591, r49 -> p701 | J JMP_IMM
663: 591 592 593 593, r4 -> p699, r7 -> p703 [p641] | LEA LEA
664: 591 592 593 593, r44 -> p704 [p700] | CALL SAVE_PC
665: 591 592 593 593, r4 -> p699, r4 -> p705 [p699] | CALL SUB_IMM
666: 591 593 594 594, r44 -> p704, r4 -> p705 | CALL STORE
667: 591 592 593 594 | CALL JMP_IMM
668: 591 593 594 594, r5 -> p696, r4 -> p705 | PUSH STORE
669: 591 593 594 594, r4 -> p705, r4 -> p706 [p705] | PUSH SUB_IMM
670: 591 594 595 595, r15 -> p694, r4 -> p706 | PUSH STORE
671: 592 594 595 595, r4 -> p706, r4 -> p707 [p706] | PUSH SUB_IMM
672: 592 595 596 596, r14 -> p692, r4 -> p707 | PUSH STORE
673: 592 595 596 596, r4 -> p707, r4 -> p708 [p707] | PUSH SUB_IMM
674: 592 596 597 597, r13 -> p690, r4 -> p708 | PUSH STORE
675: 592 596 597 597, r4 -> p708, r4 -> p709 [p708] | PUSH SUB_IMM
676: 592 597 598 598, r12 -> p688, r4 -> p709 | PUSH STORE
677: 592 597 598 598, r4 -> p709, r4 -> p710 [p709] | PUSH SUB_IMM
678: 592 598 599 599, r3 -> p702, r4 -> p710 | PUSH STORE
679: 593 598 599 599, r4 -> p710, r4 -> p711 [p710] | PUSH SUB_IMM
680: 593 599 600 600, r4 -> p711, r4 -> p712 [p711], r49 -> p713 [p701] | SUB SUB_IMM
681: 593 594 595 600, r44 -> p714 [p704] | MOV SAVE_PC
682: 593 595 596 600, r44 -> p714 | MOV STORE
683: 593 594 595 600, r44 -> p715 [p714] | MOV SAVE_PC
684: 593 595 596 600, r44 -> p715 | MOV STORE
685: 593 594 595 600, r44 -> p716 [p715] | MOV SAVE_PC
686: 593 595 596 600, r7 -> p703, r44 -> p716 | MOV STORE
687: 594 595 596 600, r45 -> p717 [p637] | CMP SAVE_PC
688: 594 596 600 601, r45 -> p717, r45 -> p718 [p717] | CMP LOAD
689: 594 600 601 601, r45 -> p718, r44 -> p719 [p716], r49 -> p720 [p713] | CMP SUB_IMM
690: 594 601 602 602, r49 -> p720 | J JMP_IMM
691: 607 608 609 609, r44 -> p721 [p719] | MOV SAVE_PC
692: 607 609 613 613, r44 -> p721, r0 -> p722 [p683] | MOV LOAD
693: 607 613 614 614, r0 -> p722, r4 -> p712 | MOV STORE
694: 607 608 609 614, r44 -> p723 [p721] | MOV SAVE_PC
695: 607 609 613 614, r44 -> p723, r3 -> p724 [p702] | MOV LOAD
696: 607 608 609 614, r44 -> p725 [p723] | MOV SAVE_PC
697: 607 609 613 614, r44 -> p725, r0 -> p726 [p722] | MOV LOAD
698: 607 613 614 614, r0 -> p726, r4 -> p712 | MOV STORE
699: 608 609 610 614, r44 -> p727 [p725] | MOV SAVE_PC
700: 608 610 614 614, r44 -> p727, r0 -> p728 [p726] | MOV LOAD
701: 608 614 615 615, r0 -> p728, r4 -> p712 | MOV STORE
702: 608 609 610 615, r14 -> p729 [p692] | MOV ADD_IMM
703: 608 609 610 615 | JMP JMP_IMM
704: 608 615 619 619, r4 -> p712, r45 -> p730 [p718] | CMP LOAD
705: 608 619 620 620, r45 -> p730, r44 -> p731 [p727], r49 -> p732 [p720] | CMP SUB
706: 608 620 621 621, r49 -> p732 | J JMP_IMM
707: 609 610 611 621, r15 -> p733 [p694] | MOV ADD_IMM
708: 609 610 611 621, r12 -> p734 [p688] | MOV ADD_IMM
709: 609 610 611 621 | JMP JMP_IMM
710: 609 614 618 621, r4 -> p712, r45 -> p735 [p730] | CMP LOAD
711: 609 618 619 621, r15 -> p733, r45 -> p735, r44 -> p736 [p731], r49 -> p737 [p732] | CMP SUB
712: 609 619 620 621, r49 -> p737 | J JMP_IMM
713: 609 610 611 621, r44 -> p738 [p736] | MOV SAVE_PC
714: 609 611 615 622, r44 -> p738, r0 -> p739 [p728] | MOV LOAD
715: 610 615 616 622, r0 -> p739, r44 -> p740 [p738], r49 -> p741 [p737] | CMP SUB_IMM
716: 610 616 617 622, r49 -> p741 | J JMP_IMM
717: 610 611 612 622, r44 -> p742 [p740] | MOV SAVE_PC
718: 610 612 616 622, r44 -> p742, r1 -> p743 [p673] | MOV LOAD
719: 610 616 617 622, r1 -> p743, r44 -> p744 [p742], r49 -> p745 [p741] | CMP SUB_IMM
720: 610 617 618 622, r49 -> p745 | J JMP_IMM
721: 623 624 628 628, r12 -> p734, r44 -> p746 [p744] | MOVSX LOAD
722: 623 628 629 629, r44 -> p746, r13 -> p747 [p690] | MOVSX SEXT_DWORD_TO_QWORD
723: 623 629 630 630, r13 -> p747, r13 -> p747, r44 -> p748 [p746], r49 -> p749 [p745] | TEST AND
724: 623 630 631 631, r49 -> p749 | J JMP_IMM
725: 623 629 630 631, r13 -> p747, r5 -> p750 [p696] | MOV ADD
726: 623 624 625 631, r44 -> p751 [p748] | MOV SAVE_PC
727: 623 630 631 631, r5 -> p750, r44 -> p751 | MOV STORE
728: 623 624 625 631, r15 -> p733, r15 -> p752 [p733] | INC ADD_IMM
729: 624 629 633 633, r13 -> p747, r1 -> p753 [p743] | MOV LOAD
730: 624 633 634 634, r1 -> p753, r1 -> p754 [p753] | DEC SUB_IMM
731: 624 634 635 635, r1 -> p754, r44 -> p755 [p751], r49 -> p756 [p749] | CMP SUB_IMM
732: 624 635 636 636, r49 -> p756 | J JMP_IMM
733: 624 634 638 638, r1 -> p754, r44 -> p757 [p755] | JMP LOAD
734: 624 638 639 639, r44 -> p757 | JMP JMP_REG
735: 624 630 631 639, r5 -> p750, r7 -> p758 [p703] | LEA LEA
736: 624 631 632 639, r7 -> p758, r0 -> p759 [p739] | MOVSX SEXT_DWORD_TO_QWORD
737: 625 632 636 639, r0 -> p759, r45 -> p760 [p735] | CMP LOAD
738: 625 636 637 639, r45 -> p760, r44 -> p761 [p757], r49 -> p762 [p756] | CMP SUB
739: 625 637 638 639, r49 -> p762 | J JMP_IMM
740: 643 644 645 645, r5 -> p750, r7 -> p763 [p758] | LEA LEA
741: 643 645 646 646, r7 -> p763, r0 -> p764 [p759] | MOVSX SEXT_DWORD_TO_QWORD
742: 643 646 650 650, r0 -> p764, r45 -> p765 [p760] | CMP LOAD
743: 643 650 651 651, r45 -> p765, r44 -> p766 [p761], r49 -> p767 [p762] | CMP SUB
744: 643 651 652 652, r49 -> p767 | J JMP_IMM
745: 643 644 645 652, r44 -> p768 [p766] | CALL SAVE_PC
746: 643 644 645 652, r4 -> p712, r4 -> p769 [p712] | CALL SUB_IMM
747: 643 645 646 652, r44 -> p768, r4 -> p769 | CALL STORE
748: 644 645 646 652 | CALL JMP_IMM
749: 644 645 646 652, r14 -> p729, r4 -> p769 | PUSH STORE
750: 644 645 646 652, r4 -> p769, r4 -> p770 [p769] | PUSH SUB_IMM
751: 644 646 647 652, r3 -> p724, r4 -> p770 | PUSH STORE
752: 644 646 647 653, r4 -> p770, r4 -> p771 [p770] | PUSH SUB_IMM
753: 644 645 646 653, r7 -> p763, r0 -> p772 [p764] | MOVSX SEXT_DWORD_TO_QWORD
754: 644 646 647 653, r0 -> p772, r0 -> p772, r1 -> p773 [p754] | LEA LEA
755: 644 645 646 653, r44 -> p774 [p768] | MOVSX SAVE_PC
756: 645 646 650 653, r44 -> p774, r44 -> p775 [p774] | MOVSX LOAD
757: 645 650 651 653, r44 -> p775, r2 -> p776 [p679] | MOVSX SEXT_DWORD_TO_QWORD
758: 645 646 647 653, r0 -> p772, r6 -> p777 [p643] | MOV ADD
759: 645 651 652 653, r6 -> p777, r2 -> p776, r6 -> p778 [p777], r49 -> p779 [p767] | SUB SUB
760: 645 652 653 654, r6 -> p778, r6 -> p780 [p778] | MOVSX SEXT_DWORD_TO_QWORD
761: 645 651 652 654, r1 -> p773, r2 -> p776, r1 -> p781 [p773], r49 -> p782 [p779] | SUB SUB
762: 645 652 653 654, r1 -> p781, r1 -> p783 [p781] | MOVSX SEXT_DWORD_TO_QWORD
763: 645 653 654 654, r1 -> p783, r1 -> p784 [p783] | LEA LEA
764: 646 651 655 655, r2 -> p776, r7 -> p785 [p763] | MOV LOAD
765: 646 647 648 655, r0 -> p772, r8 -> p786 [p668] | LEA LEA
766: 646 647 648 655, r9 -> p787 [p9] | XOR ADD
767: 646 647 648 655, r44 -> p788 [p775] | MOV SAVE_PC
768: 646 648 652 655, r44 -> p788, r10 -> p789 [p10] | MOV LOAD
769: 646 647 648 655, r44 -> p790 [p788] | MOV SAVE_PC
770: 646 648 652 655, r44 -> p790, r11 -> p791 [p11] | MOV LOAD
771: 646 647 648 655, r44 -> p792 [p790] | MOV SAVE_PC
772: 647 648 652 656, r44 -> p792, r3 -> p793 [p724] | MOV LOAD
773: 647 648 649 656 | JMP JMP_IMM
774: 647 648 652 656, r9 -> p787, r8 -> p786, r14 -> p794 [p729] | MOV LOAD
775: 647 652 653 656, r14 -> p794, r44 -> p795 [p792], r49 -> p796 [p782] | CMP SUB_IMM
776: 647 653 654 656, r49 -> p796 | J JMP_IMM
777: 659 660 661 661, r3 -> p793, r44 -> p797 [p795], r49 -> p798 [p796] | TEST AND_IMM
778: 659 661 662 662, r49 -> p798 | J JMP_IMM
779: 667 668 669 669, r0 -> p772, r6 -> p780, r0 -> p799 [p772], r49 -> p800 [p798] | ADD ADD
780: 667 668 669 669, r6 -> p780, r9 -> p787, r14 -> p801 [p794] | LEA LEA
781: 667 668 672 672, r9 -> p787, r1 -> p784, r45 -> p802 [p765] | CMP LOAD
782: 667 672 673 673, r45 -> p802, r44 -> p803 [p797], r49 -> p804 [p800] | CMP SUB
783: 667 673 674 674, r49 -> p804 | J JMP_IMM
784: 667 669 670 674, r14 -> p801, r9 -> p805 [p787] | MOV ADD
785: 667 670 674 674, r9 -> p805, r8 -> p786, r14 -> p806 [p801] | MOV LOAD
786: 667 674 675 675, r14 -> p806, r44 -> p807 [p803], r49 -> p808 [p804] | CMP SUB_IMM
787: 668 675 676 676, r49 -> p808 | J JMP_IMM
788: 681 682 683 683, r3 -> p793, r44 -> p809 [p807], r49 -> p810 [p808] | TEST AND_IMM
789: 681 683 684 684, r49 -> p810 | J JMP_IMM
790: 689 690 691 691, r0 -> p799, r6 -> p780, r0 -> p811 [p799], r49 -> p812 [p810] | ADD ADD
791: 689 690 691 691, r6 -> p780, r9 -> p805, r14 -> p813 [p806] | LEA LEA
792: 689 690 694 694, r9 -> p805, r1 -> p784, r45 -> p814 [p802] | CMP LOAD
793: 689 694 695 695, r45 -> p814, r44 -> p815 [p809], r49 -> p816 [p812] | CMP SUB
794: 689 695 696 696, r49 -> p816 | J JMP_IMM
795: 701 702 703 703, r44 -> p817 [p815] | MOV SAVE_PC
796: 701 703 704 704, r10 -> p789, r44 -> p817 | MOV STORE
797: 701 702 703 704 | JMP JMP_IMM
798: 701 702 706 706, r4 -> p771, r3 -> p818 [p793] | POP LOAD
799: 701 702 703 706, r4 -> p771, r4 -> p819 [p771] | POP ADD_IMM
800: 701 703 707 707, r4 -> p819, r14 -> p820 [p813] | POP LOAD
801: 701 703 704 707, r4 -> p819, r4 -> p821 [p819] | POP ADD_IMM
802: 701 704 708 708, r4 -> p821, r44 -> p822 [p817] | RET LOAD
803: 702 704 705 708, r4 -> p821, r4 -> p823 [p821] | RET ADD_IMM
804: 702 708 709 709, r44 -> p822 | RET JMP_REG
805: 702 703 704 709, r5 -> p750, r7 -> p824 [p785] | LEA LEA
806: 702 704 705 709, r7 -> p824, r0 -> p825 [p811] | MOVSX SEXT_DWORD_TO_QWORD
807: 702 705 709 709, r0 -> p825, r45 -> p826 [p814] | CMP LOAD
808: 702 709 710 710, r45 -> p826, r44 -> p827 [p822], r49 -> p828 [p816] | CMP SUB
809: 702 710 711 711, r49 -> p828 | J JMP_IMM
810: 702 703 704 711, r44 -> p829 [p827] | CALL SAVE_PC
811: 703 705 706 711, r4 -> p823, r4 -> p830 [p823] | CALL SUB_IMM
812: 703 706 707 711, r44 -> p829, r4 -> p830 | CALL STORE
813: 703 704 705 711 | CALL JMP_IMM
814: 703 707 708 711, r14 -> p820, r4 -> p830 | PUSH STORE
815: 703 706 707 711, r4 -> p830, r4 -> p831 [p830] | PUSH SUB_IMM
816: 703 707 708 711, r3 -> p818, r4 -> p831 | PUSH STORE
817: 703 707 708 712, r4 -> p831, r4 -> p832 [p831] | PUSH SUB_IMM
818: 703 704 705 712, r7 -> p824, r0 -> p833 [p825] | MOVSX SEXT_DWORD_TO_QWORD
819: 704 705 706 712, r0 -> p833, r0 -> p833, r1 -> p834 [p784] | LEA LEA
820: 704 705 706 712, r44 -> p835 [p829] | MOVSX SAVE_PC
821: 704 706 710 712, r44 -> p835, r44 -> p836 [p835] | MOVSX LOAD
822: 704 710 711 712, r44 -> p836, r2 -> p837 [p776] | MOVSX SEXT_DWORD_TO_QWORD
823: 704 705 706 712, r0 -> p833, r6 -> p838 [p780] | MOV ADD
824: 704 711 712 712, r6 -> p838, r2 -> p837, r6 -> p839 [p838], r49 -> p840 [p828] | SUB SUB
825: 704 712 713 713, r6 -> p839, r6 -> p841 [p839] | MOVSX SEXT_DWORD_TO_QWORD
826: 704 711 712 713, r1 -> p834, r2 -> p837, r1 -> p842 [p834], r49 -> p843 [p840] | SUB SUB
827: 705 712 713 713, r1 -> p842, r1 -> p844 [p842] | MOVSX SEXT_DWORD_TO_QWORD
828: 705 713 714 714, r1 -> p844, r1 -> p845 [p844] | LEA LEA
829: 705 711 715 715, r2 -> p837, r7 -> p846 [p824] | MOV LOAD
830: 705 706 707 715, r0 -> p833, r8 -> p847 [p786] | LEA LEA
831: 705 706 707 715, r9 -> p848 [p805] | XOR ADD
832: 705 706 707 715, r44 -> p849 [p836] | MOV SAVE_PC
833: 705 707 711 715, r44 -> p849, r10 -> p850 [p789] | MOV LOAD
834: 705 706 707 715, r44 -> p851 [p849] | MOV SAVE_PC
835: 706 707 711 715, r44 -> p851, r11 -> p852 [p791] | MOV LOAD
836: 706 707 708 715, r44 -> p853 [p851] | MOV SAVE_PC
837: 706 708 712 716, r44 -> p853, r3 -> p854 [p818] | MOV LOAD
838: 706 707 708 716 | JMP JMP_IMM
839: 706 707 711 716, r9 -> p848, r8 -> p847, r14 -> p855 [p820] | MOV LOAD
840: 706 711 712 716, r14 -> p855, r44 -> p856 [p853], r49 -> p857 [p843] | CMP SUB_IMM
841: 706 712 713 716, r49 -> p857 | J JMP_IMM
842: 718 719 720 720, r3 -> p854, r44 -> p858 [p856], r49 -> p859 [p857] | TEST AND_IMM
843: 718 720 721 721, r49 -> p859 | J JMP_IMM
844: 726 727 728 728, r0 -> p833, r6 -> p841, r0 -> p860 [p833], r49 -> p861 [p859] | ADD ADD
845: 726 727 728 728, r6 -> p841, r9 -> p848, r14 -> p862 [p855] | LEA LEA
846: 726 727 731 731, r9 -> p848, r1 -> p845, r45 -> p863 [p826] | CMP LOAD
847: 726 731 732 732, r45 -> p863, r44 -> p864 [p858], r49 -> p865 [p861] | CMP SUB
848: 726 732 733 733, r49 -> p865 | J JMP_IMM
849: 726 728 729 733, r14 -> p862, r9 -> p866 [p848] | MOV ADD
850: 726 729 733 733, r9 -> p866, r8 -> p847, r14 -> p867 [p862] | MOV LOAD
851: 726 733 734 734, r14 -> p867, r44 -> p868 [p864], r49 -> p869 [p865] | CMP SUB_IMM
852: 727 734 735 735, r49 -> p869 | J JMP_IMM
853: 727 728 729 735, r44 -> p870 [p868] | MOV SAVE_PC
854: 727 729 730 735, r10 -> p850, r44 -> p870 | MOV STORE
855: 727 733 734 735, r7 -> p846, r14 -> p867, r7 -> p871 [p846], r49 -> p872 [p869] | XOR XOR
856: 727 734 735 735, r7 -> p871, r44 -> p873 [p870], r49 -> p874 [p872] | TEST AND_IMM
857: 727 735 736 736, r49 -> p874 | J JMP_IMM
858: 741 742 746 746, r4 -> p832, r3 -> p875 [p854] | POP LOAD
859: 741 742 743 746, r4 -> p832, r4 -> p876 [p832] | POP ADD_IMM
860: 741 743 747 747, r4 -> p876, r14 -> p877 [p867] | POP LOAD
861: 741 743 744 747, r4 -> p876, r4 -> p878 [p876] | POP ADD_IMM
862: 741 744 748 748, r4 -> p878, r44 -> p879 [p873] | RET LOAD
863: 741 744 745 748, r4 -> p878, r4 -> p880 [p878] | RET ADD_IMM
864: 741 748 749 749, r44 -> p879 | RET JMP_REG
865: 741 742 743 749, r5 -> p750, r7 -> p881 [p871] | LEA LEA
866: 742 743 744 749, r7 -> p881, r0 -> p882 [p860] | MOVSX SEXT_DWORD_TO_QWORD
867: 742 744 748 749, r0 -> p882, r45 -> p883 [p863] | CMP LOAD
868: 742 748 749 749, r45 -> p883, r44 -> p884 [p879], r49 -> p885 [p874] | CMP SUB
869: 742 749 750 750, r49 -> p885 | J JMP_IMM
870: 742 743 744 750, r44 -> p886 [p884] | CALL SAVE_PC
871: 742 745 746 750, r4 -> p880, r4 -> p887 [p880] | CALL SUB_IMM
872: 742 746 747 750, r44 -> p886, r4 -> p887 | CALL STORE
873: 742 743 744 750 | CALL JMP_IMM
874: 743 747 748 750, r14 -> p877, r4 -> p887 | PUSH STORE
875: 743 746 747 750, r4 -> p887, r4 -> p888 [p887] | PUSH SUB_IMM
876: 743 747 748 750, r3 -> p875, r4 -> p888 | PUSH STORE
877: 743 747 748 751, r4 -> p888, r4 -> p889 [p888] | PUSH SUB_IMM
878: 743 744 745 751, r7 -> p881, r0 -> p890 [p882] | MOVSX SEXT_DWORD_TO_QWORD
879: 743 745 746 751, r0 -> p890, r0 -> p890, r1 -> p891 [p845] | LEA LEA
880: 743 744 745 751, r44 -> p892 [p886] | MOVSX SAVE_PC
881: 743 745 749 751, r44 -> p892, r44 -> p893 [p892] | MOVSX LOAD
882: 744 749 750 751, r44 -> p893, r2 -> p894 [p837] | MOVSX SEXT_DWORD_TO_QWORD
883: 744 745 746 751, r0 -> p890, r6 -> p895 [p841] | MOV ADD
884: 744 750 751 751, r6 -> p895, r2 -> p894, r6 -> p896 [p895], r49 -> p897 [p885] | SUB SUB
885: 744 751 752 752, r6 -> p896, r6 -> p898 [p896] | MOVSX SEXT_DWORD_TO_QWORD
886: 744 750 751 752, r1 -> p891, r2 -> p894, r1 -> p899 [p891], r49 -> p900 [p897] | SUB SUB
887: 744 751 752 752, r1 -> p899, r1 -> p901 [p899] | MOVSX SEXT_DWORD_TO_QWORD
888: 744 752 753 753, r1 -> p901, r1 -> p902 [p901] | LEA LEA
889: 744 750 754 754, r2 -> p894, r7 -> p903 [p881] | MOV LOAD
890: 745 746 747 754, r0 -> p890, r8 -> p904 [p847] | LEA LEA
891: 745 746 747 754, r9 -> p905 [p866] | XOR ADD
892: 745 746 747 754, r44 -> p906 [p893] | MOV SAVE_PC
893: 745 747 751 754, r44 -> p906, r10 -> p907 [p850] | MOV LOAD
894: 745 746 747 754, r44 -> p908 [p906] | MOV SAVE_PC
895: 745 747 751 754, r44 -> p908, r11 -> p909 [p852] | MOV LOAD
896: 745 746 747 754, r44 -> p910 [p908] | MOV SAVE_PC
897: 745 747 751 755, r44 -> p910, r3 -> p911 [p875] | MOV LOAD
898: 746 747 748 755 | JMP JMP_IMM
899: 746 747 751 755, r9 -> p905, r8 -> p904, r14 -> p912 [p877] | MOV LOAD
900: 746 751 752 755, r14 -> p912, r44 -> p913 [p910], r49 -> p914 [p900] | CMP SUB_IMM
901: 746 752 753 755, r49 -> p914 | J JMP_IMM
902: 746 748 749 755, r44 -> p915 [p913] | MOV SAVE_PC
903: 746 751 752 755, r10 -> p907, r44 -> p915 | MOV STORE
904: 746 754 755 755, r7 -> p903, r14 -> p912, r7 -> p916 [p903], r49 -> p917 [p914] | XOR XOR
905: 746 755 756 756, r7 -> p916, r44 -> p918 [p915], r49 -> p919 [p917] | TEST AND_IMM
906: 747 756 757 757, r49 -> p919 | J JMP_IMM
907: 747 748 749 757, r45 -> p920 [p883] | CMP SAVE_PC
908: 747 749 753 757, r45 -> p920, r45 -> p921 [p920] | CMP LOAD
909: 747 753 754 757, r45 -> p921, r44 -> p922 [p918], r49 -> p923 [p919] | CMP SUB_IMM
910: 747 754 755 757, r49 -> p923 | J JMP_IMM
911: 747 751 752 757, r14 -> p912, r44 -> p924 [p922], r49 -> p925 [p923] | CMP SUB_IMM
912: 747 752 753 757, r49 -> p925 | J JMP_IMM
913: 747 751 752 757, r14 -> p912, r1 -> p926 [p902] | LEA LEA
914: 748 752 753 758, r1 -> p926, r44 -> p927 [p924], r49 -> p928 [p925] | CMP SUB_IMM
915: 748 753 754 758, r49 -> p928 | J JMP_IMM
916: 759 760 761 761, r44 -> p929 [p927] | MOV ADD_IMM
917: 759 760 761 761, r45 -> p930 [p921] | MOV SAVE_PC
918: 759 761 762 762, r44 -> p929, r45 -> p930 | MOV STORE
919: 759 760 761 762, r10 -> p907, r1 -> p931 [p926] | MOVSX SEXT_DWORD_TO_QWORD
920: 759 761 762 762, r1 -> p931, r1 -> p931, r1 -> p932 [p931] | LEA LEA
921: 759 760 761 762, r44 -> p933 [p929] | MOV SAVE_PC
922: 759 761 765 765, r44 -> p933, r10 -> p934 [p907] | MOV LOAD
923: 759 760 761 765, r44 -> p935 [p933] | MOV SAVE_PC
924: 760 761 765 765, r44 -> p935, r2 -> p936 [p894] | MOV LOAD
925: 760 765 766 766, r1 -> p932, r2 -> p936, r44 -> p937 [p935] | MOV LEA
926: 760 766 767 767, r10 -> p934, r44 -> p937 | MOV STORE
927: 760 761 762 767, r44 -> p938 [p937] | MOVSX SAVE_PC
928: 760 762 766 767, r44 -> p938, r44 -> p939 [p938] | MOVSX LOAD
929: 760 766 767 767, r44 -> p939, r1 -> p940 [p932] | MOVSX SEXT_DWORD_TO_QWORD
930: 760 767 768 768, r1 -> p940, r1 -> p940, r1 -> p941 [p940] | LEA LEA
931: 760 761 762 768, r44 -> p942 [p939] | MOV SAVE_PC
932: 761 762 766 768, r44 -> p942, r2 -> p943 [p936] | MOV LOAD
933: 761 768 769 769, r1 -> p941, r2 -> p943, r44 -> p944 [p942] | MOV LEA
934: 761 769 770 770, r0 -> p890, r44 -> p944 | MOV STORE
935: 761 762 763 770, r44 -> p945 [p944] | MOVSX SAVE_PC
936: 761 763 767 770, r44 -> p945, r44 -> p946 [p945] | MOVSX LOAD
937: 761 767 768 770, r44 -> p946, r0 -> p947 [p890] | MOVSX SEXT_DWORD_TO_QWORD
938: 761 768 769 770, r0 -> p947, r0 -> p947, r0 -> p948 [p947] | LEA LEA
939: 761 762 763 770, r44 -> p949 [p946] | MOV SAVE_PC
940: 762 763 767 770, r44 -> p949, r1 -> p950 [p941] | MOV LOAD
941: 762 769 770 770, r0 -> p948, r1 -> p950, r44 -> p951 [p949] | MOV LEA
942: 762 770 771 771, r14 -> p912, r44 -> p951 | MOV STORE
943: 762 763 764 771, r44 -> p952 [p951] | MOVSX SAVE_PC
944: 762 764 768 771, r44 -> p952, r44 -> p953 [p952] | MOVSX LOAD
945: 762 768 769 771, r44 -> p953, r0 -> p954 [p948] | MOVSX SEXT_DWORD_TO_QWORD
946: 762 769 770 771, r0 -> p954, r0 -> p954, r0 -> p955 [p954] | LEA LEA
947: 762 763 764 771, r44 -> p956 [p953] | MOV SAVE_PC
948: 763 764 768 771, r44 -> p956, r1 -> p957 [p950] | MOV LOAD
949: 763 770 771 771, r0 -> p955, r1 -> p957, r44 -> p958 [p956] | MOV LEA
950: 763 771 772 772, r44 -> p958 | MOV STORE
951: 763 764 765 772, r44 -> p959 [p958] | MOVSX SAVE_PC
952: 763 765 769 772, r44 -> p959, r44 -> p960 [p959] | MOVSX LOAD
953: 763 769 770 772, r44 -> p960, r0 -> p961 [p955] | MOVSX SEXT_DWORD_TO_QWORD
954: 763 770 771 772, r0 -> p961, r0 -> p961, r0 -> p962 [p961] | LEA LEA
955: 763 764 765 772, r44 -> p963 [p960] | MOV SAVE_PC
956: 764 765 769 772, r44 -> p963, r1 -> p964 [p957] | MOV LOAD
957: 764 771 772 772, r0 -> p962, r1 -> p964, r44 -> p965 [p963] | MOV LEA
958: 764 772 773 773, r44 -> p965 | MOV STORE
959: 764 765 766 773, r44 -> p966 [p965] | MOVSX SAVE_PC
960: 764 766 770 773, r44 -> p966, r44 -> p967 [p966] | MOVSX LOAD
961: 764 770 771 773, r44 -> p967, r0 -> p968 [p962] | MOVSX SEXT_DWORD_TO_QWORD
962: 764 771 772 773, r0 -> p968, r0 -> p968, r0 -> p969 [p968] | LEA LEA
963: 764 765 766 773, r44 -> p970 [p967] | MOV SAVE_PC
964: 765 766 770 773, r44 -> p970, r1 -> p971 [p964] | MOV LOAD
965: 765 772 773 773, r0 -> p969, r1 -> p971, r44 -> p972 [p970] | MOV LEA
966: 765 773 774 774, r44 -> p972 | MOV STORE
967: 765 766 767 774, r44 -> p973 [p972] | INC SAVE_PC
968: 765 767 771 774, r44 -> p973, r44 -> p974 [p973] | INC LOAD
969: 765 771 772 774, r44 -> p974, r44 -> p975 [p974] | INC ADD_IMM
970: 765 766 767 774, r45 -> p976 [p930] | INC SAVE_PC
971: 765 772 773 774, r44 -> p975, r45 -> p976 | INC STORE
972: 766 767 771 774, r4 -> p889, r3 -> p977 [p911] | POP LOAD
973: 766 767 768 774, r4 -> p889, r4 -> p978 [p889] | POP ADD_IMM
974: 766 768 772 775, r4 -> p978, r14 -> p979 [p912] | POP LOAD
975: 766 768 769 775, r4 -> p978, r4 -> p980 [p978] | POP ADD_IMM
976: 766 769 773 775, r4 -> p980, r44 -> p981 [p975] | RET LOAD
977: 766 769 770 775, r4 -> p980, r4 -> p982 [p980] | RET ADD_IMM
978: 766 773 774 775, r44 -> p981 | RET JMP_REG
979: 766 767 768 775 | JMP JMP_IMM
980: 767 768 769 775, r12 -> p734, r12 -> p983 [p734], r49 -> p984 [p928] | ADD ADD_IMM
981: 767 770 774 775, r4 -> p982, r45 -> p985 [p976] | CMP LOAD
982: 767 774 775 776, r15 -> p752, r45 -> p985, r44 -> p986 [p981], r49 -> p987 [p984] | CMP SUB
983: 767 775 776 776, r49 -> p987 | J JMP_IMM
984: 767 768 769 776, r44 -> p988 [p986] | MOV SAVE_PC
985: 767 769 773 776, r44 -> p988, r0 -> p989 [p969] | MOV LOAD
986: 767 773 774 776, r0 -> p989, r44 -> p990 [p988], r49 -> p991 [p987] | CMP SUB_IMM
987: 767 774 775 776, r49 -> p991 | J JMP_IMM
988: 768 769 770 776, r44 -> p992 [p990] | MOV SAVE_PC
989: 768 770 774 776, r44 -> p992, r1 -> p993 [p971] | MOV LOAD
990: 768 774 775 777, r1 -> p993, r44 -> p994 [p992], r49 -> p995 [p991] | CMP SUB_IMM
991: 768 775 776 777, r49 -> p995 | J JMP_IMM
992: 781 782 786 786, r12 -> p983, r44 -> p996 [p994] | MOVSX LOAD
993: 781 786 787 787, r44 -> p996, r13 -> p997 [p747] | MOVSX SEXT_DWORD_TO_QWORD
994: 781 787 788 788, r13 -> p997, r13 -> p997, r44 -> p998 [p996], r49 -> p999 [p995] | TEST AND
995: 781 788 789 789, r49 -> p999 | J JMP_IMM
996: 781 787 788 789, r13 -> p997, r5 -> p1000 [p750] | MOV ADD
997: 781 782 783 789, r44 -> p1001 [p998] | MOV SAVE_PC
998: 781 788 789 789, r5 -> p1000, r44 -> p1001 | MOV STORE
999: 781 782 783 789, r15 -> p752, r15 -> p1002 [p752] | INC ADD_IMM
1000: 782 787 791 791, r13 -> p997, r1 -> p1003 [p993] | MOV LOAD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 750
TotalCycles: 792
uIPC: 1.26263
